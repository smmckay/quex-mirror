/* Strexemo: String originating in Lexemes which are 'observed'
 *           ===                   ====               =                       */
#ifndef __QUEX_INCLUDE_GUARD__OBSERVED_STRING__QUEX_STRING
#define __QUEX_INCLUDE_GUARD__OBSERVED_STRING__QUEX_STRING
/*  
 *  [ y == 23 ) { print 34; }]
 *    |    |      |     |
 *    |    |      |     \.. str0
 *    |    |      \........ str1
 *    |    \............... str2
 *    \.................... str3
 *
 *  Strexemos are located in token.
 *
 * /                   
typedef struct QUEX_SETTING_USER_CLASS_DECLARATION_EPILOG QUEX_NAME_TOKEN(Strexemo_tag) {
    QUEX_TYPE_LEXATOM* begin;
    QUEX_TYPE_LEXATOM* end;
} QUEX_NAME_TOKEN(Strexemo); 

Strexemo_construct(Strexemo*, ...);
Strexemo_destruct(Strexemo*);
Strexemo_strcmp(Strexemo* me, const Strexemo* Other); 
Strexemo_strcmp(Strexemo* me, const QUEX_TYPE_LEXATOM* Begin, const QUEX_TYPE_LEXATOM* End);
Strexemo_find(Strexemo*, QUEX_TYPE_LEXATOM*);
Strexemo_findx(Strexemo*, Strexemo*);
Strexemo_atoi(Strexemo*);
Strexemo_atof(Strexemo*);
Strexemo_crc8(Strexemo*);
Strexemo_crc16(Strexemo*);
Strexemo_crc32(Strexemo*);

typedef struct QUEX_SETTING_USER_CLASS_DECLARATION_EPILOG {
   StrexemoPool  head;
} StrexemoObserver;

Strexemo*
StrexemoObserver_new(StrexemoObserver*,       
                     const QUEX_TYPE_LEXATOM* LexemeBegin, 
                     const QUEX_TYPE_LEXATOM* LexemeEnd);
StrexemoObserver_isolate(StrexemoObserver*, Strexemo*);
StrexemoObserver_isolate_unique(StrexemoObserver*, Strexemo*); // *> use crc
StrexemoObserver_release(StrexemoObserver*, Strexemo*);
StrexemoObserver_relocate(StrexemoObserver*);

Strexemo*
StrexemoObserver_new(StrexemoObserver*,       
                     const QUEX_TYPE_LEXATOM* LexemeBegin, 
                     const QUEX_TYPE_LEXATOM* LexemeEnd)
{
    Strexemo new_p = MemoryManager_allocate(..);
    if( ! new_p ) return (Strexemo*)0;
    Strexemo_construct(new_p, LexemeBegin, LexemeEnd);
    
    return new_p;
}

StrexemoObserver_delete(Strexemo* object)
{
    remove_from_list(me->first, object);
}

int
Strexemo_cmp(Strexemo* A, AStr* B)
{
   QUEX_TYPE_LEXATOM* it0 = A->begin;
   QUEX_TYPE_LEXATOM* it0 = A->begin;
   QUEX_TYPE_LEXATOM* it1 = B->begin;
   QUEX_TYPE_LEXATOM* it1 = B->begin;

    for(; *it0 == *it1; ++it0, ++it1) {
        /* Both letters are the same and == 0?
         * => both reach terminall zero without being different. */
        if( *it0 == 0 ) return 0;
    }
    return (size_t)(*it0) - (size_t)(*it1);
}

Strexemo*
Strexemo_construct(Strexemo*                me,   
                   StrexemoObserver*        observer, 
                   const QUEX_TYPE_LEXATOM* LexemeBegin, 
                   const QUEX_TYPE_LEXATOM* LexemeEnd)
{
    me->begin = LBegin;
    me->end   = LEnd;
    ++(me->end);
}

StrexemoObserver_StringList_new()
{
    StrexemoList* result = MemMan_StrexemoList_allocate();

    result->begin      = MemMan_QstrArray_allocate();
    result->end        = result->begin;
    result->memory_end = result->begin + size;
}

#endif /* __QUEX_INCLUDE_GUARD__OBSERVED_STRING__QUEX_STRING */
