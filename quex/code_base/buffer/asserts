/* -*- C++ -*- vim: set syntax=cpp: */
#ifndef __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS
#define __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS

#ifndef QUEX_OPTION_ASSERTS

#    define QUEX_BUFFER_ASSERT_pointers_in_range(B)    /* empty */
#    define QUEX_BUFFER_ASSERT_CONSISTENCY(B)          /* empty */
#    define QUEX_BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE(Begin, End) /* empty */

#else
#    include <quex/code_base/definitions>
#    include <quex/code_base/buffer/Buffer>

QUEX_NAMESPACE_MAIN_OPEN

typedef struct {
    const QUEX_TYPE_LEXATOM*   front_p;
    const QUEX_TYPE_LEXATOM*   back_p;
    const QUEX_TYPE_LEXATOM*   read_p;
    const QUEX_TYPE_LEXATOM*   end_p;
    const QUEX_TYPE_LEXATOM*   lexeme_start_p;
    QUEX_TYPE_STREAM_POSITION  lexatom_index_begin;
    QUEX_TYPE_STREAM_POSITION  read_lexatom_index;
} QUEX_NAME(BufferInvariance);

QUEX_INLINE void QUEX_NAME(BufferInvariance_construct)(QUEX_NAME(BufferInvariance)* me, 
                                                       QUEX_NAME(Buffer)*           subject);
QUEX_INLINE void QUEX_NAME(BufferInvariance_assert)(QUEX_NAME(BufferInvariance)* me, 
                                                    QUEX_NAME(Buffer)*           subject,
                                                    bool                         SameF);

#define QUEX_ASSERT_BUFFER_IVARIANCE_SETUP(BI, ME)           \
        QUEX_NAME(BufferInvariance) (BI);                    \
        QUEX_NAME(BufferInvariance_construct)(&(BI), (ME));  \
        (void)bi;                                            \
        QUEX_BUFFER_ASSERT_CONSISTENCY(subject);

#define QUEX_ASSERT_BUFFER_IVARIANCE_VERIFY(BI, ME)          \
        QUEX_BUFFER_ASSERT_CONSISTENCY(subject);             \
        QUEX_NAME(BufferInvariance_assert)(&(BI), (ME), false);

#define QUEX_ASSERT_BUFFER_IVARIANCE_VERIFY_SAME(BI, ME)     \
        QUEX_BUFFER_ASSERT_CONSISTENCY(subject);             \
        QUEX_NAME(BufferInvariance_assert)(&(BI), (ME), true);

#define QUEX_BUFFER_ASSERT_pointers_in_range    QUEX_NAME(BUFFER_ASSERT_pointers_in_range_core)
#define QUEX_BUFFER_ASSERT_limit_codes_in_place QUEX_NAME(BUFFER_ASSERT_limit_codes_in_place_core)
#define QUEX_BUFFER_ASSERT_CONSISTENCY          QUEX_NAME(BUFFER_ASSERT_CONSISTENCY_core)
#define QUEX_BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE QUEX_NAME(BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE_core)

QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_pointers_in_range_core)(QUEX_NAME(Buffer)* B);                 
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_limit_codes_in_place_core)(QUEX_NAME(Buffer)* B);
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_CONSISTENCY_core)(QUEX_NAME(Buffer)* B);                                            
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE_core)(const QUEX_TYPE_LEXATOM* Begin, 
                                                                     const QUEX_TYPE_LEXATOM* End);

QUEX_NAMESPACE_MAIN_CLOSE

#endif

#endif /* __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS */
