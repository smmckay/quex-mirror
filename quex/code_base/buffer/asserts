/* -*- C++ -*- vim: set syntax=cpp: */
#ifndef QUEX_INCLUDE_GUARD__BUFFER__ASSERTS
#define QUEX_INCLUDE_GUARD__BUFFER__ASSERTS

#ifndef QUEX_OPTION_ASSERTS

#define QUEX_NAME(BUFFER_ASSERT_INVARIANCE_SETUP)(BI, ME)       /* empty */    
#define QUEX_NAME(BUFFER_ASSERT_INVARIANCE_VERIFY)(BI, ME)      /* empty */    
#define QUEX_NAME(BUFFER_ASSERT_INVARIANCE_VERIFY_SAME)(BI, ME) /* empty */    
#define QUEX_NAME(Buffer_assert_pointers_in_range)(ME)          /* empty */
#define QUEX_NAME(Buffer_assert_consistency)(ME)                /* empty */
#define QUEX_NAME(Buffer_member_functions_assert)(ME)           /* empty */

#else
$$INC: definitions$$
$$INC: buffer/Buffer$$

QUEX_NAMESPACE_MAIN_OPEN

QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_INVARIANCE_SETUP)(QUEX_NAME(BufferInvariance)* bi, 
                                                           QUEX_NAME(Buffer)*           me);
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_INVARIANCE_VERIFY)(QUEX_NAME(BufferInvariance)* bi, 
                                                            QUEX_NAME(Buffer)*           me);
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_INVARIANCE_VERIFY_SAME)(QUEX_NAME(BufferInvariance)* bi, 
                                                                 QUEX_NAME(Buffer)*           me);

QUEX_INLINE void QUEX_NAME(Buffer_assert_pointers_in_range)(const QUEX_NAME(Buffer)* B);                 
QUEX_INLINE void QUEX_NAME(Buffer_assert_limit_codes_in_place)(const QUEX_NAME(Buffer)* B);
QUEX_INLINE void QUEX_NAME(Buffer_assert_consistency)(const QUEX_NAME(Buffer)* B);                                            
QUEX_INLINE void QUEX_NAME(Buffer_assert_no_lexatom_is_buffer_border)(const QUEX_TYPE_LEXATOM* Begin, 
                                                                      const QUEX_TYPE_LEXATOM* End);
QUEX_INLINE void QUEX_NAME(Buffer_member_functions_assert)(const QUEX_NAME(Buffer)* me);

QUEX_NAMESPACE_MAIN_CLOSE

#endif

#endif /* QUEX_INCLUDE_GUARD__BUFFER__ASSERTS */
