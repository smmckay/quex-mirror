QUEX_INLINE void
QUEX_NAME($$SOURCE_ENCODING$$_char_character)(const QUEX_TYPE_LEXATOM** source_pp, char** drain_pp)  
{
    switch( sizeof(char) )
    {
    case 1:
        QUEX_CONVERTER_CHAR($$SOURCE_ENCODING$$, utf8)(source_pp, (uint8_t**)drain_pp);
        break;
    case 2:
        QUEX_CONVERTER_CHAR($$SOURCE_ENCODING$$, utf16)(source_pp, (uint16_t**)drain_pp);
        break;
    case 4:
        QUEX_CONVERTER_CHAR($$SOURCE_ENCODING$$, utf32)(source_pp, (uint32_t**)drain_pp);
        break;
    default:
        __quex_assert(false); /* Cannot be handled */
    }
}

QUEX_INLINE void
QUEX_NAME($$SOURCE_ENCODING$$_pretty_char_character)(const QUEX_TYPE_LEXATOM** source_pp, char** drain_pp)  
{
    char* write_p = *drain_pp;

    QUEX_CONVERTER_CHAR($$SOURCE_ENCODING$$,char)(source_pp, drain_pp);
   
    switch( *write_p ) { 
    case (int)'\n': *write_p++ = (char)'\\'; *write_p = (char)'n'; break;
    case (int)'\t': *write_p++ = (char)'\\'; *write_p = (char)'t'; break;
    case (int)'\r': *write_p++ = (char)'\\'; *write_p = (char)'r'; break;
    case (int)'\a': *write_p++ = (char)'\\'; *write_p = (char)'a'; break;
    case (int)'\b': *write_p++ = (char)'\\'; *write_p = (char)'b'; break;
    case (int)'\f': *write_p++ = (char)'\\'; *write_p = (char)'f'; break;
    case (int)'\v': *write_p++ = (char)'\\'; *write_p = (char)'v'; break;
    default: /* 'drain_pp' has been adapted by converter!       */ return;
    }
    /* 'drain_pp' is set to the post-adapted position.          */
    *drain_pp = &write_p[1];
}


#if ! defined(__QUEX_OPTION_WCHAR_T_DISABLED)
QUEX_INLINE void
QUEX_NAME($$SOURCE_ENCODING$$_wchar_character)(const QUEX_TYPE_LEXATOM** source_pp, wchar_t** drain_pp)  
{
    switch( sizeof(wchar_t) )
    {
    case 1:
        QUEX_NAME($$SOURCE_ENCODING$$_utf8_character)(source_pp, (uint8_t**)drain_pp);
        break;
    case 2:
        QUEX_NAME($$SOURCE_ENCODING$$_utf16_character)(source_pp, (uint16_t**)drain_pp);
        break;
    case 4:
        QUEX_NAME($$SOURCE_ENCODING$$_utf32_character)(source_pp, (uint32_t**)drain_pp);
        break;
    default:
        __quex_assert(false); /* Cannot be handled */
    }
}
#endif

