/* -*- C++ -*-   vim: set syntax=cpp: 
 * (C) 2004-2017 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY
 */
#ifndef __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$
#define __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$

/* For '--token-class-only' the following option may not come directly
 * from the configuration file.                                        */
#ifndef    __QUEX_OPTION_PLAIN_C
#   define __QUEX_OPTION_PLAIN_C
#endif
#include <quex/code_base/definitions>
#include <quex/code_base/asserts>
#include <quex/code_base/compatibility/stdint.h>
#include <quex/code_base/MemoryManager>

$$HELPER_DEFINITIONS$$
#include <quex/code_base/lexeme>

$$HEADER$$
 
typedef struct QUEX_SETTING_USER_CLASS_DECLARATION_EPILOG $TOKEN_CLASS_tag {
    QUEX_TYPE_TOKEN_ID    id;
$$DISTINCT_MEMBERS$$
$$UNION_MEMBERS$$
#   ifdef     QUEX_OPTION_TOKEN_STAMPING_WITH_LINE_AND_COLUMN
#       ifdef QUEX_OPTION_COUNTER_LINE
        QUEX_TYPE_TOKEN_LINE_N    _line_n;
#       endif
#       ifdef  QUEX_OPTION_COUNTER_COLUMN
        QUEX_TYPE_TOKEN_COLUMN_N  _column_n;
#       endif
#   endif
$$BODY$$
} $TOKEN_CLASS;

QUEX_INLINE void         $TOKEN_CLASS_construct($TOKEN_CLASS*);
QUEX_INLINE void         $TOKEN_CLASS_copy_construct($TOKEN_CLASS*, 
                                                     const $TOKEN_CLASS*);
QUEX_INLINE void         $TOKEN_CLASS_copy($TOKEN_CLASS*, const $TOKEN_CLASS*);
QUEX_INLINE void         $TOKEN_CLASS_destruct($TOKEN_CLASS*);

/* NOTE: Setters and getters as in the C++ version of the token class are not
 *       necessary, since the members are accessed directly.                   */

QUEX_INLINE void         $TOKEN_CLASS_set($TOKEN_CLASS*            me, 
                                          const QUEX_TYPE_TOKEN_ID ID);

QUEX_INLINE const char*  $TOKEN_CLASS_map_id_to_name(const QUEX_TYPE_TOKEN_ID);

#ifdef QUEX_OPTION_TOKEN_TAKE_TEXT_SUPPORT
QUEX_INLINE bool         $TOKEN_CLASS_take_text($TOKEN_CLASS*            me, 
                                                const QUEX_TYPE_LEXATOM* Begin, 
                                                const QUEX_TYPE_LEXATOM* End);
#endif

#ifdef QUEX_OPTION_TOKEN_REPETITION_SUPPORT
QUEX_INLINE size_t       $TOKEN_CLASS_repetition_n_get($TOKEN_CLASS*);
QUEX_INLINE void         $TOKEN_CLASS_repetition_n_set($TOKEN_CLASS*, size_t);
#endif /* QUEX_OPTION_TOKEN_REPETITION_SUPPORT */

$$LEXEME_NULL_DECLARATION$$

#endif /* __QUEX_INCLUDE_GUARD__TOKEN__GENERATED__$$INCLUDE_GUARD_EXTENSION$$ */
