/* -*- C++ -*- vim: set syntax=cpp: */
#ifndef QUEX_INCLUDE_GUARD__QUEX__MEMORY_MANAGER
#define QUEX_INCLUDE_GUARD__QUEX__MEMORY_MANAGER

#include <stddef.h>
$$INC: quex/enums$$
$$INC: quex/compatibility/stdint.h$$
$$INC: quex/compatibility/stdbool.h$$


QUEX_NAMESPACE_QUEX_OPEN

extern uint8_t*
QUEX_NAME_LIB(MemoryManager_allocate)(const size_t ByteN, E_MemoryObjectType);

extern uint8_t*
QUEX_NAME_LIB(MemoryManager_reallocate)(void*              old_memory,
                                     const size_t       NewByteN, 
                                     E_MemoryObjectType Type);

extern void 
QUEX_NAME_LIB(MemoryManager_free)(void* Obj, E_MemoryObjectType);

extern size_t
QUEX_NAME_LIB(MemoryManager_insert)(uint8_t* drain_begin_p,  uint8_t* drain_end_p,
                                 uint8_t* source_begin_p, uint8_t* source_end_p);

extern char*
QUEX_NAME_LIB(MemoryManager_clone_string)(const char* String);

extern bool 
QUEX_NAME_LIB(system_is_little_endian)(void);

extern void
QUEX_NAME_LIB(print_relative_positions)(const void* Begin,       const void* End, 
                                        size_t      ElementSize, const void* P);

extern ptrdiff_t
QUEX_NAME_LIB(strlcpy)(char* Dest, const char* Src, size_t MaxN);

QUEX_NAMESPACE_QUEX_CLOSE
 
#endif /* QUEX_INCLUDE_GUARD__QUEX__MEMORY_MANAGER */
