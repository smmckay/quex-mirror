/* -*- C++ -*-   vim:set syntax=cpp:
 * 
 * PURPOSE: Gavaging -- Running lexical analysis based on content that is fed
 *                      via direct access to the analyzer's internal buffer.
 *
 * See file 'Gavager.i' for detailed description.
 * 
 * (C) 2016 Frank-Rene Schaefer.                                             */
#ifndef __QUEX_INCLUDE_GUARD__ANALYZER__ADAPTORS__GAVAGER
#define __QUEX_INCLUDE_GUARD__ANALYZER__ADAPTORS__GAVAGER
#
#ifndef QUEX_TYPE_ANALYZER
#   error "This header must be included after the lexical analyzer definition."
#endif
#ifndef QUEX_TYPE_TOKEN
#   error "This header must be included after the token class definition."
#endif

#include <quex/code_base/analyzer/adaptors/Feeder>

QUEX_NAMESPACE_MAIN_OPEN

#define QUEX_TYPE_GAVAGER QUEX_NAME(Gavager) 

#ifdef __QUEX_OPTION_PLAIN_
#   define QUEX_TYPE_GAVAGER_TAG QUEX_NAME(Feeder_tag)
typedef struct QUEX_SETTING_USER_CLASS_DECLARATION_EPILOG QUEX_TYPE_GAVAGER_TAG {
#else
struct QUEX_SETTING_USER_CLASS_DECLARATION_EPILOG QUEX_TYPE_GAVAGER {
#endif

    QUEX_NAME(FeederBase)  base;

#ifndef __QUEX_OPTION_PLAIN_C
public:
    QUEX_TYPE_GAVAGER(QUEX_TYPE_ANALYZER*, QUEX_TYPE_TOKEN_ID);
    void              access(void**       begin_p, 
                             const void** end_p);
    bool              gavage(ptrdiff_t    ReceivedN);
    QUEX_TYPE_TOKEN*  deliver();
};
#else
    void              (*access)(QUEX_TYPE_GAVAGER* me,
                                void**       begin_p, 
                                const void** end_p);
    bool              (*gavage)(QUEX_TYPE_GAVAGER* me, 
                                ptrdiff_t              ReceivedN);
    QUEX_TYPE_TOKEN*  (*deliver)(QUEX_TYPE_GAVAGER* me);
} QUEX_TYPE_GAVAGER;
#endif

QUEX_INLINE void  QUEX_NAME(Gavager_construct)(QUEX_TYPE_GAVAGER*   me, 
                                               QUEX_TYPE_ANALYZER*  lexer,
                                               QUEX_TYPE_TOKEN_ID   StreamTerminatingTokenId);
QUEX_INLINE void  QUEX_NAME(Gavager_access)(QUEX_TYPE_GAVAGER* me,
                                            void**       begin_p, 
                                            const void** end_p);
QUEX_INLINE bool  QUEX_NAME(Gavager_gavage)(QUEX_TYPE_GAVAGER* me, 
                                            ptrdiff_t          ReceivedN);
QUEX_INLINE QUEX_TYPE_TOKEN*  
                  QUEX_NAME(Gavager_deliver)(QUEX_TYPE_GAVAGER* me);

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__ANALYZER__ADAPTORS__GAVAGER */
