{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.092204; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1479757922L;
result_list: [
  [ 1; OK; 0.089408; 0; ]
  [ 2; OK; 0.089238; 0; ]
  [ 3; OK; 0.085124; 0; ]
  [ 4; OK; 0.087575; 0; ]
  [ 5; OK; 0.102689; 0; ]
  [ 6; OK; 0.095981; 0; ]
  [ 7; OK; 0.094856; 0; ]
  [ 8; OK; 0.100155; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.059166; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.056951; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.051795; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1479757922L;
result_list: [
  [ 1; OK; 0.056012; 0; ]
  [ 2; OK; 0.061112; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1479757922L;
result_list: [
  [ Normal; OK; 0.682568; 0; ]
  [ BeginOfLine; OK; 0.677549; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ Same; OK; 0.354670; 0; ]
  [ Different; OK; 1.032716; 0; ]
  [ TwoSet; OK; 0.368844; 0; ]
  [ Grid; OK; 0.321620; 0; ]
  [ Grid-BOL; OK; 0.334789; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1479757922L;
result_list: [
  [ UTF8; OK; 2.820631; 0; ]
  [ UTF16; OK; 1.185461; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.618718; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.558882; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.143448; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.186604; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.078790; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1479757922L;
result_list: [
  [ linear; OK; 0.591179; 0; ]
  [ butterfly; OK; 4.596897; 0; ]
  [ long_loop; OK; 0.499641; 0; ]
  [ nested_loop; OK; 0.109325; 0; ]
  [ mini_loop; OK; 0.055796; 0; ]
  [ fork; OK; 0.464858; 0; ]
  [ fork2; OK; 0.103955; 0; ]
  [ fork3; OK; 3.426466; 0; ]
  [ fork4; OK; 3.771825; 0; ]
  [ tree; OK; 3.526851; 0; ]
  [ mini_bubble; OK; 0.055357; 0; ]
  [ bubble; OK; 0.081681; 0; ]
  [ bubble2; OK; 0.066417; 0; ]
  [ bubble2b; OK; 0.074749; 0; ]
  [ bubble3; OK; 0.123226; 0; ]
  [ bubble4; OK; 0.088089; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.060628; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.112285; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.064135; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.059947; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.057275; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.066584; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.059450; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.062593; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.062647; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.058289; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.060402; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.093806; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.059441; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.112711; 0; ]
]
}
