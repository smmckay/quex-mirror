{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.080891; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.080925; 0; ]
  [ 2; OK; 0.078791; 0; ]
  [ 3; OK; 0.081843; 0; ]
  [ 4; OK; 0.079834; 0; ]
  [ 5; OK; 0.079750; 0; ]
  [ 6; OK; 0.089874; 0; ]
  [ 7; OK; 0.079680; 0; ]
  [ 8; OK; 0.081118; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.053503; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.051164; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.050780; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.054835; 0; ]
  [ 2; OK; 0.052648; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1473998043L;
result_list: [
  [ Normal; OK; 0.908618; 0; ]
  [ BeginOfLine; OK; 0.910765; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1473998258L;
result_list: [
  [ Same; OK; 0.583365; 0; ]
  [ Different; OK; 1.227092; 0; ]
  [ TwoSet; OK; 0.610416; 0; ]
  [ Grid; OK; 0.460317; 0; ]
  [ Grid-BOL; OK; 0.480902; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1473998270L;
result_list: [
  [ UTF8; OK; 2.643095; 0; ]
  [ UTF16; OK; 1.145983; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1473998240L;
result_list: [
  [ ; OK; 1.132438; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.540227; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1471846869L;
result_list: [
  [ ; OK; 0.144052; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.209986; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.053292; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1461220443L;
result_list: [
  [ linear; OK; 0.487429; 0; ]
  [ butterfly; OK; 4.273373; 0; ]
  [ long_loop; OK; 0.504673; 0; ]
  [ nested_loop; OK; 0.105356; 0; ]
  [ mini_loop; OK; 0.048739; 0; ]
  [ fork; OK; 0.498987; 0; ]
  [ fork2; OK; 0.103215; 0; ]
  [ fork3; OK; 3.400144; 0; ]
  [ fork4; OK; 3.703442; 0; ]
  [ tree; OK; 3.406600; 0; ]
  [ mini_bubble; OK; 0.054842; 0; ]
  [ bubble; OK; 0.048681; 0; ]
  [ bubble2; OK; 0.058774; 0; ]
  [ bubble2b; OK; 0.059117; 0; ]
  [ bubble3; OK; 0.058238; 0; ]
  [ bubble4; OK; 0.057449; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.061781; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.112884; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.061559; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.071355; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.057121; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.055528; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.052527; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.057986; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.054902; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.054710; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.053428; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.095607; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.060337; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.101324; 0; ]
]
}
