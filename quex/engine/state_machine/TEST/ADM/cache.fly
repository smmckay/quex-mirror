{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.100032; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.095187; 0; ]
  [ 2; OK; 0.096715; 0; ]
  [ 3; OK; 0.085814; 0; ]
  [ 4; OK; 0.086148; 0; ]
  [ 5; OK; 0.083154; 0; ]
  [ 6; OK; 0.082810; 0; ]
  [ 7; OK; 0.083810; 0; ]
  [ 8; OK; 0.090230; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.063971; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.059208; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.053290; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.055710; 0; ]
  [ 2; OK; 0.055382; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1473998043L;
result_list: [
  [ Normal; OK; 1.061129; 0; ]
  [ BeginOfLine; OK; 1.007024; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1473998258L;
result_list: [
  [ Same; OK; 0.781499; 0; ]
  [ Different; OK; 1.435556; 0; ]
  [ TwoSet; OK; 0.725735; 0; ]
  [ Grid; OK; 0.499848; 0; ]
  [ Grid-BOL; OK; 0.474771; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1473998270L;
result_list: [
  [ UTF8; OK; 3.001641; 0; ]
  [ UTF16; OK; 1.256346; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1473998240L;
result_list: [
  [ ; OK; 1.405865; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.627792; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1471846869L;
result_list: [
  [ ; OK; 0.175037; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.268957; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.082592; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1461220443L;
result_list: [
  [ linear; OK; 0.696347; 0; ]
  [ butterfly; OK; 5.432533; 0; ]
  [ long_loop; OK; 0.808380; 0; ]
  [ nested_loop; OK; 0.169395; 0; ]
  [ mini_loop; OK; 0.120718; 0; ]
  [ fork; OK; 0.678064; 0; ]
  [ fork2; OK; 0.147071; 0; ]
  [ fork3; OK; 5.210052; 0; ]
  [ fork4; OK; 5.311571; 0; ]
  [ tree; OK; 4.948135; 0; ]
  [ mini_bubble; OK; 0.111098; 0; ]
  [ bubble; OK; 0.065932; 0; ]
  [ bubble2; OK; 0.073295; 0; ]
  [ bubble2b; OK; 0.078082; 0; ]
  [ bubble3; OK; 0.108782; 0; ]
  [ bubble4; OK; 0.064409; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.082624; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.139247; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; FAIL; 0.103854; 0; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.082573; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.089865; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.069211; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.071435; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.086687; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.088342; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.134034; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.141788; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.132760; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.085306; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.153898; 0; ]
]
}
