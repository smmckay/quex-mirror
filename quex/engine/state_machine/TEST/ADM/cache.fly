{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.080932; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1480539706L;
result_list: [
  [ 1; OK; 0.084307; 0; ]
  [ 2; OK; 0.079202; 0; ]
  [ 3; OK; 0.078516; 0; ]
  [ 4; OK; 0.077993; 0; ]
  [ 5; OK; 0.086040; 0; ]
  [ 6; OK; 0.080659; 0; ]
  [ 7; OK; 0.080748; 0; ]
  [ 8; OK; 0.082161; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.062797; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.054963; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.058046; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1480539705L;
result_list: [
  [ 1; OK; 0.060727; 0; ]
  [ 2; OK; 0.058943; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ Normal; OK; 0.672309; 0; ]
  [ BeginOfLine; OK; 0.688176; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1480539706L;
result_list: [
  [ Same; OK; 0.333420; 0; ]
  [ Different; OK; 0.996272; 0; ]
  [ TwoSet; OK; 0.358184; 0; ]
  [ Grid; OK; 0.274756; 0; ]
  [ Grid-BOL; OK; 0.295639; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1480539706L;
result_list: [
  [ UTF8; OK; 2.644425; 0; ]
  [ UTF16; OK; 1.155751; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.584517; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.426163; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.144229; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.182233; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.055862; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1480539705L;
result_list: [
  [ linear; OK; 0.447541; 0; ]
  [ butterfly; OK; 4.215633; 0; ]
  [ long_loop; OK; 0.500771; 0; ]
  [ nested_loop; OK; 0.106668; 0; ]
  [ mini_loop; OK; 0.053670; 0; ]
  [ fork; OK; 0.467221; 0; ]
  [ fork2; OK; 0.102313; 0; ]
  [ fork3; OK; 3.428397; 0; ]
  [ fork4; OK; 3.724520; 0; ]
  [ tree; OK; 3.406003; 0; ]
  [ mini_bubble; OK; 0.050888; 0; ]
  [ bubble; OK; 0.049623; 0; ]
  [ bubble2; OK; 0.056678; 0; ]
  [ bubble2b; OK; 0.060306; 0; ]
  [ bubble3; OK; 0.060249; 0; ]
  [ bubble4; OK; 0.062408; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.061753; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.117617; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.062404; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.060360; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.058601; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.058074; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.053017; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.063648; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.059222; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.055336; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.055234; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.095971; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.054082; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.107547; 0; ]
]
}
