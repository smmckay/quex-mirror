{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.083260; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1480752763L;
result_list: [
  [ 1; OK; 0.095308; 0; ]
  [ 2; OK; 0.085185; 0; ]
  [ 3; OK; 0.083500; 0; ]
  [ 4; OK; 0.081949; 0; ]
  [ 5; OK; 0.081269; 0; ]
  [ 6; OK; 0.083650; 0; ]
  [ 7; OK; 0.081930; 0; ]
  [ 8; OK; 0.082393; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.056703; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.053452; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.055010; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1480539705L;
result_list: [
  [ 1; OK; 0.066184; 0; ]
  [ 2; OK; 0.054237; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ Normal; OK; 0.684469; 0; ]
  [ BeginOfLine; OK; 0.673974; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1480539706L;
result_list: [
  [ Same; OK; 0.339827; 0; ]
  [ Different; OK; 1.006550; 0; ]
  [ TwoSet; OK; 0.359093; 0; ]
  [ Grid; OK; 0.275096; 0; ]
  [ Grid-BOL; OK; 0.288618; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1480539706L;
result_list: [
  [ UTF8; OK; 2.626965; 0; ]
  [ UTF16; OK; 1.165447; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.565905; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.419059; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.137587; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.179110; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.055590; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1480539705L;
result_list: [
  [ linear; OK; 0.462532; 0; ]
  [ butterfly; OK; 4.340138; 0; ]
  [ long_loop; OK; 0.516841; 0; ]
  [ nested_loop; OK; 0.111426; 0; ]
  [ mini_loop; OK; 0.064124; 0; ]
  [ fork; OK; 0.481322; 0; ]
  [ fork2; OK; 0.107736; 0; ]
  [ fork3; OK; 3.514833; 0; ]
  [ fork4; OK; 3.780771; 0; ]
  [ tree; OK; 3.497221; 0; ]
  [ mini_bubble; OK; 0.063594; 0; ]
  [ bubble; OK; 0.054701; 0; ]
  [ bubble2; OK; 0.062425; 0; ]
  [ bubble2b; OK; 0.059162; 0; ]
  [ bubble3; OK; 0.060667; 0; ]
  [ bubble4; OK; 0.062392; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.063769; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.118631; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.060771; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.072773; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.058558; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.056658; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.056826; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.061428; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.055172; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.057856; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.056583; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.095399; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.054139; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.104504; 0; ]
]
}
