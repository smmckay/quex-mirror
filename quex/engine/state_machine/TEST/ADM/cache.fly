{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.100834; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1479757922L;
result_list: [
  [ 1; OK; 0.089420; 0; ]
  [ 2; OK; 0.101844; 0; ]
  [ 3; OK; 0.102836; 0; ]
  [ 4; OK; 0.088865; 0; ]
  [ 5; OK; 0.082201; 0; ]
  [ 6; OK; 0.083231; 0; ]
  [ 7; OK; 0.091921; 0; ]
  [ 8; OK; 0.091773; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.061506; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.074641; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.076607; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1479757922L;
result_list: [
  [ 1; OK; 0.058294; 0; ]
  [ 2; OK; 0.069695; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1479757922L;
result_list: [
  [ Normal; OK; 0.683030; 0; ]
  [ BeginOfLine; OK; 0.709414; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ Same; OK; 0.363236; 0; ]
  [ Different; OK; 1.092089; 0; ]
  [ TwoSet; OK; 0.399911; 0; ]
  [ Grid; OK; 0.291958; 0; ]
  [ Grid-BOL; OK; 0.293247; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1479757922L;
result_list: [
  [ UTF8; OK; 2.714212; 0; ]
  [ UTF16; OK; 1.202942; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.625614; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.446788; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.171877; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.197632; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.068836; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1479757922L;
result_list: [
  [ linear; OK; 0.447195; 0; ]
  [ butterfly; OK; 4.291688; 0; ]
  [ long_loop; OK; 0.556446; 0; ]
  [ nested_loop; OK; 0.115497; 0; ]
  [ mini_loop; OK; 0.059410; 0; ]
  [ fork; OK; 0.475724; 0; ]
  [ fork2; OK; 0.105969; 0; ]
  [ fork3; OK; 3.539897; 0; ]
  [ fork4; OK; 3.837416; 0; ]
  [ tree; OK; 3.637017; 0; ]
  [ mini_bubble; OK; 0.058298; 0; ]
  [ bubble; OK; 0.079184; 0; ]
  [ bubble2; OK; 0.066817; 0; ]
  [ bubble2b; OK; 0.062637; 0; ]
  [ bubble3; OK; 0.077046; 0; ]
  [ bubble4; OK; 0.067133; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.077634; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.135694; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.082524; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.081333; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.071426; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.098208; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.070999; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.065699; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.060828; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.057947; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.066637; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.100200; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.056721; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1479757922L;
result_list: [
  [ ; OK; 0.111574; 0; ]
]
}
