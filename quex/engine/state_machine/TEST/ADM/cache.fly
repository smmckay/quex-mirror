{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.131912; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.141619; 0; ]
  [ 2; OK; 0.132150; 0; ]
  [ 3; OK; 0.141431; 0; ]
  [ 4; OK; 0.108466; 0; ]
  [ 5; OK; 0.137382; 0; ]
  [ 6; OK; 0.117349; 0; ]
  [ 7; OK; 0.121546; 0; ]
  [ 8; OK; 0.114215; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.091566; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.076403; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.087633; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1461220443L;
result_list: [
  [ 1; OK; 0.088647; 0; ]
  [ 2; OK; 0.124630; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1473998043L;
result_list: [
  [ Normal; OK; 1.340381; 0; ]
  [ BeginOfLine; OK; 1.388526; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1473998258L;
result_list: [
  [ Same; OK; 0.907482; 0; ]
  [ Different; OK; 1.703649; 0; ]
  [ TwoSet; OK; 0.929632; 0; ]
  [ Grid; OK; 0.517860; 0; ]
  [ Grid-BOL; OK; 0.665637; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1473998270L;
result_list: [
  [ UTF8; OK; 3.809601; 0; ]
  [ UTF16; OK; 1.736333; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1473998240L;
result_list: [
  [ ; OK; 1.573481; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.952275; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1471846869L;
result_list: [
  [ ; OK; 0.203774; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.353553; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.111320; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1461220443L;
result_list: [
  [ linear; OK; 0.631533; 0; ]
  [ butterfly; OK; 6.766097; 0; ]
  [ long_loop; OK; 0.765253; 0; ]
  [ nested_loop; OK; 0.178223; 0; ]
  [ mini_loop; OK; 0.080911; 0; ]
  [ fork; OK; 0.940412; 0; ]
  [ fork2; OK; 0.167268; 0; ]
  [ fork3; OK; 4.824990; 0; ]
  [ fork4; OK; 5.305044; 0; ]
  [ tree; OK; 4.739100; 0; ]
  [ mini_bubble; OK; 0.094895; 0; ]
  [ bubble; OK; 0.137044; 0; ]
  [ bubble2; OK; 0.082169; 0; ]
  [ bubble2b; OK; 0.113773; 0; ]
  [ bubble3; OK; 0.094634; 0; ]
  [ bubble4; OK; 0.101738; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.093744; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.230346; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; FAIL; 0.136139; 0; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.164183; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.107040; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.074233; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.075045; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.086259; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.092737; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.085140; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.105874; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.137802; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.126667; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.143770; 0; ]
]
}
