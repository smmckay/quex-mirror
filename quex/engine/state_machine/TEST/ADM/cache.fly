{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-StateInfo-trigger-map.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; FAIL; 0.033471; 0; ]
]
}
{
title: Get Trigger Map (intervals --> target states);
title_group: DFA;
file_name: test-get_trigger_map.py;
hwut_info_time: 1480539706L;
result_list: [
  [ 1; OK; 0.033788; 0; ]
  [ 2; OK; 0.033565; 0; ]
  [ 3; OK; 0.032585; 0; ]
  [ 4; OK; 0.033251; 0; ]
  [ 5; OK; 0.033697; 0; ]
  [ 6; OK; 0.032650; 0; ]
  [ 7; OK; 0.032272; 0; ]
  [ 8; OK; 0.032020; 0; ]
]
}
{
title: Epsilon closure (single state);
title_group: NFA;
file_name: test-StateMachine-epsilon-closure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.019942; 0; ]
]
}
{
title: Get elementary trigger sets (target index --> trigger sets);
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.019939; 0; ]
]
}
{
title: Get elementary trigger sets II;
title_group: NFA;
file_name: test-StateMachine-elementary_trigger_sets-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.019260; 0; ]
]
}
{
title: Get graphviz string of state machine.;
title_group: Plot;
file_name: test-StateMachine-get_graphviz_string.py;
hwut_info_time: 1480539705L;
result_list: [
  [ 1; OK; 0.019844; 0; ]
  [ 2; OK; 0.020650; 0; ]
]
}
{
title: Characters;
title_group: Predetermined Character Count;
file_name: test-count_character_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ Normal; OK; 0.222176; 0; ]
  [ BeginOfLine; OK; 0.222180; 0; ]
]
}
{
title: Characters of different horizontal sizes.;
title_group: Predetermined Character Count;
file_name: test-count_character_n-2.py;
hwut_info_time: 1480539706L;
result_list: [
  [ Same; OK; 0.134907; 0; ]
  [ Different; OK; 0.388127; 0; ]
  [ TwoSet; OK; 0.145070; 0; ]
  [ Grid; OK; 0.109009; 0; ]
  [ Grid-BOL; OK; 0.107537; 0; ]
]
}
{
title: Codec Engine;
title_group: Predetermined Character Count;
file_name: test-count_character_n-codec.py;
hwut_info_time: 1480539706L;
result_list: [
  [ UTF8; OK; 0.953643; 0; ]
  [ UTF16; OK; 0.419617; 0; ]
]
}
{
title: Newlines;
title_group: Predetermined Character Count;
file_name: test-count_newline_n.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.233126; 0; ]
]
}
{
title: Detection;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-detect.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.169695; 0; ]
]
}
{
title: Mounting;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-mount_pseudo.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.058030; 0; ]
]
}
{
title: The Philosophical Cut;
title_group: Pseudo Ambigous Post Condition;
file_name: test-ambiguous_post_condition-philosophical_cut.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.075197; 0; ]
]
}
{
title: Cloning;
title_group: StateMachine;
file_name: test-StateMachine-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.022287; 0; ]
]
}
{
title: get_predecessor_db;
title_group: StateMachine;
file_name: test-StateMachine-get_predecessor_db.py;
hwut_info_time: 1480539705L;
result_list: [
  [ linear; OK; 0.142930; 0; ]
  [ butterfly; OK; 1.362363; 0; ]
  [ long_loop; OK; 0.165050; 0; ]
  [ nested_loop; OK; 0.037852; 0; ]
  [ mini_loop; OK; 0.020111; 0; ]
  [ fork; OK; 0.149625; 0; ]
  [ fork2; OK; 0.035717; 0; ]
  [ fork3; OK; 1.067953; 0; ]
  [ fork4; OK; 1.158800; 0; ]
  [ tree; OK; 1.080655; 0; ]
  [ mini_bubble; OK; 0.020149; 0; ]
  [ bubble; OK; 0.019177; 0; ]
  [ bubble2; OK; 0.022530; 0; ]
  [ bubble2b; OK; 0.021807; 0; ]
  [ bubble3; OK; 0.021717; 0; ]
  [ bubble4; OK; 0.022524; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_post_condition.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.023620; 0; ]
]
}
{
title: Append Post Condition;
title_group: StateMachine Operations;
file_name: test-setup_border_conditions.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.047497; 0; ]
]
}
{
title: Inverse;
title_group: StateMachine Operations;
file_name: test-StateMachine-inverse.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.023753; 1885217248; ]
]
}
{
title: Paralell;
title_group: StateMachine Operations;
file_name: test-parallelize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.022318; 0; ]
]
}
{
title: Repetition with min and max repetition numbers;
title_group: StateMachine Operations;
file_name: test-repeat.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.020953; 0; ]
]
}
{
title: Repetitions Kleene closure 0 or arbitrary repetitions;
title_group: StateMachine Operations;
file_name: test-repeat-pure.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.020001; 0; ]
]
}
{
title: Sequence;
title_group: StateMachine Operations;
file_name: test-sequentialize.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.020933; 0; ]
]
}
{
title: Setup Pre-Condition;
title_group: StateMachine Operations;
file_name: test-setup_pre_condition.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.022442; 0; ]
]
}
{
title: Cloning;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-clone.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.020379; 0; ]
]
}
{
title: Hopcroft optimization (minimize state set);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-hopcroft-optimization.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.020543; 0; ]
]
}
{
title: NFA to DFA (subset construction);
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA.py;
hwut_info_time: 1480539706L;
result_list: [
  [ ; OK; 0.020663; 0; ]
]
}
{
title: NFA to DFA (subset construction) II;
title_group: Tracing origin;
file_name: test-StateMachine-trace-origin-create-DFA-2.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.038448; 0; ]
]
}
{
title: Paralellization;
title_group: Tracing origin;
file_name: test-parallelize-trace-origin.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.020307; 0; ]
]
}
{
title: Has Trigger;
title_group: Trigger Set Check;
file_name: test-StateInfo-has_trigger.py;
hwut_info_time: 1480539705L;
result_list: [
  [ ; OK; 0.042648; 0; ]
]
}
