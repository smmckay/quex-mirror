---------------------------
Original = otto_mueller
Cutter   = otto
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    
00006 
     == '_' ==> 00007
    
00007 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, 'n'], ['p', oo] ==> 00000
     == 'o' ==> 00003
    
00002 
    
00003 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00004
    
00004 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00005
    
00005 A
     == [-oo, 'n'], ['p', oo] ==> 00000
     == 'o' ==> 00006
    
00006 A
     == [-oo, '^'], ['`', oo] ==> 00000
     == '_' ==> 00007
    
00007 A
     == [-oo, 'l'], ['n', oo] ==> 00000
     == 'm' ==> 00008
    
00008 A
     == [-oo, 't'], ['v', oo] ==> 00000
     == 'u' ==> 00009
    
00009 A
     == [-oo, 'd'], ['f', oo] ==> 00000
     == 'e' ==> 00010
    
00010 A
     == [-oo, 'k'], ['m', oo] ==> 00000
     == 'l' ==> 00011
    
00011 A
     == [-oo, 'k'], ['m', oo] ==> 00000
     == 'l' ==> 00012
    
00012 A
     == [-oo, 'd'], ['f', oo] ==> 00000
     == 'e' ==> 00013
    
00013 A
     == [-oo, 'q'], ['s', oo] ==> 00000
    
00014 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    
00006 
     == '_' ==> 00007
    
00007 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    
00006 
     == '_' ==> 00008
     == 'o' ==> 00007
    
00007 
    
00008 
    


result =  init-state = 0L
00000 
    

---------------------------
Original = otto
Cutter   = otto
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, 'n'], ['p', oo] ==> 00000
     == 'o' ==> 00003
    
00002 
    
00003 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00004
    
00004 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00005
    
00005 A
     == [-oo, 'n'], ['p', oo] ==> 00000
    
00006 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    
00006 
     == 'o' ==> 00007
    
00007 
    


result =  init-state = 0L
00000 
    

---------------------------
Original = otto|fritz
Cutter   = otto
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'f' ==> 00004
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00005
    
00004 
    
00005 
     == 't' ==> 00006
    
00006 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00004
    
00004 
     == 't' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, 'e'], ['g', 'n'], ['p', oo] ==> 00000
     == 'f' ==> 00003
     == 'o' ==> 00004
    
00002 
    
00003 A
     == [-oo, 'q'], ['s', oo] ==> 00000
     == 'r' ==> 00008
    
00004 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00005
    
00005 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00006
    
00006 A
     == [-oo, 'n'], ['p', oo] ==> 00000
    
00007 
     == [-oo, oo] ==> 00000
    
00008 A
     == [-oo, 'h'], ['j', oo] ==> 00000
     == 'i' ==> 00009
    
00009 A
     == [-oo, 's'], ['u', oo] ==> 00000
     == 't' ==> 00010
    
00010 A
     == [-oo, 'y'], ['{', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'f' ==> 00004
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00005
    
00004 
    
00005 
     == 't' ==> 00006
    
00006 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'f' ==> 00004
     == 'o' ==> 00003
    
00002 
    
00003 
     == 't' ==> 00005
    
00004 
    
00005 
     == 't' ==> 00006
    
00006 
    
00007 
     == 'f' ==> 00004
     == 'o' ==> 00008
    
00008 
    


result =  init-state = 0L
00000 
    

---------------------------
Original = [01]{1,3}
Cutter   = 0
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
    
00004 
     == ['0', '1'] ==> 00005
    
00005 A
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '/'], ['2', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, '/'], ['2', oo] ==> 00000
    
00004 
     == [-oo, '/'], ['2', oo] ==> 00000
    
00005 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
    
00004 
     == '1' ==> 00006
    
00005 
     == '1' ==> 00007
    
00006 A
    
00007 A
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
    
00004 
     == '0' ==> 00005
     == '1' ==> 00003
    
00005 A
    


result =  init-state = 0L
00000 
    

---------------------------
Original = [01]+
Cutter   = 0
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00004
    
00002 
    
00003 
     == ['0', '1'] ==> 00004
    
00004 A
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '/'], ['2', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, '/'], ['2', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
    
00004 
     == '1' ==> 00003
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
    
00004 
     == ['0', '1'] ==> 00003
    


result =  init-state = 0L
00000 
    

---------------------------
Original = 1[01]*
Cutter   = 10
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
     == '1' ==> 00004
    
00004 A
    
00005 
     == ['0', '1'] ==> 00004
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '0'], ['2', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, '/'], ['2', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
     == '1' ==> 00005
    
00004 
     == '0' ==> 00005
     == '1' ==> 00003
    
00005 A
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 A
     == '1' ==> 00004
    
00004 A
    
00005 
     == ['0', '1'] ==> 00004
    


result =  init-state = 0L
00000 
    

---------------------------
Original = [0-9]{2,}
Cutter   = 01
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '0' ==> 00003
     == ['1', '9'] ==> 00004
    
00002 
    
00003 
     == '0', ['2', '9'] ==> 00005
    
00004 
    
00005 A
    
00006 
     == ['0', '9'] ==> 00005
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '0' ==> 00003
    
00002 
    
00003 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '/'], [':', oo] ==> 00000
     == ['0', '9'] ==> 00003
    
00002 
    
00003 A
     == [-oo, '/'], [':', oo] ==> 00000
    
00004 
     == [-oo, '/'], [':', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '0' ==> 00004
     == ['1', '9'] ==> 00003
    
00002 
    
00003 
    
00004 
     == '0', ['2', '9'] ==> 00005
    
00005 A
    
00006 
     == '0' ==> 00007
     == ['1', '9'] ==> 00005
    
00007 A
     == '0', ['2', '9'] ==> 00005
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '0' ==> 00004
     == ['1', '9'] ==> 00003
    
00002 
    
00003 
    
00004 
     == '0', ['2', '9'] ==> 00005
    
00005 A
    
00006 
     == ['0', '9'] ==> 00005
    


result =  init-state = 0L
00000 
    

---------------------------
Original = 123
Cutter   = 123(4?)
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
     == '2' ==> 00004
    
00004 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
     == '2' ==> 00004
    
00004 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '0'], ['2', oo] ==> 00000
     == '1' ==> 00003
    
00002 
    
00003 A
     == [-oo, '1'], ['3', oo] ==> 00000
     == '2' ==> 00004
    
00004 A
     == [-oo, '2'], ['4', oo] ==> 00000
    
00005 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
     == '2' ==> 00004
    
00004 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
     == '2' ==> 00004
    
00004 
    
00005 
     == '1' ==> 00006
    
00006 
    
00007 
     == '1' ==> 00006
    


result =  init-state = 0L
00000 
    

---------------------------
Original = 12
Cutter   = 1(2?)
#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '0'], ['2', oo] ==> 00000
     == '1' ==> 00003
    
00002 
    
00003 A
     == [-oo, '1'], ['3', oo] ==> 00000
    
00004 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    
00002 
     == '1' ==> 00003
    
00003 
    
00004 
     == '1' ==> 00003
    


result =  init-state = 0L
00000 
    

---------------------------
Original = 1
Cutter   = 1(2?)
#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '0'], ['2', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    
00002 
     == '1' ==> 00003
    
00003 A
    
00004 
     == '1' ==> 00003
    


result =  init-state = 0L
00000 
    

---------------------------
Original = "123"|"ABC"
Cutter   = "123"
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00004
     == 'A' ==> 00003
    
00002 
    
00003 
    
00004 
     == '2' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00003
    
00002 
    
00003 
     == '2' ==> 00004
    
00004 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '0'], ['2', '@'], ['B', oo] ==> 00000
     == '1' ==> 00004
     == 'A' ==> 00003
    
00002 
    
00003 A
     == [-oo, 'A'], ['C', oo] ==> 00000
     == 'B' ==> 00007
    
00004 A
     == [-oo, '1'], ['3', oo] ==> 00000
     == '2' ==> 00005
    
00005 A
     == [-oo, '2'], ['4', oo] ==> 00000
    
00006 
     == [-oo, oo] ==> 00000
    
00007 A
     == [-oo, 'B'], ['D', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00004
     == 'A' ==> 00003
    
00002 
    
00003 
    
00004 
     == '2' ==> 00005
    
00005 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '1' ==> 00004
     == 'A' ==> 00003
    
00002 
    
00003 
    
00004 
     == '2' ==> 00005
    
00005 
    
00006 
     == '1' ==> 00007
     == 'A' ==> 00003
    
00007 
    


result =  init-state = 0L
00000 
    

---------------------------
Original = \n
Cutter   = (\r\n)|\n
#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '\r' ==> 00003
    
00002 
    
00003 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '\t'], ['\v', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == '\r' ==> 00003
    
00002 
    
00003 
    
00004 
     == '\n' ==> 00005
     == '\r' ==> 00006
    
00005 A
    
00006 
    
00007 
     == '\n' ==> 00005
     == '\r' ==> 00006
    


result =  init-state = 0L
00000 
    

---------------------------
Original = [ab]+
Cutter   = "b"
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00003
    
00002 
    
00003 A
    
00004 
     == ['a', 'b'] ==> 00003
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '`'], ['c', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, '`'], ['c', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00003
    
00002 
    
00003 A
    
00004 
     == 'a' ==> 00003
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00003
    
00002 
    
00003 A
    
00004 
     == ['a', 'b'] ==> 00003
    


result =  init-state = 0L
00000 
    

---------------------------
Original = [ab]+
Cutter   = "bb"
#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00004
     == 'b' ==> 00003
    
00002 
    
00003 A
     == 'a' ==> 00004
    
00004 A
    
00005 
     == ['a', 'b'] ==> 00004
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'b' ==> 00003
    
00002 
    
00003 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00001
00001 
    

#result: init-state = 0L
00000 A
     ==<epsilon>==> 00002
00001 
     == [-oo, '`'], ['c', oo] ==> 00000
    
00002 
    
00003 
     == [-oo, '`'], ['c', oo] ==> 00000
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00004
     == 'b' ==> 00003
    
00002 
    
00003 A
     == 'a' ==> 00004
    
00004 A
    
00005 
     == 'a' ==> 00004
     == 'b' ==> 00003
    

#result: init-state = 0L
00000 
     ==<epsilon>==> 00002
00001 
     == 'a' ==> 00003
     == 'b' ==> 00004
    
00002 
    
00003 A
    
00004 A
     == 'a' ==> 00003
    
00005 
     == ['a', 'b'] ==> 00003
    


result =  init-state = 0L
00000 
    

