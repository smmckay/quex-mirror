{
title: Anti-Patterns;
file_name: anti-pattern.py;
hwut_info_time: 1480762392L;
result_list: [
  [ ; OK; 0.115381; 0; ]
]
}
{
title: Case Folding;
file_name: test-case_fold.py;
hwut_info_time: 1480539698L;
result_list: [
  [ set; OK; 0.147481; 0; ]
  [ pattern; OK; 0.130403; 0; ]
]
}
{
title: Operations;
file_name: test-operations.py;
hwut_info_time: 1480752763L;
result_list: [
  [ special; OK; 0.101958; 0; ]
  [ 0; OK; 0.093621; 0; ]
  [ 1; OK; 0.153221; 0; ]
  [ 2; OK; 0.151914; 0; ]
  [ 3; OK; 0.158536; 0; ]
]
}
{
title: State Machine Pattern Matching;
file_name: test-pattern-matching.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.105484; 0; ]
]
}
{
title: Transformations;
file_name: test-transformation.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.194072; 1380548642; ]
]
}
{
title: General;
title_group: Backslashed Characters;
file_name: test-snap_backslashed_character.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.034425; 0; ]
]
}
{
title: Lonestanding characters;
title_group: Basics;
file_name: test-lonely-characters.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.131230; 0; ]
]
}
{
title: Map character *range* to state machine;
title_group: Basics;
file_name: test-set.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.060802; 0; ]
]
}
{
title: Map character *string* to state machine;
title_group: Basics;
file_name: test-string.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.059669; 0; ]
]
}
{
title: Snap string until (low level function);
title_group: Basics;
file_name: test-snap_until.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.090508; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-alternatives.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.119705; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-set-expressions.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.099674; 0; ]
]
}
{
title: Simple repeated expressions;
title_group: Combination;
file_name: test-repeated-expressions.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.143063; 0; ]
]
}
{
title: Begin of Line '^', End of Line '$';
title_group: Conditional Analysis;
file_name: test-bol-eol.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.143927; -874969354; ]
]
}
{
title: End of Line '$' (with DOS/Windows '\\r\\n');
title_group: Conditional Analysis;
file_name: test-eol-carriage-return-newline.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.120018; 0; ]
]
}
{
title: post conditions;
title_group: Conditional Analysis;
file_name: test-post-condition.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.112941; 0; ]
]
}
{
title: pre conditions;
title_group: Conditional Analysis;
file_name: test-pre-condition.py;
hwut_info_time: 1480539698L;
happy_pattern_list: [ pre=\[0-9]+; ]
result_list: [
  [ ; OK; 0.114559; 0; ]
]
}
{
title: pre- and post-conditions;
title_group: Conditional Analysis;
file_name: test-pre-and-post-condition.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.000000; -1890604414; ]
]
}
{
title: Character Sets;
title_group: Replacement;
file_name: test-replacement-2.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.156961; 0; ]
]
}
{
title: Regular Expression State Machines;
title_group: Replacement;
file_name: test-replacement.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.118976; 0; ]
]
}
{
title: Set Operations;
title_group: Unicode properties;
file_name: test-properties-2.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.971179; 0; ]
]
}
{
title: Simple;
title_group: Unicode properties;
file_name: test-properties.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.901099; 0; ]
]
}
