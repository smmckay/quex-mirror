{
title: Anti-Patterns;
file_name: anti-pattern.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.128339; 0; ]
]
}
{
title: Case Folding;
file_name: test-case_fold.py;
hwut_info_time: 1461220443L;
result_list: [
  [ set; OK; 0.141055; 0; ]
  [ pattern; OK; 0.147964; 0; ]
]
}
{
title: Operations;
file_name: test-operations.py;
hwut_info_time: 1461220443L;
result_list: [
  [ special; OK; 0.119659; 0; ]
  [ 0; OK; 0.160677; 0; ]
  [ 1; OK; 0.217240; 0; ]
  [ 2; OK; 0.201438; 0; ]
  [ 3; OK; 0.238550; 0; ]
]
}
{
title: State Machine Pattern Matching;
file_name: test-pattern-matching.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.112945; 0; ]
]
}
{
title: Transformations;
file_name: test-transformation.py;
hwut_info_time: 1474307886L;
result_list: [
  [ ; FAIL; 0.208669; 1005104571; ]
]
}
{
title: General;
title_group: Backslashed Characters;
file_name: test-snap_backslashed_character.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.032522; 0; ]
]
}
{
title: Lonestanding characters;
title_group: Basics;
file_name: test-lonely-characters.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.235576; 0; ]
]
}
{
title: Map character *range* to state machine;
title_group: Basics;
file_name: test-set.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.056137; 0; ]
]
}
{
title: Map character *string* to state machine;
title_group: Basics;
file_name: test-string.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.071319; 0; ]
]
}
{
title: Snap string until (low level function);
title_group: Basics;
file_name: test-snap_until.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.131222; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-alternatives.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.236695; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-set-expressions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.115521; 0; ]
]
}
{
title: Simple repeated expressions;
title_group: Combination;
file_name: test-repeated-expressions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.199790; 0; ]
]
}
{
title: Begin of Line '^', End of Line '$';
title_group: Conditional Analysis;
file_name: test-bol-eol.py;
hwut_info_time: 1474142637L;
result_list: [
  [ ; FAIL; 0.111414; 0; ]
]
}
{
title: End of Line '$' (with DOS/Windows '\\r\\n');
title_group: Conditional Analysis;
file_name: test-eol-carriage-return-newline.py;
hwut_info_time: 1474142785L;
result_list: [
  [ ; FAIL; 0.122409; 0; ]
]
}
{
title: post conditions;
title_group: Conditional Analysis;
file_name: test-post-condition.py;
hwut_info_time: 1474142435L;
result_list: [
  [ ; OK; 0.152601; 0; ]
]
}
{
title: pre conditions;
title_group: Conditional Analysis;
file_name: test-pre-condition.py;
hwut_info_time: 1474142407L;
result_list: [
  [ ; OK; 0.168214; 0; ]
]
}
{
title: pre- and post-conditions;
title_group: Conditional Analysis;
file_name: test-pre-and-post-condition.py;
hwut_info_time: 1474142715L;
result_list: [
  [ ; OK; 0.178907; 0; ]
]
}
{
title: Character Sets;
title_group: Replacement;
file_name: test-replacement-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.213847; 0; ]
]
}
{
title: Regular Expression State Machines;
title_group: Replacement;
file_name: test-replacement.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.184513; 0; ]
]
}
{
title: Set Operations;
title_group: Unicode properties;
file_name: test-properties-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 1.282287; 0; ]
]
}
{
title: Simple;
title_group: Unicode properties;
file_name: test-properties.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 1.208807; 0; ]
]
}
