{
title: Anti-Patterns;
file_name: anti-pattern.py;
hwut_info_time: 1479963523L;
result_list: [
  [ ; FAIL; 0.127610; 0; ]
]
}
{
title: Case Folding;
file_name: test-case_fold.py;
hwut_info_time: 1479757919L;
result_list: [
  [ set; OK; 0.159889; 0; ]
  [ pattern; OK; 0.230899; 0; ]
]
}
{
title: Operations;
file_name: test-operations.py;
hwut_info_time: 1479962523L;
result_list: [
  [ special; FAIL; 0.103121; 0; ]
  [ 0; OK; 0.106566; 0; ]
  [ 1; OK; 0.158311; 1425488154; ]
  [ 2; OK; 0.158135; 0; ]
  [ 3; OK; 0.164228; 0; ]
]
}
{
title: State Machine Pattern Matching;
file_name: test-pattern-matching.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.109532; 0; ]
]
}
{
title: Transformations;
file_name: test-transformation.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.200019; 1005104571; ]
]
}
{
title: General;
title_group: Backslashed Characters;
file_name: test-snap_backslashed_character.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.032484; 0; ]
]
}
{
title: Lonestanding characters;
title_group: Basics;
file_name: test-lonely-characters.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.142295; 0; ]
]
}
{
title: Map character *range* to state machine;
title_group: Basics;
file_name: test-set.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.062128; 0; ]
]
}
{
title: Map character *string* to state machine;
title_group: Basics;
file_name: test-string.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.057727; 0; ]
]
}
{
title: Snap string until (low level function);
title_group: Basics;
file_name: test-snap_until.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.109774; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-alternatives.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.163196; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-set-expressions.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.120470; 0; ]
]
}
{
title: Simple repeated expressions;
title_group: Combination;
file_name: test-repeated-expressions.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.149800; 0; ]
]
}
{
title: Begin of Line '^', End of Line '$';
title_group: Conditional Analysis;
file_name: test-bol-eol.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.133036; 0; ]
]
}
{
title: End of Line '$' (with DOS/Windows '\\r\\n');
title_group: Conditional Analysis;
file_name: test-eol-carriage-return-newline.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.115423; 0; ]
]
}
{
title: post conditions;
title_group: Conditional Analysis;
file_name: test-post-condition.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.176296; 0; ]
]
}
{
title: pre conditions;
title_group: Conditional Analysis;
file_name: test-pre-condition.py;
hwut_info_time: 1479757919L;
happy_pattern_list: [ pre=\[0-9]+; ]
result_list: [
  [ ; OK; 0.123377; -819198278; ]
]
}
{
title: pre- and post-conditions;
title_group: Conditional Analysis;
file_name: test-pre-and-post-condition.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.132181; -298438719; ]
]
}
{
title: Character Sets;
title_group: Replacement;
file_name: test-replacement-2.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.179276; 0; ]
]
}
{
title: Regular Expression State Machines;
title_group: Replacement;
file_name: test-replacement.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.132955; 0; ]
]
}
{
title: Set Operations;
title_group: Unicode properties;
file_name: test-properties-2.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 1.033518; 0; ]
]
}
{
title: Simple;
title_group: Unicode properties;
file_name: test-properties.py;
hwut_info_time: 1479757919L;
result_list: [
  [ ; OK; 0.995965; 0; ]
]
}
