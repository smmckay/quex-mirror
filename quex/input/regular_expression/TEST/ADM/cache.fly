{
title: Anti-Patterns;
file_name: anti-pattern.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.109263; 0; ]
]
}
{
title: Case Folding;
file_name: test-case_fold.py;
hwut_info_time: 1461220443L;
result_list: [
  [ set; OK; 0.140533; 0; ]
  [ pattern; OK; 0.154076; 0; ]
]
}
{
title: Operations;
file_name: test-operations.py;
hwut_info_time: 1461220443L;
result_list: [
  [ special; OK; 0.101473; 0; ]
  [ 0; OK; 0.098680; 0; ]
  [ 1; OK; 0.158827; 0; ]
  [ 2; OK; 0.190983; 0; ]
  [ 3; OK; 0.203011; 0; ]
]
}
{
title: State Machine Pattern Matching;
file_name: test-pattern-matching.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.110547; 0; ]
]
}
{
title: Transformations;
file_name: test-transformation.py;
hwut_info_time: 1477289573L;
result_list: [
  [ ; OK; 0.203106; 1005104571; ]
]
}
{
title: General;
title_group: Backslashed Characters;
file_name: test-snap_backslashed_character.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.032467; 0; ]
]
}
{
title: Lonestanding characters;
title_group: Basics;
file_name: test-lonely-characters.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.186120; 0; ]
]
}
{
title: Map character *range* to state machine;
title_group: Basics;
file_name: test-set.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.057644; 0; ]
]
}
{
title: Map character *string* to state machine;
title_group: Basics;
file_name: test-string.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.054782; 0; ]
]
}
{
title: Snap string until (low level function);
title_group: Basics;
file_name: test-snap_until.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.099028; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-alternatives.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.171253; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-set-expressions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.097837; 0; ]
]
}
{
title: Simple repeated expressions;
title_group: Combination;
file_name: test-repeated-expressions.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.152043; 0; ]
]
}
{
title: Begin of Line '^', End of Line '$';
title_group: Conditional Analysis;
file_name: test-bol-eol.py;
hwut_info_time: 1477289822L;
result_list: [
  [ ; OK; 0.119779; 0; ]
]
}
{
title: End of Line '$' (with DOS/Windows '\\r\\n');
title_group: Conditional Analysis;
file_name: test-eol-carriage-return-newline.py;
hwut_info_time: 1477289889L;
result_list: [
  [ ; OK; 0.103456; 0; ]
]
}
{
title: post conditions;
title_group: Conditional Analysis;
file_name: test-post-condition.py;
hwut_info_time: 1474142435L;
result_list: [
  [ ; OK; 0.150786; 0; ]
]
}
{
title: pre conditions;
title_group: Conditional Analysis;
file_name: test-pre-condition.py;
hwut_info_time: 1474142407L;
result_list: [
  [ ; OK; 0.164791; 0; ]
]
}
{
title: pre- and post-conditions;
title_group: Conditional Analysis;
file_name: test-pre-and-post-condition.py;
hwut_info_time: 1474142715L;
result_list: [
  [ ; OK; 0.138753; 0; ]
]
}
{
title: Character Sets;
title_group: Replacement;
file_name: test-replacement-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.157230; 0; ]
]
}
{
title: Regular Expression State Machines;
title_group: Replacement;
file_name: test-replacement.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.143071; 0; ]
]
}
{
title: Set Operations;
title_group: Unicode properties;
file_name: test-properties-2.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.982040; 0; ]
]
}
{
title: Simple;
title_group: Unicode properties;
file_name: test-properties.py;
hwut_info_time: 1461220443L;
result_list: [
  [ ; OK; 0.927010; 0; ]
]
}
