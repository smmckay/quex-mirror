{
title: Anti-Patterns;
file_name: anti-pattern.py;
hwut_info_time: 1480762392L;
result_list: [
  [ ; OK; 0.111580; 0; ]
]
}
{
title: Case Folding;
file_name: test-case_fold.py;
hwut_info_time: 1480539698L;
result_list: [
  [ set; OK; 0.128077; 0; ]
  [ pattern; OK; 0.136485; 0; ]
]
}
{
title: Operations;
file_name: test-operations.py;
hwut_info_time: 1480752763L;
result_list: [
  [ special; OK; 0.099886; 0; ]
  [ 0; OK; 0.093272; 0; ]
  [ 1; OK; 0.146196; 0; ]
  [ 2; OK; 0.149513; 0; ]
  [ 3; OK; 0.155093; 0; ]
]
}
{
title: State Machine Pattern Matching;
file_name: test-pattern-matching.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.124988; 0; ]
]
}
{
title: Transformations;
file_name: test-transformation.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.186964; 0; ]
]
}
{
title: General;
title_group: Backslashed Characters;
file_name: test-snap_backslashed_character.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.035508; 0; ]
]
}
{
title: Lonestanding characters;
title_group: Basics;
file_name: test-lonely-characters.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.131799; 0; ]
]
}
{
title: Map character *range* to state machine;
title_group: Basics;
file_name: test-set.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.055392; 0; ]
]
}
{
title: Map character *string* to state machine;
title_group: Basics;
file_name: test-string.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.057422; 0; ]
]
}
{
title: Snap string until (low level function);
title_group: Basics;
file_name: test-snap_until.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.088371; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-alternatives.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.125078; 0; ]
]
}
{
title: Alternative Expressions;
title_group: Combination;
file_name: test-set-expressions.py;
hwut_info_time: 1480752763L;
result_list: [
  [ ; OK; 0.097534; 0; ]
]
}
{
title: Simple repeated expressions;
title_group: Combination;
file_name: test-repeated-expressions.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.140823; 0; ]
]
}
{
title: Begin of Line '^', End of Line '$';
title_group: Conditional Analysis;
file_name: test-bol-eol.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.119220; 0; ]
]
}
{
title: End of Line '$' (with DOS/Windows '\\r\\n');
title_group: Conditional Analysis;
file_name: test-eol-carriage-return-newline.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.100980; 0; ]
]
}
{
title: post conditions;
title_group: Conditional Analysis;
file_name: test-post-condition.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.112965; 0; ]
]
}
{
title: pre conditions;
title_group: Conditional Analysis;
file_name: test-pre-condition.py;
hwut_info_time: 1480539698L;
happy_pattern_list: [ pre=\[0-9]+; ]
result_list: [
  [ ; OK; 0.115127; 0; ]
]
}
{
title: pre- and post-conditions;
title_group: Conditional Analysis;
file_name: test-pre-and-post-condition.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.129052; 0; ]
]
}
{
title: Character Sets;
title_group: Replacement;
file_name: test-replacement-2.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.154563; 0; ]
]
}
{
title: Regular Expression State Machines;
title_group: Replacement;
file_name: test-replacement.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 0.116192; 0; ]
]
}
{
title: Set Operations;
title_group: Unicode properties;
file_name: test-properties-2.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 1.144646; 0; ]
]
}
{
title: Simple;
title_group: Unicode properties;
file_name: test-properties.py;
hwut_info_time: 1480539698L;
result_list: [
  [ ; OK; 1.034891; 0; ]
]
}
