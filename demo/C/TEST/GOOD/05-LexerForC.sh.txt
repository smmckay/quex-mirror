(46, 1)  	PP_INCLUDE '#include <linux/mm.h>' 
(47, 1)  	PP_INCLUDE '#include <linux/slab.h>' 
(48, 1)  	PP_INCLUDE '#include <linux/acct.h>' 
(49, 1)  	PP_INCLUDE '#include <linux/capability.h>' 
(50, 1)  	PP_INCLUDE '#include <linux/file.h>' 
(51, 1)  	PP_INCLUDE '#include <linux/tty.h>' 
(52, 1)  	PP_INCLUDE '#include <linux/security.h>' 
(53, 1)  	PP_INCLUDE '#include <linux/vfs.h>' 
(54, 1)  	PP_INCLUDE '#include <linux/jiffies.h>' 
(55, 1)  	PP_INCLUDE '#include <linux/times.h>' 
(56, 1)  	PP_INCLUDE '#include <linux/syscalls.h>' 
(57, 1)  	PP_INCLUDE '#include <linux/mount.h>' 
(58, 1)  	PP_INCLUDE '#include <asm/uaccess.h>' 
(59, 1)  	PP_INCLUDE '#include <asm/div64.h>' 
(60, 1)  	PP_INCLUDE '#include <linux/blkdev.h>' 
(69, 1)  	TYPE_INT 'int' 
(69, 5)  	IDENTIFIER 'acct_parm' 
(69, 14)  	CORNER_BRACKET_O '[' 
(69, 15)  	NUMBER '3' 
(69, 16)  	CORNER_BRACKET_C ']' 
(69, 18)  	OP_ASSIGNMENT '=' 
(69, 20)  	CURLY_BRACKET_O '{' 
(69, 21)  	NUMBER '4' 
(69, 22)  	COMMA ',' 
(69, 24)  	NUMBER '2' 
(69, 25)  	COMMA ',' 
(69, 27)  	NUMBER '30' 
(69, 29)  	CURLY_BRACKET_C '}' 
(69, 30)  	SEMICOLON ';' 
(70, 1)  	PP_DEFINE '#define' 
(70, 9)  	IDENTIFIER 'RESUME' 
(70, 21)  	BRACKET_O '(' 
(70, 22)  	IDENTIFIER 'acct_parm' 
(70, 31)  	CORNER_BRACKET_O '[' 
(70, 32)  	NUMBER '0' 
(70, 33)  	CORNER_BRACKET_C ']' 
(70, 34)  	BRACKET_C ')' 
(71, 1)  	PP_DEFINE '#define' 
(71, 9)  	IDENTIFIER 'SUSPEND' 
(71, 21)  	BRACKET_O '(' 
(71, 22)  	IDENTIFIER 'acct_parm' 
(71, 31)  	CORNER_BRACKET_O '[' 
(71, 32)  	NUMBER '1' 
(71, 33)  	CORNER_BRACKET_C ']' 
(71, 34)  	BRACKET_C ')' 
(72, 1)  	PP_DEFINE '#define' 
(72, 9)  	IDENTIFIER 'ACCT_TIMEOUT' 
(72, 25)  	BRACKET_O '(' 
(72, 26)  	IDENTIFIER 'acct_parm' 
(72, 35)  	CORNER_BRACKET_O '[' 
(72, 36)  	NUMBER '2' 
(72, 37)  	CORNER_BRACKET_C ']' 
(72, 38)  	BRACKET_C ')' 
(77, 1)  	IDENTIFIER 'static' 
(77, 8)  	IDENTIFIER 'void' 
(77, 13)  	IDENTIFIER 'do_acct_process' 
(77, 28)  	BRACKET_O '(' 
(77, 29)  	STRUCT 'struct' 
(77, 36)  	IDENTIFIER 'file' 
(77, 41)  	MULT '*' 
(77, 42)  	BRACKET_C ')' 
(77, 43)  	SEMICOLON ';' 
(84, 1)  	STRUCT 'struct' 
(84, 8)  	IDENTIFIER 'acct_glbs' 
(84, 18)  	CURLY_BRACKET_O '{' 
(85, 5)  	IDENTIFIER 'spinlock_t' 
(85, 21)  	IDENTIFIER 'lock' 
(85, 25)  	SEMICOLON ';' 
(86, 5)  	IDENTIFIER 'volatile' 
(86, 14)  	TYPE_INT 'int' 
(86, 25)  	IDENTIFIER 'active' 
(86, 31)  	SEMICOLON ';' 
(87, 5)  	IDENTIFIER 'volatile' 
(87, 14)  	TYPE_INT 'int' 
(87, 25)  	IDENTIFIER 'needcheck' 
(87, 34)  	SEMICOLON ';' 
(88, 5)  	STRUCT 'struct' 
(88, 12)  	IDENTIFIER 'file' 
(88, 21)  	MULT '*' 
(88, 22)  	IDENTIFIER 'file' 
(88, 26)  	SEMICOLON ';' 
(89, 5)  	STRUCT 'struct' 
(89, 12)  	IDENTIFIER 'timer_list' 
(89, 25)  	IDENTIFIER 'timer' 
(89, 30)  	SEMICOLON ';' 
(90, 1)  	CURLY_BRACKET_C '}' 
(90, 2)  	SEMICOLON ';' 
(92, 1)  	IDENTIFIER 'static' 
(92, 8)  	STRUCT 'struct' 
(92, 15)  	IDENTIFIER 'acct_glbs' 
(92, 25)  	IDENTIFIER 'acct_globals' 
(92, 38)  	IDENTIFIER '__cacheline_aligned' 
(92, 58)  	OP_ASSIGNMENT '=' 
(93, 5)  	CURLY_BRACKET_O '{' 
(93, 6)  	IDENTIFIER '__SPIN_LOCK_UNLOCKED' 
(93, 26)  	BRACKET_O '(' 
(93, 27)  	IDENTIFIER 'acct_globals' 
(93, 39)  	DOT '.' 
(93, 40)  	IDENTIFIER 'lock' 
(93, 44)  	BRACKET_C ')' 
(93, 45)  	CURLY_BRACKET_C '}' 
(93, 46)  	SEMICOLON ';' 
(98, 1)  	IDENTIFIER 'static' 
(98, 8)  	IDENTIFIER 'void' 
(98, 13)  	IDENTIFIER 'acct_timeout' 
(98, 25)  	BRACKET_O '(' 
(98, 26)  	TYPE_UNSIGNED 'unsigned' 
(98, 35)  	TYPE_LONG 'long' 
(98, 40)  	IDENTIFIER 'unused' 
(98, 46)  	BRACKET_C ')' 
(99, 1)  	CURLY_BRACKET_O '{' 
(100, 5)  	IDENTIFIER 'acct_globals' 
(100, 17)  	DOT '.' 
(100, 18)  	IDENTIFIER 'needcheck' 
(100, 28)  	OP_ASSIGNMENT '=' 
(100, 30)  	NUMBER '1' 
(100, 31)  	SEMICOLON ';' 
(101, 1)  	CURLY_BRACKET_C '}' 
(106, 1)  	IDENTIFIER 'static' 
(106, 8)  	TYPE_INT 'int' 
(106, 12)  	IDENTIFIER 'check_free_space' 
(106, 28)  	BRACKET_O '(' 
(106, 29)  	STRUCT 'struct' 
(106, 36)  	IDENTIFIER 'file' 
(106, 41)  	MULT '*' 
(106, 42)  	IDENTIFIER 'file' 
(106, 46)  	BRACKET_C ')' 
(107, 1)  	CURLY_BRACKET_O '{' 
(108, 5)  	STRUCT 'struct' 
(108, 12)  	IDENTIFIER 'kstatfs' 
(108, 20)  	IDENTIFIER 'sbuf' 
(108, 24)  	SEMICOLON ';' 
(109, 5)  	TYPE_INT 'int' 
(109, 9)  	IDENTIFIER 'res' 
(109, 12)  	SEMICOLON ';' 
(110, 5)  	TYPE_INT 'int' 
(110, 9)  	IDENTIFIER 'act' 
(110, 12)  	SEMICOLON ';' 
(111, 5)  	IDENTIFIER 'sector_t' 
(111, 14)  	IDENTIFIER 'resume' 
(111, 20)  	SEMICOLON ';' 
(112, 5)  	IDENTIFIER 'sector_t' 
(112, 14)  	IDENTIFIER 'suspend' 
(112, 21)  	SEMICOLON ';' 
(114, 5)  	IDENTIFIER 'spin_lock' 
(114, 14)  	BRACKET_O '(' 
(114, 15)  	AMPERSANT '&' 
(114, 16)  	IDENTIFIER 'acct_globals' 
(114, 28)  	DOT '.' 
(114, 29)  	IDENTIFIER 'lock' 
(114, 33)  	BRACKET_C ')' 
(114, 34)  	SEMICOLON ';' 
(115, 5)  	IDENTIFIER 'res' 
(115, 9)  	OP_ASSIGNMENT '=' 
(115, 11)  	IDENTIFIER 'acct_globals' 
(115, 23)  	DOT '.' 
(115, 24)  	IDENTIFIER 'active' 
(115, 30)  	SEMICOLON ';' 
(116, 5)  	IF 'if' 
(116, 8)  	BRACKET_O '(' 
(116, 9)  	NOT '!' 
(116, 10)  	IDENTIFIER 'file' 
(116, 15)  	OR '||' 
(116, 18)  	NOT '!' 
(116, 19)  	IDENTIFIER 'acct_globals' 
(116, 31)  	DOT '.' 
(116, 32)  	IDENTIFIER 'needcheck' 
(116, 41)  	BRACKET_C ')' 
(117, 9)  	IDENTIFIER 'goto' 
(117, 14)  	IDENTIFIER 'out' 
(117, 17)  	SEMICOLON ';' 
(118, 5)  	IDENTIFIER 'spin_unlock' 
(118, 16)  	BRACKET_O '(' 
(118, 17)  	AMPERSANT '&' 
(118, 18)  	IDENTIFIER 'acct_globals' 
(118, 30)  	DOT '.' 
(118, 31)  	IDENTIFIER 'lock' 
(118, 35)  	BRACKET_C ')' 
(118, 36)  	SEMICOLON ';' 
(121, 5)  	IF 'if' 
(121, 8)  	BRACKET_O '(' 
(121, 9)  	IDENTIFIER 'vfs_statfs' 
(121, 19)  	BRACKET_O '(' 
(121, 20)  	IDENTIFIER 'file' 
(121, 24)  	MINUS '-' 
(121, 25)  	GREATER '>' 
(121, 26)  	IDENTIFIER 'f_path' 
(121, 32)  	DOT '.' 
(121, 33)  	IDENTIFIER 'dentry' 
(121, 39)  	COMMA ',' 
(121, 41)  	AMPERSANT '&' 
(121, 42)  	IDENTIFIER 'sbuf' 
(121, 46)  	BRACKET_C ')' 
(121, 47)  	BRACKET_C ')' 
(122, 9)  	IDENTIFIER 'return' 
(122, 16)  	IDENTIFIER 'res' 
(122, 19)  	SEMICOLON ';' 
(123, 5)  	IDENTIFIER 'suspend' 
(123, 13)  	OP_ASSIGNMENT '=' 
(123, 15)  	IDENTIFIER 'sbuf' 
(123, 19)  	DOT '.' 
(123, 20)  	IDENTIFIER 'f_blocks' 
(123, 29)  	MULT '*' 
(123, 31)  	IDENTIFIER 'SUSPEND' 
(123, 38)  	SEMICOLON ';' 
(124, 5)  	IDENTIFIER 'resume' 
(124, 12)  	OP_ASSIGNMENT '=' 
(124, 14)  	IDENTIFIER 'sbuf' 
(124, 18)  	DOT '.' 
(124, 19)  	IDENTIFIER 'f_blocks' 
(124, 28)  	MULT '*' 
(124, 30)  	IDENTIFIER 'RESUME' 
(124, 36)  	SEMICOLON ';' 
(126, 5)  	IDENTIFIER 'sector_div' 
(126, 15)  	BRACKET_O '(' 
(126, 16)  	IDENTIFIER 'suspend' 
(126, 23)  	COMMA ',' 
(126, 25)  	NUMBER '100' 
(126, 28)  	BRACKET_C ')' 
(126, 29)  	SEMICOLON ';' 
(127, 5)  	IDENTIFIER 'sector_div' 
(127, 15)  	BRACKET_O '(' 
(127, 16)  	IDENTIFIER 'resume' 
(127, 22)  	COMMA ',' 
(127, 24)  	NUMBER '100' 
(127, 27)  	BRACKET_C ')' 
(127, 28)  	SEMICOLON ';' 
(129, 5)  	IF 'if' 
(129, 8)  	BRACKET_O '(' 
(129, 9)  	IDENTIFIER 'sbuf' 
(129, 13)  	DOT '.' 
(129, 14)  	IDENTIFIER 'f_bavail' 
(129, 23)  	LE_EQ '<=' 
(129, 26)  	IDENTIFIER 'suspend' 
(129, 33)  	BRACKET_C ')' 
(130, 9)  	IDENTIFIER 'act' 
(130, 13)  	OP_ASSIGNMENT '=' 
(130, 15)  	MINUS '-' 
(130, 16)  	NUMBER '1' 
(130, 17)  	SEMICOLON ';' 
(131, 5)  	ELSE 'else' 
(131, 10)  	IF 'if' 
(131, 13)  	BRACKET_O '(' 
(131, 14)  	IDENTIFIER 'sbuf' 
(131, 18)  	DOT '.' 
(131, 19)  	IDENTIFIER 'f_bavail' 
(131, 28)  	GR_EQ '>=' 
(131, 31)  	IDENTIFIER 'resume' 
(131, 37)  	BRACKET_C ')' 
(132, 9)  	IDENTIFIER 'act' 
(132, 13)  	OP_ASSIGNMENT '=' 
(132, 15)  	NUMBER '1' 
(132, 16)  	SEMICOLON ';' 
(133, 5)  	ELSE 'else' 
(134, 9)  	IDENTIFIER 'act' 
(134, 13)  	OP_ASSIGNMENT '=' 
(134, 15)  	NUMBER '0' 
(134, 16)  	SEMICOLON ';' 
(140, 5)  	IDENTIFIER 'spin_lock' 
(140, 14)  	BRACKET_O '(' 
(140, 15)  	AMPERSANT '&' 
(140, 16)  	IDENTIFIER 'acct_globals' 
(140, 28)  	DOT '.' 
(140, 29)  	IDENTIFIER 'lock' 
(140, 33)  	BRACKET_C ')' 
(140, 34)  	SEMICOLON ';' 
(141, 5)  	IF 'if' 
(141, 8)  	BRACKET_O '(' 
(141, 9)  	IDENTIFIER 'file' 
(141, 14)  	NOT_EQ '!=' 
(141, 17)  	IDENTIFIER 'acct_globals' 
(141, 29)  	DOT '.' 
(141, 30)  	IDENTIFIER 'file' 
(141, 34)  	BRACKET_C ')' 
(141, 36)  	CURLY_BRACKET_O '{' 
(142, 9)  	IF 'if' 
(142, 12)  	BRACKET_O '(' 
(142, 13)  	IDENTIFIER 'act' 
(142, 16)  	BRACKET_C ')' 
(143, 13)  	IDENTIFIER 'res' 
(143, 17)  	OP_ASSIGNMENT '=' 
(143, 19)  	IDENTIFIER 'act' 
(143, 22)  	GREATER '>' 
(143, 23)  	NUMBER '0' 
(143, 24)  	SEMICOLON ';' 
(144, 9)  	IDENTIFIER 'goto' 
(144, 14)  	IDENTIFIER 'out' 
(144, 17)  	SEMICOLON ';' 
(145, 5)  	CURLY_BRACKET_C '}' 
(147, 5)  	IF 'if' 
(147, 8)  	BRACKET_O '(' 
(147, 9)  	IDENTIFIER 'acct_globals' 
(147, 21)  	DOT '.' 
(147, 22)  	IDENTIFIER 'active' 
(147, 28)  	BRACKET_C ')' 
(147, 30)  	CURLY_BRACKET_O '{' 
(148, 9)  	IF 'if' 
(148, 12)  	BRACKET_O '(' 
(148, 13)  	IDENTIFIER 'act' 
(148, 17)  	LESS '<' 
(148, 19)  	NUMBER '0' 
(148, 20)  	BRACKET_C ')' 
(148, 22)  	CURLY_BRACKET_O '{' 
(149, 13)  	IDENTIFIER 'acct_globals' 
(149, 25)  	DOT '.' 
(149, 26)  	IDENTIFIER 'active' 
(149, 33)  	OP_ASSIGNMENT '=' 
(149, 35)  	NUMBER '0' 
(149, 36)  	SEMICOLON ';' 
(150, 13)  	IDENTIFIER 'printk' 
(150, 19)  	BRACKET_O '(' 
(150, 20)  	IDENTIFIER 'KERN_INFO' 
(150, 30)  	STRING '"Process accounting paused\n"' 
(150, 59)  	BRACKET_C ')' 
(150, 60)  	SEMICOLON ';' 
(151, 9)  	CURLY_BRACKET_C '}' 
(152, 5)  	CURLY_BRACKET_C '}' 
(152, 7)  	ELSE 'else' 
(152, 12)  	CURLY_BRACKET_O '{' 
(153, 9)  	IF 'if' 
(153, 12)  	BRACKET_O '(' 
(153, 13)  	IDENTIFIER 'act' 
(153, 17)  	GREATER '>' 
(153, 19)  	NUMBER '0' 
(153, 20)  	BRACKET_C ')' 
(153, 22)  	CURLY_BRACKET_O '{' 
(154, 13)  	IDENTIFIER 'acct_globals' 
(154, 25)  	DOT '.' 
(154, 26)  	IDENTIFIER 'active' 
(154, 33)  	OP_ASSIGNMENT '=' 
(154, 35)  	NUMBER '1' 
(154, 36)  	SEMICOLON ';' 
(155, 13)  	IDENTIFIER 'printk' 
(155, 19)  	BRACKET_O '(' 
(155, 20)  	IDENTIFIER 'KERN_INFO' 
(155, 30)  	STRING '"Process accounting resumed\n"' 
(155, 60)  	BRACKET_C ')' 
(155, 61)  	SEMICOLON ';' 
(156, 9)  	CURLY_BRACKET_C '}' 
(157, 5)  	CURLY_BRACKET_C '}' 
(159, 5)  	IDENTIFIER 'del_timer' 
(159, 14)  	BRACKET_O '(' 
(159, 15)  	AMPERSANT '&' 
(159, 16)  	IDENTIFIER 'acct_globals' 
(159, 28)  	DOT '.' 
(159, 29)  	IDENTIFIER 'timer' 
(159, 34)  	BRACKET_C ')' 
(159, 35)  	SEMICOLON ';' 
(160, 5)  	IDENTIFIER 'acct_globals' 
(160, 17)  	DOT '.' 
(160, 18)  	IDENTIFIER 'needcheck' 
(160, 28)  	OP_ASSIGNMENT '=' 
(160, 30)  	NUMBER '0' 
(160, 31)  	SEMICOLON ';' 
(161, 5)  	IDENTIFIER 'acct_globals' 
(161, 17)  	DOT '.' 
(161, 18)  	IDENTIFIER 'timer' 
(161, 23)  	DOT '.' 
(161, 24)  	IDENTIFIER 'expires' 
(161, 32)  	OP_ASSIGNMENT '=' 
(161, 34)  	IDENTIFIER 'jiffies' 
(161, 42)  	PLUS '+' 
(161, 44)  	IDENTIFIER 'ACCT_TIMEOUT' 
(161, 56)  	MULT '*' 
(161, 57)  	IDENTIFIER 'HZ' 
(161, 59)  	SEMICOLON ';' 
(162, 5)  	IDENTIFIER 'add_timer' 
(162, 14)  	BRACKET_O '(' 
(162, 15)  	AMPERSANT '&' 
(162, 16)  	IDENTIFIER 'acct_globals' 
(162, 28)  	DOT '.' 
(162, 29)  	IDENTIFIER 'timer' 
(162, 34)  	BRACKET_C ')' 
(162, 35)  	SEMICOLON ';' 
(163, 5)  	IDENTIFIER 'res' 
(163, 9)  	OP_ASSIGNMENT '=' 
(163, 11)  	IDENTIFIER 'acct_globals' 
(163, 23)  	DOT '.' 
(163, 24)  	IDENTIFIER 'active' 
(163, 30)  	SEMICOLON ';' 
(164, 1)  	IDENTIFIER 'out' 
(164, 4)  	COLON ':' 
(165, 5)  	IDENTIFIER 'spin_unlock' 
(165, 16)  	BRACKET_O '(' 
(165, 17)  	AMPERSANT '&' 
(165, 18)  	IDENTIFIER 'acct_globals' 
(165, 30)  	DOT '.' 
(165, 31)  	IDENTIFIER 'lock' 
(165, 35)  	BRACKET_C ')' 
(165, 36)  	SEMICOLON ';' 
(166, 5)  	IDENTIFIER 'return' 
(166, 12)  	IDENTIFIER 'res' 
(166, 15)  	SEMICOLON ';' 
(167, 1)  	CURLY_BRACKET_C '}' 
(175, 1)  	IDENTIFIER 'static' 
(175, 8)  	IDENTIFIER 'void' 
(175, 13)  	IDENTIFIER 'acct_file_reopen' 
(175, 29)  	BRACKET_O '(' 
(175, 30)  	STRUCT 'struct' 
(175, 37)  	IDENTIFIER 'file' 
(175, 42)  	MULT '*' 
(175, 43)  	IDENTIFIER 'file' 
(175, 47)  	BRACKET_C ')' 
(176, 1)  	CURLY_BRACKET_O '{' 
(177, 5)  	STRUCT 'struct' 
(177, 12)  	IDENTIFIER 'file' 
(177, 17)  	MULT '*' 
(177, 18)  	IDENTIFIER 'old_acct' 
(177, 27)  	OP_ASSIGNMENT '=' 
(177, 29)  	IDENTIFIER 'NULL' 
(177, 33)  	SEMICOLON ';' 
(179, 5)  	IF 'if' 
(179, 8)  	BRACKET_O '(' 
(179, 9)  	IDENTIFIER 'acct_globals' 
(179, 21)  	DOT '.' 
(179, 22)  	IDENTIFIER 'file' 
(179, 26)  	BRACKET_C ')' 
(179, 28)  	CURLY_BRACKET_O '{' 
(180, 9)  	IDENTIFIER 'old_acct' 
(180, 18)  	OP_ASSIGNMENT '=' 
(180, 20)  	IDENTIFIER 'acct_globals' 
(180, 32)  	DOT '.' 
(180, 33)  	IDENTIFIER 'file' 
(180, 37)  	SEMICOLON ';' 
(181, 9)  	IDENTIFIER 'del_timer' 
(181, 18)  	BRACKET_O '(' 
(181, 19)  	AMPERSANT '&' 
(181, 20)  	IDENTIFIER 'acct_globals' 
(181, 32)  	DOT '.' 
(181, 33)  	IDENTIFIER 'timer' 
(181, 38)  	BRACKET_C ')' 
(181, 39)  	SEMICOLON ';' 
(182, 9)  	IDENTIFIER 'acct_globals' 
(182, 21)  	DOT '.' 
(182, 22)  	IDENTIFIER 'active' 
(182, 29)  	OP_ASSIGNMENT '=' 
(182, 31)  	NUMBER '0' 
(182, 32)  	SEMICOLON ';' 
(183, 9)  	IDENTIFIER 'acct_globals' 
(183, 21)  	DOT '.' 
(183, 22)  	IDENTIFIER 'needcheck' 
(183, 32)  	OP_ASSIGNMENT '=' 
(183, 34)  	NUMBER '0' 
(183, 35)  	SEMICOLON ';' 
(184, 9)  	IDENTIFIER 'acct_globals' 
(184, 21)  	DOT '.' 
(184, 22)  	IDENTIFIER 'file' 
(184, 27)  	OP_ASSIGNMENT '=' 
(184, 29)  	IDENTIFIER 'NULL' 
(184, 33)  	SEMICOLON ';' 
(185, 5)  	CURLY_BRACKET_C '}' 
(186, 5)  	IF 'if' 
(186, 8)  	BRACKET_O '(' 
(186, 9)  	IDENTIFIER 'file' 
(186, 13)  	BRACKET_C ')' 
(186, 15)  	CURLY_BRACKET_O '{' 
(187, 9)  	IDENTIFIER 'acct_globals' 
(187, 21)  	DOT '.' 
(187, 22)  	IDENTIFIER 'file' 
(187, 27)  	OP_ASSIGNMENT '=' 
(187, 29)  	IDENTIFIER 'file' 
(187, 33)  	SEMICOLON ';' 
(188, 9)  	IDENTIFIER 'acct_globals' 
(188, 21)  	DOT '.' 
(188, 22)  	IDENTIFIER 'needcheck' 
(188, 32)  	OP_ASSIGNMENT '=' 
(188, 34)  	NUMBER '0' 
(188, 35)  	SEMICOLON ';' 
(189, 9)  	IDENTIFIER 'acct_globals' 
(189, 21)  	DOT '.' 
(189, 22)  	IDENTIFIER 'active' 
(189, 29)  	OP_ASSIGNMENT '=' 
(189, 31)  	NUMBER '1' 
(189, 32)  	SEMICOLON ';' 
(191, 9)  	IDENTIFIER 'init_timer' 
(191, 19)  	BRACKET_O '(' 
(191, 20)  	AMPERSANT '&' 
(191, 21)  	IDENTIFIER 'acct_globals' 
(191, 33)  	DOT '.' 
(191, 34)  	IDENTIFIER 'timer' 
(191, 39)  	BRACKET_C ')' 
(191, 40)  	SEMICOLON ';' 
(192, 9)  	IDENTIFIER 'acct_globals' 
(192, 21)  	DOT '.' 
(192, 22)  	IDENTIFIER 'timer' 
(192, 27)  	DOT '.' 
(192, 28)  	IDENTIFIER 'function' 
(192, 37)  	OP_ASSIGNMENT '=' 
(192, 39)  	IDENTIFIER 'acct_timeout' 
(192, 51)  	SEMICOLON ';' 
(193, 9)  	IDENTIFIER 'acct_globals' 
(193, 21)  	DOT '.' 
(193, 22)  	IDENTIFIER 'timer' 
(193, 27)  	DOT '.' 
(193, 28)  	IDENTIFIER 'expires' 
(193, 36)  	OP_ASSIGNMENT '=' 
(193, 38)  	IDENTIFIER 'jiffies' 
(193, 46)  	PLUS '+' 
(193, 48)  	IDENTIFIER 'ACCT_TIMEOUT' 
(193, 60)  	MULT '*' 
(193, 61)  	IDENTIFIER 'HZ' 
(193, 63)  	SEMICOLON ';' 
(194, 9)  	IDENTIFIER 'add_timer' 
(194, 18)  	BRACKET_O '(' 
(194, 19)  	AMPERSANT '&' 
(194, 20)  	IDENTIFIER 'acct_globals' 
(194, 32)  	DOT '.' 
(194, 33)  	IDENTIFIER 'timer' 
(194, 38)  	BRACKET_C ')' 
(194, 39)  	SEMICOLON ';' 
(195, 5)  	CURLY_BRACKET_C '}' 
(196, 5)  	IF 'if' 
(196, 8)  	BRACKET_O '(' 
(196, 9)  	IDENTIFIER 'old_acct' 
(196, 17)  	BRACKET_C ')' 
(196, 19)  	CURLY_BRACKET_O '{' 
(197, 9)  	IDENTIFIER 'mnt_unpin' 
(197, 18)  	BRACKET_O '(' 
(197, 19)  	IDENTIFIER 'old_acct' 
(197, 27)  	MINUS '-' 
(197, 28)  	GREATER '>' 
(197, 29)  	IDENTIFIER 'f_path' 
(197, 35)  	DOT '.' 
(197, 36)  	IDENTIFIER 'mnt' 
(197, 39)  	BRACKET_C ')' 
(197, 40)  	SEMICOLON ';' 
(198, 9)  	IDENTIFIER 'spin_unlock' 
(198, 20)  	BRACKET_O '(' 
(198, 21)  	AMPERSANT '&' 
(198, 22)  	IDENTIFIER 'acct_globals' 
(198, 34)  	DOT '.' 
(198, 35)  	IDENTIFIER 'lock' 
(198, 39)  	BRACKET_C ')' 
(198, 40)  	SEMICOLON ';' 
(199, 9)  	IDENTIFIER 'do_acct_process' 
(199, 24)  	BRACKET_O '(' 
(199, 25)  	IDENTIFIER 'old_acct' 
(199, 33)  	BRACKET_C ')' 
(199, 34)  	SEMICOLON ';' 
(200, 9)  	IDENTIFIER 'filp_close' 
(200, 19)  	BRACKET_O '(' 
(200, 20)  	IDENTIFIER 'old_acct' 
(200, 28)  	COMMA ',' 
(200, 30)  	IDENTIFIER 'NULL' 
(200, 34)  	BRACKET_C ')' 
(200, 35)  	SEMICOLON ';' 
(201, 9)  	IDENTIFIER 'spin_lock' 
(201, 18)  	BRACKET_O '(' 
(201, 19)  	AMPERSANT '&' 
(201, 20)  	IDENTIFIER 'acct_globals' 
(201, 32)  	DOT '.' 
(201, 33)  	IDENTIFIER 'lock' 
(201, 37)  	BRACKET_C ')' 
(201, 38)  	SEMICOLON ';' 
(202, 5)  	CURLY_BRACKET_C '}' 
(203, 1)  	CURLY_BRACKET_C '}' 
(205, 1)  	IDENTIFIER 'static' 
(205, 8)  	TYPE_INT 'int' 
(205, 12)  	IDENTIFIER 'acct_on' 
(205, 19)  	BRACKET_O '(' 
(205, 20)  	TYPE_CHAR 'char' 
(205, 25)  	MULT '*' 
(205, 26)  	IDENTIFIER 'name' 
(205, 30)  	BRACKET_C ')' 
(206, 1)  	CURLY_BRACKET_O '{' 
(207, 5)  	STRUCT 'struct' 
(207, 12)  	IDENTIFIER 'file' 
(207, 17)  	MULT '*' 
(207, 18)  	IDENTIFIER 'file' 
(207, 22)  	SEMICOLON ';' 
(208, 5)  	TYPE_INT 'int' 
(208, 9)  	IDENTIFIER 'error' 
(208, 14)  	SEMICOLON ';' 
(211, 5)  	IDENTIFIER 'file' 
(211, 10)  	OP_ASSIGNMENT '=' 
(211, 12)  	IDENTIFIER 'filp_open' 
(211, 21)  	BRACKET_O '(' 
(211, 22)  	IDENTIFIER 'name' 
(211, 26)  	COMMA ',' 
(211, 28)  	IDENTIFIER 'O_WRONLY' 
(211, 36)  	LOGICAL_OR '|' 
(211, 37)  	IDENTIFIER 'O_APPEND' 
(211, 45)  	LOGICAL_OR '|' 
(211, 46)  	IDENTIFIER 'O_LARGEFILE' 
(211, 57)  	COMMA ',' 
(211, 59)  	NUMBER '0' 
(211, 60)  	BRACKET_C ')' 
(211, 61)  	SEMICOLON ';' 
(212, 5)  	IF 'if' 
(212, 8)  	BRACKET_O '(' 
(212, 9)  	IDENTIFIER 'IS_ERR' 
(212, 15)  	BRACKET_O '(' 
(212, 16)  	IDENTIFIER 'file' 
(212, 20)  	BRACKET_C ')' 
(212, 21)  	BRACKET_C ')' 
(213, 9)  	IDENTIFIER 'return' 
(213, 16)  	IDENTIFIER 'PTR_ERR' 
(213, 23)  	BRACKET_O '(' 
(213, 24)  	IDENTIFIER 'file' 
(213, 28)  	BRACKET_C ')' 
(213, 29)  	SEMICOLON ';' 
(215, 5)  	IF 'if' 
(215, 8)  	BRACKET_O '(' 
(215, 9)  	NOT '!' 
(215, 10)  	IDENTIFIER 'S_ISREG' 
(215, 17)  	BRACKET_O '(' 
(215, 18)  	IDENTIFIER 'file' 
(215, 22)  	MINUS '-' 
(215, 23)  	GREATER '>' 
(215, 24)  	IDENTIFIER 'f_path' 
(215, 30)  	DOT '.' 
(215, 31)  	IDENTIFIER 'dentry' 
(215, 37)  	MINUS '-' 
(215, 38)  	GREATER '>' 
(215, 39)  	IDENTIFIER 'd_inode' 
(215, 46)  	MINUS '-' 
(215, 47)  	GREATER '>' 
(215, 48)  	IDENTIFIER 'i_mode' 
(215, 54)  	BRACKET_C ')' 
(215, 55)  	BRACKET_C ')' 
(215, 57)  	CURLY_BRACKET_O '{' 
(216, 9)  	IDENTIFIER 'filp_close' 
(216, 19)  	BRACKET_O '(' 
(216, 20)  	IDENTIFIER 'file' 
(216, 24)  	COMMA ',' 
(216, 26)  	IDENTIFIER 'NULL' 
(216, 30)  	BRACKET_C ')' 
(216, 31)  	SEMICOLON ';' 
(217, 9)  	IDENTIFIER 'return' 
(217, 16)  	MINUS '-' 
(217, 17)  	IDENTIFIER 'EACCES' 
(217, 23)  	SEMICOLON ';' 
(218, 5)  	CURLY_BRACKET_C '}' 
(220, 5)  	IF 'if' 
(220, 8)  	BRACKET_O '(' 
(220, 9)  	NOT '!' 
(220, 10)  	IDENTIFIER 'file' 
(220, 14)  	MINUS '-' 
(220, 15)  	GREATER '>' 
(220, 16)  	IDENTIFIER 'f_op' 
(220, 20)  	MINUS '-' 
(220, 21)  	GREATER '>' 
(220, 22)  	IDENTIFIER 'write' 
(220, 27)  	BRACKET_C ')' 
(220, 29)  	CURLY_BRACKET_O '{' 
(221, 9)  	IDENTIFIER 'filp_close' 
(221, 19)  	BRACKET_O '(' 
(221, 20)  	IDENTIFIER 'file' 
(221, 24)  	COMMA ',' 
(221, 26)  	IDENTIFIER 'NULL' 
(221, 30)  	BRACKET_C ')' 
(221, 31)  	SEMICOLON ';' 
(222, 9)  	IDENTIFIER 'return' 
(222, 16)  	MINUS '-' 
(222, 17)  	IDENTIFIER 'EIO' 
(222, 20)  	SEMICOLON ';' 
(223, 5)  	CURLY_BRACKET_C '}' 
(225, 5)  	IDENTIFIER 'error' 
(225, 11)  	OP_ASSIGNMENT '=' 
(225, 13)  	IDENTIFIER 'security_acct' 
(225, 26)  	BRACKET_O '(' 
(225, 27)  	IDENTIFIER 'file' 
(225, 31)  	BRACKET_C ')' 
(225, 32)  	SEMICOLON ';' 
(226, 5)  	IF 'if' 
(226, 8)  	BRACKET_O '(' 
(226, 9)  	IDENTIFIER 'error' 
(226, 14)  	BRACKET_C ')' 
(226, 16)  	CURLY_BRACKET_O '{' 
(227, 9)  	IDENTIFIER 'filp_close' 
(227, 19)  	BRACKET_O '(' 
(227, 20)  	IDENTIFIER 'file' 
(227, 24)  	COMMA ',' 
(227, 26)  	IDENTIFIER 'NULL' 
(227, 30)  	BRACKET_C ')' 
(227, 31)  	SEMICOLON ';' 
(228, 9)  	IDENTIFIER 'return' 
(228, 16)  	IDENTIFIER 'error' 
(228, 21)  	SEMICOLON ';' 
(229, 5)  	CURLY_BRACKET_C '}' 
(231, 5)  	IDENTIFIER 'spin_lock' 
(231, 14)  	BRACKET_O '(' 
(231, 15)  	AMPERSANT '&' 
(231, 16)  	IDENTIFIER 'acct_globals' 
(231, 28)  	DOT '.' 
(231, 29)  	IDENTIFIER 'lock' 
(231, 33)  	BRACKET_C ')' 
(231, 34)  	SEMICOLON ';' 
(232, 5)  	IDENTIFIER 'mnt_pin' 
(232, 12)  	BRACKET_O '(' 
(232, 13)  	IDENTIFIER 'file' 
(232, 17)  	MINUS '-' 
(232, 18)  	GREATER '>' 
(232, 19)  	IDENTIFIER 'f_path' 
(232, 25)  	DOT '.' 
(232, 26)  	IDENTIFIER 'mnt' 
(232, 29)  	BRACKET_C ')' 
(232, 30)  	SEMICOLON ';' 
(233, 5)  	IDENTIFIER 'acct_file_reopen' 
(233, 21)  	BRACKET_O '(' 
(233, 22)  	IDENTIFIER 'file' 
(233, 26)  	BRACKET_C ')' 
(233, 27)  	SEMICOLON ';' 
(234, 5)  	IDENTIFIER 'spin_unlock' 
(234, 16)  	BRACKET_O '(' 
(234, 17)  	AMPERSANT '&' 
(234, 18)  	IDENTIFIER 'acct_globals' 
(234, 30)  	DOT '.' 
(234, 31)  	IDENTIFIER 'lock' 
(234, 35)  	BRACKET_C ')' 
(234, 36)  	SEMICOLON ';' 
(236, 5)  	IDENTIFIER 'mntput' 
(236, 11)  	BRACKET_O '(' 
(236, 12)  	IDENTIFIER 'file' 
(236, 16)  	MINUS '-' 
(236, 17)  	GREATER '>' 
(236, 18)  	IDENTIFIER 'f_path' 
(236, 24)  	DOT '.' 
(236, 25)  	IDENTIFIER 'mnt' 
(236, 28)  	BRACKET_C ')' 
(236, 29)  	SEMICOLON ';' 
(238, 5)  	IDENTIFIER 'return' 
(238, 12)  	NUMBER '0' 
(238, 13)  	SEMICOLON ';' 
(239, 1)  	CURLY_BRACKET_C '}' 
(252, 1)  	IDENTIFIER 'asmlinkage' 
(252, 12)  	TYPE_LONG 'long' 
(252, 17)  	IDENTIFIER 'sys_acct' 
(252, 25)  	BRACKET_O '(' 
(252, 26)  	CONST 'const' 
(252, 32)  	TYPE_CHAR 'char' 
(252, 37)  	IDENTIFIER '__user' 
(252, 44)  	MULT '*' 
(252, 45)  	IDENTIFIER 'name' 
(252, 49)  	BRACKET_C ')' 
(253, 1)  	CURLY_BRACKET_O '{' 
(254, 5)  	TYPE_INT 'int' 
(254, 9)  	IDENTIFIER 'error' 
(254, 14)  	SEMICOLON ';' 
(256, 5)  	IF 'if' 
(256, 8)  	BRACKET_O '(' 
(256, 9)  	NOT '!' 
(256, 10)  	IDENTIFIER 'capable' 
(256, 17)  	BRACKET_O '(' 
(256, 18)  	IDENTIFIER 'CAP_SYS_PACCT' 
(256, 31)  	BRACKET_C ')' 
(256, 32)  	BRACKET_C ')' 
(257, 9)  	IDENTIFIER 'return' 
(257, 16)  	MINUS '-' 
(257, 17)  	IDENTIFIER 'EPERM' 
(257, 22)  	SEMICOLON ';' 
(259, 5)  	IF 'if' 
(259, 8)  	BRACKET_O '(' 
(259, 9)  	IDENTIFIER 'name' 
(259, 13)  	BRACKET_C ')' 
(259, 15)  	CURLY_BRACKET_O '{' 
(260, 9)  	TYPE_CHAR 'char' 
(260, 14)  	MULT '*' 
(260, 15)  	IDENTIFIER 'tmp' 
(260, 19)  	OP_ASSIGNMENT '=' 
(260, 21)  	IDENTIFIER 'getname' 
(260, 28)  	BRACKET_O '(' 
(260, 29)  	IDENTIFIER 'name' 
(260, 33)  	BRACKET_C ')' 
(260, 34)  	SEMICOLON ';' 
(261, 9)  	IF 'if' 
(261, 12)  	BRACKET_O '(' 
(261, 13)  	IDENTIFIER 'IS_ERR' 
(261, 19)  	BRACKET_O '(' 
(261, 20)  	IDENTIFIER 'tmp' 
(261, 23)  	BRACKET_C ')' 
(261, 24)  	BRACKET_C ')' 
(262, 13)  	IDENTIFIER 'return' 
(262, 20)  	BRACKET_O '(' 
(262, 21)  	IDENTIFIER 'PTR_ERR' 
(262, 28)  	BRACKET_O '(' 
(262, 29)  	IDENTIFIER 'tmp' 
(262, 32)  	BRACKET_C ')' 
(262, 33)  	BRACKET_C ')' 
(262, 34)  	SEMICOLON ';' 
(263, 9)  	IDENTIFIER 'error' 
(263, 15)  	OP_ASSIGNMENT '=' 
(263, 17)  	IDENTIFIER 'acct_on' 
(263, 24)  	BRACKET_O '(' 
(263, 25)  	IDENTIFIER 'tmp' 
(263, 28)  	BRACKET_C ')' 
(263, 29)  	SEMICOLON ';' 
(264, 9)  	IDENTIFIER 'putname' 
(264, 16)  	BRACKET_O '(' 
(264, 17)  	IDENTIFIER 'tmp' 
(264, 20)  	BRACKET_C ')' 
(264, 21)  	SEMICOLON ';' 
(265, 5)  	CURLY_BRACKET_C '}' 
(265, 7)  	ELSE 'else' 
(265, 12)  	CURLY_BRACKET_O '{' 
(266, 9)  	IDENTIFIER 'error' 
(266, 15)  	OP_ASSIGNMENT '=' 
(266, 17)  	IDENTIFIER 'security_acct' 
(266, 30)  	BRACKET_O '(' 
(266, 31)  	IDENTIFIER 'NULL' 
(266, 35)  	BRACKET_C ')' 
(266, 36)  	SEMICOLON ';' 
(267, 9)  	IF 'if' 
(267, 12)  	BRACKET_O '(' 
(267, 13)  	NOT '!' 
(267, 14)  	IDENTIFIER 'error' 
(267, 19)  	BRACKET_C ')' 
(267, 21)  	CURLY_BRACKET_O '{' 
(268, 13)  	IDENTIFIER 'spin_lock' 
(268, 22)  	BRACKET_O '(' 
(268, 23)  	AMPERSANT '&' 
(268, 24)  	IDENTIFIER 'acct_globals' 
(268, 36)  	DOT '.' 
(268, 37)  	IDENTIFIER 'lock' 
(268, 41)  	BRACKET_C ')' 
(268, 42)  	SEMICOLON ';' 
(269, 13)  	IDENTIFIER 'acct_file_reopen' 
(269, 29)  	BRACKET_O '(' 
(269, 30)  	IDENTIFIER 'NULL' 
(269, 34)  	BRACKET_C ')' 
(269, 35)  	SEMICOLON ';' 
(270, 13)  	IDENTIFIER 'spin_unlock' 
(270, 24)  	BRACKET_O '(' 
(270, 25)  	AMPERSANT '&' 
(270, 26)  	IDENTIFIER 'acct_globals' 
(270, 38)  	DOT '.' 
(270, 39)  	IDENTIFIER 'lock' 
(270, 43)  	BRACKET_C ')' 
(270, 44)  	SEMICOLON ';' 
(271, 9)  	CURLY_BRACKET_C '}' 
(272, 5)  	CURLY_BRACKET_C '}' 
(273, 5)  	IDENTIFIER 'return' 
(273, 12)  	IDENTIFIER 'error' 
(273, 17)  	SEMICOLON ';' 
(274, 1)  	CURLY_BRACKET_C '}' 
(283, 1)  	IDENTIFIER 'void' 
(283, 6)  	IDENTIFIER 'acct_auto_close_mnt' 
(283, 25)  	BRACKET_O '(' 
(283, 26)  	STRUCT 'struct' 
(283, 33)  	IDENTIFIER 'vfsmount' 
(283, 42)  	MULT '*' 
(283, 43)  	IDENTIFIER 'm' 
(283, 44)  	BRACKET_C ')' 
(284, 1)  	CURLY_BRACKET_O '{' 
(285, 5)  	IDENTIFIER 'spin_lock' 
(285, 14)  	BRACKET_O '(' 
(285, 15)  	AMPERSANT '&' 
(285, 16)  	IDENTIFIER 'acct_globals' 
(285, 28)  	DOT '.' 
(285, 29)  	IDENTIFIER 'lock' 
(285, 33)  	BRACKET_C ')' 
(285, 34)  	SEMICOLON ';' 
(286, 5)  	IF 'if' 
(286, 8)  	BRACKET_O '(' 
(286, 9)  	IDENTIFIER 'acct_globals' 
(286, 21)  	DOT '.' 
(286, 22)  	IDENTIFIER 'file' 
(286, 27)  	AND '&&' 
(286, 30)  	IDENTIFIER 'acct_globals' 
(286, 42)  	DOT '.' 
(286, 43)  	IDENTIFIER 'file' 
(286, 47)  	MINUS '-' 
(286, 48)  	GREATER '>' 
(286, 49)  	IDENTIFIER 'f_path' 
(286, 55)  	DOT '.' 
(286, 56)  	IDENTIFIER 'mnt' 
(286, 60)  	EQ '==' 
(286, 63)  	IDENTIFIER 'm' 
(286, 64)  	BRACKET_C ')' 
(287, 9)  	IDENTIFIER 'acct_file_reopen' 
(287, 25)  	BRACKET_O '(' 
(287, 26)  	IDENTIFIER 'NULL' 
(287, 30)  	BRACKET_C ')' 
(287, 31)  	SEMICOLON ';' 
(288, 5)  	IDENTIFIER 'spin_unlock' 
(288, 16)  	BRACKET_O '(' 
(288, 17)  	AMPERSANT '&' 
(288, 18)  	IDENTIFIER 'acct_globals' 
(288, 30)  	DOT '.' 
(288, 31)  	IDENTIFIER 'lock' 
(288, 35)  	BRACKET_C ')' 
(288, 36)  	SEMICOLON ';' 
(289, 1)  	CURLY_BRACKET_C '}' 
(298, 1)  	IDENTIFIER 'void' 
(298, 6)  	IDENTIFIER 'acct_auto_close' 
(298, 21)  	BRACKET_O '(' 
(298, 22)  	STRUCT 'struct' 
(298, 29)  	IDENTIFIER 'super_block' 
(298, 41)  	MULT '*' 
(298, 42)  	IDENTIFIER 'sb' 
(298, 44)  	BRACKET_C ')' 
(299, 1)  	CURLY_BRACKET_O '{' 
(300, 5)  	IDENTIFIER 'spin_lock' 
(300, 14)  	BRACKET_O '(' 
(300, 15)  	AMPERSANT '&' 
(300, 16)  	IDENTIFIER 'acct_globals' 
(300, 28)  	DOT '.' 
(300, 29)  	IDENTIFIER 'lock' 
(300, 33)  	BRACKET_C ')' 
(300, 34)  	SEMICOLON ';' 
(301, 5)  	IF 'if' 
(301, 8)  	BRACKET_O '(' 
(301, 9)  	IDENTIFIER 'acct_globals' 
(301, 21)  	DOT '.' 
(301, 22)  	IDENTIFIER 'file' 
(301, 27)  	AND '&&' 
(302, 9)  	IDENTIFIER 'acct_globals' 
(302, 21)  	DOT '.' 
(302, 22)  	IDENTIFIER 'file' 
(302, 26)  	MINUS '-' 
(302, 27)  	GREATER '>' 
(302, 28)  	IDENTIFIER 'f_path' 
(302, 34)  	DOT '.' 
(302, 35)  	IDENTIFIER 'mnt' 
(302, 38)  	MINUS '-' 
(302, 39)  	GREATER '>' 
(302, 40)  	IDENTIFIER 'mnt_sb' 
(302, 47)  	EQ '==' 
(302, 50)  	IDENTIFIER 'sb' 
(302, 52)  	BRACKET_C ')' 
(302, 54)  	CURLY_BRACKET_O '{' 
(303, 9)  	IDENTIFIER 'acct_file_reopen' 
(303, 25)  	BRACKET_O '(' 
(303, 26)  	IDENTIFIER 'NULL' 
(303, 30)  	BRACKET_C ')' 
(303, 31)  	SEMICOLON ';' 
(304, 5)  	CURLY_BRACKET_C '}' 
(305, 5)  	IDENTIFIER 'spin_unlock' 
(305, 16)  	BRACKET_O '(' 
(305, 17)  	AMPERSANT '&' 
(305, 18)  	IDENTIFIER 'acct_globals' 
(305, 30)  	DOT '.' 
(305, 31)  	IDENTIFIER 'lock' 
(305, 35)  	BRACKET_C ')' 
(305, 36)  	SEMICOLON ';' 
(306, 1)  	CURLY_BRACKET_C '}' 
(316, 1)  	PP_DEFINE '#define' 
(316, 9)  	IDENTIFIER 'MANTSIZE' 
(316, 21)  	NUMBER '13' 
(317, 1)  	PP_DEFINE '#define' 
(317, 9)  	IDENTIFIER 'EXPSIZE' 
(317, 21)  	NUMBER '3' 
(318, 1)  	PP_DEFINE '#define' 
(318, 9)  	IDENTIFIER 'MAXFRACT' 
(318, 21)  	BRACKET_O '(' 
(318, 22)  	BRACKET_O '(' 
(318, 23)  	NUMBER '1' 
(318, 25)  	LESS '<' 
(318, 26)  	LESS '<' 
(318, 28)  	IDENTIFIER 'MANTSIZE' 
(318, 36)  	BRACKET_C ')' 
(318, 38)  	MINUS '-' 
(318, 40)  	NUMBER '1' 
(318, 41)  	BRACKET_C ')' 
(320, 1)  	IDENTIFIER 'static' 
(320, 8)  	IDENTIFIER 'comp_t' 
(320, 15)  	IDENTIFIER 'encode_comp_t' 
(320, 28)  	BRACKET_O '(' 
(320, 29)  	TYPE_UNSIGNED 'unsigned' 
(320, 38)  	TYPE_LONG 'long' 
(320, 43)  	IDENTIFIER 'value' 
(320, 48)  	BRACKET_C ')' 
(321, 1)  	CURLY_BRACKET_O '{' 
(322, 5)  	TYPE_INT 'int' 
(322, 9)  	IDENTIFIER 'exp' 
(322, 12)  	COMMA ',' 
(322, 14)  	IDENTIFIER 'rnd' 
(322, 17)  	SEMICOLON ';' 
(324, 5)  	IDENTIFIER 'exp' 
(324, 9)  	OP_ASSIGNMENT '=' 
(324, 11)  	IDENTIFIER 'rnd' 
(324, 15)  	OP_ASSIGNMENT '=' 
(324, 17)  	NUMBER '0' 
(324, 18)  	SEMICOLON ';' 
(325, 5)  	WHILE 'while' 
(325, 11)  	BRACKET_O '(' 
(325, 12)  	IDENTIFIER 'value' 
(325, 18)  	GREATER '>' 
(325, 20)  	IDENTIFIER 'MAXFRACT' 
(325, 28)  	BRACKET_C ')' 
(325, 30)  	CURLY_BRACKET_O '{' 
(326, 9)  	IDENTIFIER 'rnd' 
(326, 13)  	OP_ASSIGNMENT '=' 
(326, 15)  	IDENTIFIER 'value' 
(326, 21)  	AMPERSANT '&' 
(326, 23)  	BRACKET_O '(' 
(326, 24)  	NUMBER '1' 
(326, 26)  	LESS '<' 
(326, 27)  	LESS '<' 
(326, 29)  	BRACKET_O '(' 
(326, 30)  	IDENTIFIER 'EXPSIZE' 
(326, 38)  	MINUS '-' 
(326, 40)  	NUMBER '1' 
(326, 41)  	BRACKET_C ')' 
(326, 42)  	BRACKET_C ')' 
(326, 43)  	SEMICOLON ';' 
(327, 9)  	IDENTIFIER 'value' 
(327, 15)  	GREATER '>' 
(327, 16)  	GR_EQ '>=' 
(327, 19)  	IDENTIFIER 'EXPSIZE' 
(327, 26)  	SEMICOLON ';' 
(328, 9)  	IDENTIFIER 'exp' 
(328, 12)  	PLUS '+' 
(328, 13)  	PLUS '+' 
(328, 14)  	SEMICOLON ';' 
(329, 5)  	CURLY_BRACKET_C '}' 
(334, 5)  	IF 'if' 
(334, 8)  	BRACKET_O '(' 
(334, 9)  	IDENTIFIER 'rnd' 
(334, 13)  	AND '&&' 
(334, 16)  	BRACKET_O '(' 
(334, 17)  	PLUS '+' 
(334, 18)  	PLUS '+' 
(334, 19)  	IDENTIFIER 'value' 
(334, 25)  	GREATER '>' 
(334, 27)  	IDENTIFIER 'MAXFRACT' 
(334, 35)  	BRACKET_C ')' 
(334, 36)  	BRACKET_C ')' 
(334, 38)  	CURLY_BRACKET_O '{' 
(335, 9)  	IDENTIFIER 'value' 
(335, 15)  	GREATER '>' 
(335, 16)  	GR_EQ '>=' 
(335, 19)  	IDENTIFIER 'EXPSIZE' 
(335, 26)  	SEMICOLON ';' 
(336, 9)  	IDENTIFIER 'exp' 
(336, 12)  	PLUS '+' 
(336, 13)  	PLUS '+' 
(336, 14)  	SEMICOLON ';' 
(337, 5)  	CURLY_BRACKET_C '}' 
(342, 5)  	IDENTIFIER 'exp' 
(342, 9)  	LESS '<' 
(342, 10)  	LE_EQ '<=' 
(342, 13)  	IDENTIFIER 'MANTSIZE' 
(342, 21)  	SEMICOLON ';' 
(343, 5)  	IDENTIFIER 'exp' 
(343, 9)  	ASSIGN_PLUS '+=' 
(343, 12)  	IDENTIFIER 'value' 
(343, 17)  	SEMICOLON ';' 
(344, 5)  	IDENTIFIER 'return' 
(344, 12)  	IDENTIFIER 'exp' 
(344, 15)  	SEMICOLON ';' 
(345, 1)  	CURLY_BRACKET_C '}' 
(347, 1)  	PP_IF '#if' 
(347, 5)  	IDENTIFIER 'ACCT_VERSION' 
(347, 17)  	EQ '==' 
(347, 19)  	NUMBER '1' 
(347, 21)  	OR '||' 
(347, 24)  	IDENTIFIER 'ACCT_VERSION' 
(347, 36)  	EQ '==' 
(347, 38)  	NUMBER '2' 
(357, 1)  	PP_DEFINE '#define' 
(357, 9)  	IDENTIFIER 'MANTSIZE2' 
(357, 25)  	NUMBER '20' 
(358, 1)  	PP_DEFINE '#define' 
(358, 9)  	IDENTIFIER 'EXPSIZE2' 
(358, 25)  	NUMBER '5' 
(359, 1)  	PP_DEFINE '#define' 
(359, 9)  	IDENTIFIER 'MAXFRACT2' 
(359, 25)  	BRACKET_O '(' 
(359, 26)  	BRACKET_O '(' 
(359, 27)  	NUMBER '1' 
(359, 28)  	IDENTIFIER 'ul' 
(359, 31)  	LESS '<' 
(359, 32)  	LESS '<' 
(359, 34)  	IDENTIFIER 'MANTSIZE2' 
(359, 43)  	BRACKET_C ')' 
(359, 45)  	MINUS '-' 
(359, 47)  	NUMBER '1' 
(359, 48)  	BRACKET_C ')' 
(360, 1)  	PP_DEFINE '#define' 
(360, 9)  	IDENTIFIER 'MAXEXP2' 
(360, 25)  	BRACKET_O '(' 
(360, 26)  	BRACKET_O '(' 
(360, 27)  	NUMBER '1' 
(360, 29)  	LESS '<' 
(360, 30)  	LESS '<' 
(360, 31)  	IDENTIFIER 'EXPSIZE2' 
(360, 39)  	BRACKET_C ')' 
(360, 41)  	MINUS '-' 
(360, 43)  	NUMBER '1' 
(360, 44)  	BRACKET_C ')' 
(362, 1)  	IDENTIFIER 'static' 
(362, 8)  	IDENTIFIER 'comp2_t' 
(362, 16)  	IDENTIFIER 'encode_comp2_t' 
(362, 30)  	BRACKET_O '(' 
(362, 31)  	IDENTIFIER 'u64' 
(362, 35)  	IDENTIFIER 'value' 
(362, 40)  	BRACKET_C ')' 
(363, 1)  	CURLY_BRACKET_O '{' 
(364, 9)  	TYPE_INT 'int' 
(364, 13)  	IDENTIFIER 'exp' 
(364, 16)  	COMMA ',' 
(364, 18)  	IDENTIFIER 'rnd' 
(364, 21)  	SEMICOLON ';' 
(366, 9)  	IDENTIFIER 'exp' 
(366, 13)  	OP_ASSIGNMENT '=' 
(366, 15)  	BRACKET_O '(' 
(366, 16)  	IDENTIFIER 'value' 
(366, 22)  	GREATER '>' 
(366, 24)  	BRACKET_O '(' 
(366, 25)  	IDENTIFIER 'MAXFRACT2' 
(366, 34)  	GREATER '>' 
(366, 35)  	GREATER '>' 
(366, 36)  	NUMBER '1' 
(366, 37)  	BRACKET_C ')' 
(366, 38)  	BRACKET_C ')' 
(366, 39)  	SEMICOLON ';' 
(367, 9)  	IDENTIFIER 'rnd' 
(367, 13)  	OP_ASSIGNMENT '=' 
(367, 15)  	NUMBER '0' 
(367, 16)  	SEMICOLON ';' 
(368, 9)  	WHILE 'while' 
(368, 15)  	BRACKET_O '(' 
(368, 16)  	IDENTIFIER 'value' 
(368, 22)  	GREATER '>' 
(368, 24)  	IDENTIFIER 'MAXFRACT2' 
(368, 33)  	BRACKET_C ')' 
(368, 35)  	CURLY_BRACKET_O '{' 
(369, 17)  	IDENTIFIER 'rnd' 
(369, 21)  	OP_ASSIGNMENT '=' 
(369, 23)  	IDENTIFIER 'value' 
(369, 29)  	AMPERSANT '&' 
(369, 31)  	NUMBER '1' 
(369, 32)  	SEMICOLON ';' 
(370, 17)  	IDENTIFIER 'value' 
(370, 23)  	GREATER '>' 
(370, 24)  	GR_EQ '>=' 
(370, 27)  	NUMBER '1' 
(370, 28)  	SEMICOLON ';' 
(371, 17)  	IDENTIFIER 'exp' 
(371, 20)  	PLUS '+' 
(371, 21)  	PLUS '+' 
(371, 22)  	SEMICOLON ';' 
(372, 9)  	CURLY_BRACKET_C '}' 
(377, 9)  	IF 'if' 
(377, 12)  	BRACKET_O '(' 
(377, 13)  	IDENTIFIER 'rnd' 
(377, 17)  	AND '&&' 
(377, 20)  	BRACKET_O '(' 
(377, 21)  	PLUS '+' 
(377, 22)  	PLUS '+' 
(377, 23)  	IDENTIFIER 'value' 
(377, 29)  	GREATER '>' 
(377, 31)  	IDENTIFIER 'MAXFRACT2' 
(377, 40)  	BRACKET_C ')' 
(377, 41)  	BRACKET_C ')' 
(377, 43)  	CURLY_BRACKET_O '{' 
(378, 17)  	IDENTIFIER 'value' 
(378, 23)  	GREATER '>' 
(378, 24)  	GR_EQ '>=' 
(378, 27)  	NUMBER '1' 
(378, 28)  	SEMICOLON ';' 
(379, 17)  	IDENTIFIER 'exp' 
(379, 20)  	PLUS '+' 
(379, 21)  	PLUS '+' 
(379, 22)  	SEMICOLON ';' 
(380, 9)  	CURLY_BRACKET_C '}' 
(382, 9)  	IF 'if' 
(382, 12)  	BRACKET_O '(' 
(382, 13)  	IDENTIFIER 'exp' 
(382, 17)  	GREATER '>' 
(382, 19)  	IDENTIFIER 'MAXEXP2' 
(382, 26)  	BRACKET_C ')' 
(382, 28)  	CURLY_BRACKET_O '{' 
(384, 17)  	IDENTIFIER 'return' 
(384, 24)  	BRACKET_O '(' 
(384, 25)  	NUMBER '1' 
(384, 26)  	IDENTIFIER 'ul' 
(384, 29)  	LESS '<' 
(384, 30)  	LESS '<' 
(384, 32)  	BRACKET_O '(' 
(384, 33)  	IDENTIFIER 'MANTSIZE2' 
(384, 42)  	PLUS '+' 
(384, 43)  	IDENTIFIER 'EXPSIZE2' 
(384, 51)  	MINUS '-' 
(384, 52)  	NUMBER '1' 
(384, 53)  	BRACKET_C ')' 
(384, 54)  	BRACKET_C ')' 
(384, 56)  	MINUS '-' 
(384, 58)  	NUMBER '1' 
(384, 59)  	SEMICOLON ';' 
(385, 9)  	CURLY_BRACKET_C '}' 
(385, 11)  	ELSE 'else' 
(385, 16)  	CURLY_BRACKET_O '{' 
(386, 17)  	IDENTIFIER 'return' 
(386, 24)  	BRACKET_O '(' 
(386, 25)  	IDENTIFIER 'value' 
(386, 31)  	AMPERSANT '&' 
(386, 33)  	BRACKET_O '(' 
(386, 34)  	IDENTIFIER 'MAXFRACT2' 
(386, 43)  	GREATER '>' 
(386, 44)  	GREATER '>' 
(386, 45)  	NUMBER '1' 
(386, 46)  	BRACKET_C ')' 
(386, 47)  	BRACKET_C ')' 
(386, 49)  	LOGICAL_OR '|' 
(386, 51)  	BRACKET_O '(' 
(386, 52)  	IDENTIFIER 'exp' 
(386, 56)  	LESS '<' 
(386, 57)  	LESS '<' 
(386, 59)  	BRACKET_O '(' 
(386, 60)  	IDENTIFIER 'MANTSIZE2' 
(386, 69)  	MINUS '-' 
(386, 70)  	NUMBER '1' 
(386, 71)  	BRACKET_C ')' 
(386, 72)  	BRACKET_C ')' 
(386, 73)  	SEMICOLON ';' 
(387, 9)  	CURLY_BRACKET_C '}' 
(388, 1)  	CURLY_BRACKET_C '}' 
(389, 1)  	PP_ENDIF '#endif' 
(391, 1)  	PP_IF '#if' 
(391, 5)  	IDENTIFIER 'ACCT_VERSION' 
(391, 17)  	EQ '==' 
(391, 19)  	NUMBER '3' 
(395, 1)  	IDENTIFIER 'static' 
(395, 8)  	IDENTIFIER 'u32' 
(395, 12)  	IDENTIFIER 'encode_float' 
(395, 24)  	BRACKET_O '(' 
(395, 25)  	IDENTIFIER 'u64' 
(395, 29)  	IDENTIFIER 'value' 
(395, 34)  	BRACKET_C ')' 
(396, 1)  	CURLY_BRACKET_O '{' 
(397, 5)  	TYPE_UNSIGNED 'unsigned' 
(397, 14)  	IDENTIFIER 'exp' 
(397, 18)  	OP_ASSIGNMENT '=' 
(397, 20)  	NUMBER '190' 
(397, 23)  	SEMICOLON ';' 
(398, 5)  	TYPE_UNSIGNED 'unsigned' 
(398, 14)  	IDENTIFIER 'u' 
(398, 15)  	SEMICOLON ';' 
(400, 5)  	IF 'if' 
(400, 8)  	BRACKET_O '(' 
(400, 9)  	IDENTIFIER 'value' 
(400, 14)  	EQ '==' 
(400, 16)  	NUMBER '0' 
(400, 17)  	BRACKET_C ')' 
(400, 19)  	IDENTIFIER 'return' 
(400, 26)  	NUMBER '0' 
(400, 27)  	SEMICOLON ';' 
(401, 5)  	WHILE 'while' 
(401, 11)  	BRACKET_O '(' 
(401, 12)  	BRACKET_O '(' 
(401, 13)  	IDENTIFIER 's64' 
(401, 16)  	BRACKET_C ')' 
(401, 17)  	IDENTIFIER 'value' 
(401, 23)  	GREATER '>' 
(401, 25)  	NUMBER '0' 
(401, 26)  	BRACKET_C ')' 
(401, 27)  	CURLY_BRACKET_O '{' 
(402, 9)  	IDENTIFIER 'value' 
(402, 15)  	LESS '<' 
(402, 16)  	LE_EQ '<=' 
(402, 19)  	NUMBER '1' 
(402, 20)  	SEMICOLON ';' 
(403, 9)  	IDENTIFIER 'exp' 
(403, 12)  	MINUS '-' 
(403, 13)  	MINUS '-' 
(403, 14)  	SEMICOLON ';' 
(404, 5)  	CURLY_BRACKET_C '}' 
(405, 5)  	IDENTIFIER 'u' 
(405, 7)  	OP_ASSIGNMENT '=' 
(405, 9)  	BRACKET_O '(' 
(405, 10)  	IDENTIFIER 'u32' 
(405, 13)  	BRACKET_C ')' 
(405, 14)  	BRACKET_O '(' 
(405, 15)  	IDENTIFIER 'value' 
(405, 21)  	GREATER '>' 
(405, 22)  	GREATER '>' 
(405, 24)  	NUMBER '40' 
(405, 26)  	BRACKET_C ')' 
(405, 28)  	AMPERSANT '&' 
(405, 30)  	NUMBER '0' 
(405, 31)  	IDENTIFIER 'x7fffffu' 
(405, 39)  	SEMICOLON ';' 
(406, 5)  	IDENTIFIER 'return' 
(406, 12)  	IDENTIFIER 'u' 
(406, 14)  	LOGICAL_OR '|' 
(406, 16)  	BRACKET_O '(' 
(406, 17)  	IDENTIFIER 'exp' 
(406, 21)  	LESS '<' 
(406, 22)  	LESS '<' 
(406, 24)  	NUMBER '23' 
(406, 26)  	BRACKET_C ')' 
(406, 27)  	SEMICOLON ';' 
(407, 1)  	CURLY_BRACKET_C '}' 
(408, 1)  	PP_ENDIF '#endif' 
(422, 1)  	IDENTIFIER 'static' 
(422, 8)  	IDENTIFIER 'void' 
(422, 13)  	IDENTIFIER 'do_acct_process' 
(422, 28)  	BRACKET_O '(' 
(422, 29)  	STRUCT 'struct' 
(422, 36)  	IDENTIFIER 'file' 
(422, 41)  	MULT '*' 
(422, 42)  	IDENTIFIER 'file' 
(422, 46)  	BRACKET_C ')' 
(423, 1)  	CURLY_BRACKET_O '{' 
(424, 5)  	STRUCT 'struct' 
(424, 12)  	IDENTIFIER 'pacct_struct' 
(424, 25)  	MULT '*' 
(424, 26)  	IDENTIFIER 'pacct' 
(424, 32)  	OP_ASSIGNMENT '=' 
(424, 34)  	AMPERSANT '&' 
(424, 35)  	IDENTIFIER 'current' 
(424, 42)  	MINUS '-' 
(424, 43)  	GREATER '>' 
(424, 44)  	IDENTIFIER 'signal' 
(424, 50)  	MINUS '-' 
(424, 51)  	GREATER '>' 
(424, 52)  	IDENTIFIER 'pacct' 
(424, 57)  	SEMICOLON ';' 
(425, 5)  	IDENTIFIER 'acct_t' 
(425, 12)  	IDENTIFIER 'ac' 
(425, 14)  	SEMICOLON ';' 
(426, 5)  	IDENTIFIER 'mm_segment_t' 
(426, 18)  	IDENTIFIER 'fs' 
(426, 20)  	SEMICOLON ';' 
(427, 5)  	TYPE_UNSIGNED 'unsigned' 
(427, 14)  	TYPE_LONG 'long' 
(427, 19)  	IDENTIFIER 'flim' 
(427, 23)  	SEMICOLON ';' 
(428, 5)  	IDENTIFIER 'u64' 
(428, 9)  	IDENTIFIER 'elapsed' 
(428, 16)  	SEMICOLON ';' 
(429, 5)  	IDENTIFIER 'u64' 
(429, 9)  	IDENTIFIER 'run_time' 
(429, 17)  	SEMICOLON ';' 
(430, 5)  	STRUCT 'struct' 
(430, 12)  	IDENTIFIER 'timespec' 
(430, 21)  	IDENTIFIER 'uptime' 
(430, 27)  	SEMICOLON ';' 
(431, 5)  	STRUCT 'struct' 
(431, 12)  	IDENTIFIER 'tty_struct' 
(431, 23)  	MULT '*' 
(431, 24)  	IDENTIFIER 'tty' 
(431, 27)  	SEMICOLON ';' 
(437, 5)  	IF 'if' 
(437, 8)  	BRACKET_O '(' 
(437, 9)  	NOT '!' 
(437, 10)  	IDENTIFIER 'check_free_space' 
(437, 26)  	BRACKET_O '(' 
(437, 27)  	IDENTIFIER 'file' 
(437, 31)  	BRACKET_C ')' 
(437, 32)  	BRACKET_C ')' 
(438, 9)  	IDENTIFIER 'return' 
(438, 15)  	SEMICOLON ';' 
(444, 5)  	IDENTIFIER 'memset' 
(444, 11)  	BRACKET_O '(' 
(444, 12)  	BRACKET_O '(' 
(444, 13)  	IDENTIFIER 'caddr_t' 
(444, 20)  	BRACKET_C ')' 
(444, 21)  	AMPERSANT '&' 
(444, 22)  	IDENTIFIER 'ac' 
(444, 24)  	COMMA ',' 
(444, 26)  	NUMBER '0' 
(444, 27)  	COMMA ',' 
(444, 29)  	IDENTIFIER 'sizeof' 
(444, 35)  	BRACKET_O '(' 
(444, 36)  	IDENTIFIER 'acct_t' 
(444, 42)  	BRACKET_C ')' 
(444, 43)  	BRACKET_C ')' 
(444, 44)  	SEMICOLON ';' 
(446, 5)  	IDENTIFIER 'ac' 
(446, 7)  	DOT '.' 
(446, 8)  	IDENTIFIER 'ac_version' 
(446, 19)  	OP_ASSIGNMENT '=' 
(446, 21)  	IDENTIFIER 'ACCT_VERSION' 
(446, 34)  	LOGICAL_OR '|' 
(446, 36)  	IDENTIFIER 'ACCT_BYTEORDER' 
(446, 50)  	SEMICOLON ';' 
(447, 5)  	IDENTIFIER 'strlcpy' 
(447, 12)  	BRACKET_O '(' 
(447, 13)  	IDENTIFIER 'ac' 
(447, 15)  	DOT '.' 
(447, 16)  	IDENTIFIER 'ac_comm' 
(447, 23)  	COMMA ',' 
(447, 25)  	IDENTIFIER 'current' 
(447, 32)  	MINUS '-' 
(447, 33)  	GREATER '>' 
(447, 34)  	IDENTIFIER 'comm' 
(447, 38)  	COMMA ',' 
(447, 40)  	IDENTIFIER 'sizeof' 
(447, 46)  	BRACKET_O '(' 
(447, 47)  	IDENTIFIER 'ac' 
(447, 49)  	DOT '.' 
(447, 50)  	IDENTIFIER 'ac_comm' 
(447, 57)  	BRACKET_C ')' 
(447, 58)  	BRACKET_C ')' 
(447, 59)  	SEMICOLON ';' 
(450, 5)  	IDENTIFIER 'do_posix_clock_monotonic_gettime' 
(450, 37)  	BRACKET_O '(' 
(450, 38)  	AMPERSANT '&' 
(450, 39)  	IDENTIFIER 'uptime' 
(450, 45)  	BRACKET_C ')' 
(450, 46)  	SEMICOLON ';' 
(451, 5)  	IDENTIFIER 'run_time' 
(451, 14)  	OP_ASSIGNMENT '=' 
(451, 16)  	BRACKET_O '(' 
(451, 17)  	IDENTIFIER 'u64' 
(451, 20)  	BRACKET_C ')' 
(451, 21)  	IDENTIFIER 'uptime' 
(451, 27)  	DOT '.' 
(451, 28)  	IDENTIFIER 'tv_sec' 
(451, 34)  	MULT '*' 
(451, 35)  	IDENTIFIER 'NSEC_PER_SEC' 
(451, 48)  	PLUS '+' 
(451, 50)  	IDENTIFIER 'uptime' 
(451, 56)  	DOT '.' 
(451, 57)  	IDENTIFIER 'tv_nsec' 
(451, 64)  	SEMICOLON ';' 
(452, 5)  	IDENTIFIER 'run_time' 
(452, 14)  	ASSIGN_MINUS '-=' 
(452, 17)  	BRACKET_O '(' 
(452, 18)  	IDENTIFIER 'u64' 
(452, 21)  	BRACKET_C ')' 
(452, 22)  	IDENTIFIER 'current' 
(452, 29)  	MINUS '-' 
(452, 30)  	GREATER '>' 
(452, 31)  	IDENTIFIER 'group_leader' 
(452, 43)  	MINUS '-' 
(452, 44)  	GREATER '>' 
(452, 45)  	IDENTIFIER 'start_time' 
(452, 55)  	DOT '.' 
(452, 56)  	IDENTIFIER 'tv_sec' 
(452, 63)  	MULT '*' 
(452, 65)  	IDENTIFIER 'NSEC_PER_SEC' 
(453, 16)  	PLUS '+' 
(453, 18)  	IDENTIFIER 'current' 
(453, 25)  	MINUS '-' 
(453, 26)  	GREATER '>' 
(453, 27)  	IDENTIFIER 'group_leader' 
(453, 39)  	MINUS '-' 
(453, 40)  	GREATER '>' 
(453, 41)  	IDENTIFIER 'start_time' 
(453, 51)  	DOT '.' 
(453, 52)  	IDENTIFIER 'tv_nsec' 
(453, 59)  	SEMICOLON ';' 
(455, 5)  	IDENTIFIER 'elapsed' 
(455, 13)  	OP_ASSIGNMENT '=' 
(455, 15)  	IDENTIFIER 'nsec_to_AHZ' 
(455, 26)  	BRACKET_O '(' 
(455, 27)  	IDENTIFIER 'run_time' 
(455, 35)  	BRACKET_C ')' 
(455, 36)  	SEMICOLON ';' 
(456, 1)  	PP_IF '#if' 
(456, 5)  	IDENTIFIER 'ACCT_VERSION' 
(456, 17)  	EQ '==' 
(456, 19)  	NUMBER '3' 
(457, 5)  	IDENTIFIER 'ac' 
(457, 7)  	DOT '.' 
(457, 8)  	IDENTIFIER 'ac_etime' 
(457, 17)  	OP_ASSIGNMENT '=' 
(457, 19)  	IDENTIFIER 'encode_float' 
(457, 31)  	BRACKET_O '(' 
(457, 32)  	IDENTIFIER 'elapsed' 
(457, 39)  	BRACKET_C ')' 
(457, 40)  	SEMICOLON ';' 
(458, 1)  	PP_ELSE '#else' 
(459, 5)  	IDENTIFIER 'ac' 
(459, 7)  	DOT '.' 
(459, 8)  	IDENTIFIER 'ac_etime' 
(459, 17)  	OP_ASSIGNMENT '=' 
(459, 19)  	IDENTIFIER 'encode_comp_t' 
(459, 32)  	BRACKET_O '(' 
(459, 33)  	IDENTIFIER 'elapsed' 
(459, 41)  	LESS '<' 
(459, 43)  	BRACKET_O '(' 
(459, 44)  	TYPE_UNSIGNED 'unsigned' 
(459, 53)  	TYPE_LONG 'long' 
(459, 57)  	BRACKET_C ')' 
(459, 59)  	MINUS '-' 
(459, 60)  	NUMBER '1' 
(459, 61)  	IDENTIFIER 'l' 
(459, 63)  	QUESTION_MARK '?' 
(460, 28)  	BRACKET_O '(' 
(460, 29)  	TYPE_UNSIGNED 'unsigned' 
(460, 38)  	TYPE_LONG 'long' 
(460, 42)  	BRACKET_C ')' 
(460, 44)  	IDENTIFIER 'elapsed' 
(460, 52)  	COLON ':' 
(460, 54)  	BRACKET_O '(' 
(460, 55)  	TYPE_UNSIGNED 'unsigned' 
(460, 64)  	TYPE_LONG 'long' 
(460, 68)  	BRACKET_C ')' 
(460, 70)  	MINUS '-' 
(460, 71)  	NUMBER '1' 
(460, 72)  	IDENTIFIER 'l' 
(460, 73)  	BRACKET_C ')' 
(460, 74)  	SEMICOLON ';' 
(461, 1)  	PP_ENDIF '#endif' 
(462, 1)  	PP_IF '#if' 
(462, 5)  	IDENTIFIER 'ACCT_VERSION' 
(462, 17)  	EQ '==' 
(462, 19)  	NUMBER '1' 
(462, 21)  	OR '||' 
(462, 24)  	IDENTIFIER 'ACCT_VERSION' 
(462, 36)  	EQ '==' 
(462, 38)  	NUMBER '2' 
(463, 5)  	CURLY_BRACKET_O '{' 
(465, 9)  	IDENTIFIER 'comp2_t' 
(465, 17)  	IDENTIFIER 'etime' 
(465, 23)  	OP_ASSIGNMENT '=' 
(465, 25)  	IDENTIFIER 'encode_comp2_t' 
(465, 39)  	BRACKET_O '(' 
(465, 40)  	IDENTIFIER 'elapsed' 
(465, 47)  	BRACKET_C ')' 
(465, 48)  	SEMICOLON ';' 
(466, 9)  	IDENTIFIER 'ac' 
(466, 11)  	DOT '.' 
(466, 12)  	IDENTIFIER 'ac_etime_hi' 
(466, 24)  	OP_ASSIGNMENT '=' 
(466, 26)  	IDENTIFIER 'etime' 
(466, 32)  	GREATER '>' 
(466, 33)  	GREATER '>' 
(466, 35)  	NUMBER '16' 
(466, 37)  	SEMICOLON ';' 
(467, 9)  	IDENTIFIER 'ac' 
(467, 11)  	DOT '.' 
(467, 12)  	IDENTIFIER 'ac_etime_lo' 
(467, 24)  	OP_ASSIGNMENT '=' 
(467, 26)  	BRACKET_O '(' 
(467, 27)  	IDENTIFIER 'u16' 
(467, 30)  	BRACKET_C ')' 
(467, 32)  	IDENTIFIER 'etime' 
(467, 37)  	SEMICOLON ';' 
(468, 5)  	CURLY_BRACKET_C '}' 
(469, 1)  	PP_ENDIF '#endif' 
(470, 5)  	IDENTIFIER 'do_div' 
(470, 11)  	BRACKET_O '(' 
(470, 12)  	IDENTIFIER 'elapsed' 
(470, 19)  	COMMA ',' 
(470, 21)  	IDENTIFIER 'AHZ' 
(470, 24)  	BRACKET_C ')' 
(470, 25)  	SEMICOLON ';' 
(471, 5)  	IDENTIFIER 'ac' 
(471, 7)  	DOT '.' 
(471, 8)  	IDENTIFIER 'ac_btime' 
(471, 17)  	OP_ASSIGNMENT '=' 
(471, 19)  	IDENTIFIER 'xtime' 
(471, 24)  	DOT '.' 
(471, 25)  	IDENTIFIER 'tv_sec' 
(471, 32)  	MINUS '-' 
(471, 34)  	IDENTIFIER 'elapsed' 
(471, 41)  	SEMICOLON ';' 
(473, 5)  	IDENTIFIER 'ac' 
(473, 7)  	DOT '.' 
(473, 8)  	IDENTIFIER 'ac_uid' 
(473, 15)  	OP_ASSIGNMENT '=' 
(473, 17)  	IDENTIFIER 'current' 
(473, 24)  	MINUS '-' 
(473, 25)  	GREATER '>' 
(473, 26)  	IDENTIFIER 'uid' 
(473, 29)  	SEMICOLON ';' 
(474, 5)  	IDENTIFIER 'ac' 
(474, 7)  	DOT '.' 
(474, 8)  	IDENTIFIER 'ac_gid' 
(474, 15)  	OP_ASSIGNMENT '=' 
(474, 17)  	IDENTIFIER 'current' 
(474, 24)  	MINUS '-' 
(474, 25)  	GREATER '>' 
(474, 26)  	IDENTIFIER 'gid' 
(474, 29)  	SEMICOLON ';' 
(475, 1)  	PP_IF '#if' 
(475, 5)  	IDENTIFIER 'ACCT_VERSION' 
(475, 17)  	EQ '==' 
(475, 19)  	NUMBER '2' 
(476, 5)  	IDENTIFIER 'ac' 
(476, 7)  	DOT '.' 
(476, 8)  	IDENTIFIER 'ac_ahz' 
(476, 15)  	OP_ASSIGNMENT '=' 
(476, 17)  	IDENTIFIER 'AHZ' 
(476, 20)  	SEMICOLON ';' 
(477, 1)  	PP_ENDIF '#endif' 
(478, 1)  	PP_IF '#if' 
(478, 5)  	IDENTIFIER 'ACCT_VERSION' 
(478, 17)  	EQ '==' 
(478, 19)  	NUMBER '1' 
(478, 21)  	OR '||' 
(478, 24)  	IDENTIFIER 'ACCT_VERSION' 
(478, 36)  	EQ '==' 
(478, 38)  	NUMBER '2' 
(480, 5)  	IDENTIFIER 'ac' 
(480, 7)  	DOT '.' 
(480, 8)  	IDENTIFIER 'ac_uid16' 
(480, 17)  	OP_ASSIGNMENT '=' 
(480, 19)  	IDENTIFIER 'current' 
(480, 26)  	MINUS '-' 
(480, 27)  	GREATER '>' 
(480, 28)  	IDENTIFIER 'uid' 
(480, 31)  	SEMICOLON ';' 
(481, 5)  	IDENTIFIER 'ac' 
(481, 7)  	DOT '.' 
(481, 8)  	IDENTIFIER 'ac_gid16' 
(481, 17)  	OP_ASSIGNMENT '=' 
(481, 19)  	IDENTIFIER 'current' 
(481, 26)  	MINUS '-' 
(481, 27)  	GREATER '>' 
(481, 28)  	IDENTIFIER 'gid' 
(481, 31)  	SEMICOLON ';' 
(482, 1)  	PP_ENDIF '#endif' 
(483, 1)  	PP_IF '#if' 
(483, 5)  	IDENTIFIER 'ACCT_VERSION' 
(483, 17)  	EQ '==' 
(483, 19)  	NUMBER '3' 
(484, 5)  	IDENTIFIER 'ac' 
(484, 7)  	DOT '.' 
(484, 8)  	IDENTIFIER 'ac_pid' 
(484, 15)  	OP_ASSIGNMENT '=' 
(484, 17)  	IDENTIFIER 'current' 
(484, 24)  	MINUS '-' 
(484, 25)  	GREATER '>' 
(484, 26)  	IDENTIFIER 'tgid' 
(484, 30)  	SEMICOLON ';' 
(485, 5)  	IDENTIFIER 'ac' 
(485, 7)  	DOT '.' 
(485, 8)  	IDENTIFIER 'ac_ppid' 
(485, 16)  	OP_ASSIGNMENT '=' 
(485, 18)  	IDENTIFIER 'current' 
(485, 25)  	MINUS '-' 
(485, 26)  	GREATER '>' 
(485, 27)  	IDENTIFIER 'parent' 
(485, 33)  	MINUS '-' 
(485, 34)  	GREATER '>' 
(485, 35)  	IDENTIFIER 'tgid' 
(485, 39)  	SEMICOLON ';' 
(486, 1)  	PP_ENDIF '#endif' 
(488, 5)  	IDENTIFIER 'spin_lock_irq' 
(488, 18)  	BRACKET_O '(' 
(488, 19)  	AMPERSANT '&' 
(488, 20)  	IDENTIFIER 'current' 
(488, 27)  	MINUS '-' 
(488, 28)  	GREATER '>' 
(488, 29)  	IDENTIFIER 'sighand' 
(488, 36)  	MINUS '-' 
(488, 37)  	GREATER '>' 
(488, 38)  	IDENTIFIER 'siglock' 
(488, 45)  	BRACKET_C ')' 
(488, 46)  	SEMICOLON ';' 
(489, 5)  	IDENTIFIER 'tty' 
(489, 9)  	OP_ASSIGNMENT '=' 
(489, 11)  	IDENTIFIER 'current' 
(489, 18)  	MINUS '-' 
(489, 19)  	GREATER '>' 
(489, 20)  	IDENTIFIER 'signal' 
(489, 26)  	MINUS '-' 
(489, 27)  	GREATER '>' 
(489, 28)  	IDENTIFIER 'tty' 
(489, 31)  	SEMICOLON ';' 
(490, 5)  	IDENTIFIER 'ac' 
(490, 7)  	DOT '.' 
(490, 8)  	IDENTIFIER 'ac_tty' 
(490, 15)  	OP_ASSIGNMENT '=' 
(490, 17)  	IDENTIFIER 'tty' 
(490, 21)  	QUESTION_MARK '?' 
(490, 23)  	IDENTIFIER 'old_encode_dev' 
(490, 37)  	BRACKET_O '(' 
(490, 38)  	IDENTIFIER 'tty_devnum' 
(490, 48)  	BRACKET_O '(' 
(490, 49)  	IDENTIFIER 'tty' 
(490, 52)  	BRACKET_C ')' 
(490, 53)  	BRACKET_C ')' 
(490, 55)  	COLON ':' 
(490, 57)  	NUMBER '0' 
(490, 58)  	SEMICOLON ';' 
(491, 5)  	IDENTIFIER 'ac' 
(491, 7)  	DOT '.' 
(491, 8)  	IDENTIFIER 'ac_utime' 
(491, 17)  	OP_ASSIGNMENT '=' 
(491, 19)  	IDENTIFIER 'encode_comp_t' 
(491, 32)  	BRACKET_O '(' 
(491, 33)  	IDENTIFIER 'jiffies_to_AHZ' 
(491, 47)  	BRACKET_O '(' 
(491, 48)  	IDENTIFIER 'cputime_to_jiffies' 
(491, 66)  	BRACKET_O '(' 
(491, 67)  	IDENTIFIER 'pacct' 
(491, 72)  	MINUS '-' 
(491, 73)  	GREATER '>' 
(491, 74)  	IDENTIFIER 'ac_utime' 
(491, 82)  	BRACKET_C ')' 
(491, 83)  	BRACKET_C ')' 
(491, 84)  	BRACKET_C ')' 
(491, 85)  	SEMICOLON ';' 
(492, 5)  	IDENTIFIER 'ac' 
(492, 7)  	DOT '.' 
(492, 8)  	IDENTIFIER 'ac_stime' 
(492, 17)  	OP_ASSIGNMENT '=' 
(492, 19)  	IDENTIFIER 'encode_comp_t' 
(492, 32)  	BRACKET_O '(' 
(492, 33)  	IDENTIFIER 'jiffies_to_AHZ' 
(492, 47)  	BRACKET_O '(' 
(492, 48)  	IDENTIFIER 'cputime_to_jiffies' 
(492, 66)  	BRACKET_O '(' 
(492, 67)  	IDENTIFIER 'pacct' 
(492, 72)  	MINUS '-' 
(492, 73)  	GREATER '>' 
(492, 74)  	IDENTIFIER 'ac_stime' 
(492, 82)  	BRACKET_C ')' 
(492, 83)  	BRACKET_C ')' 
(492, 84)  	BRACKET_C ')' 
(492, 85)  	SEMICOLON ';' 
(493, 5)  	IDENTIFIER 'ac' 
(493, 7)  	DOT '.' 
(493, 8)  	IDENTIFIER 'ac_flag' 
(493, 16)  	OP_ASSIGNMENT '=' 
(493, 18)  	IDENTIFIER 'pacct' 
(493, 23)  	MINUS '-' 
(493, 24)  	GREATER '>' 
(493, 25)  	IDENTIFIER 'ac_flag' 
(493, 32)  	SEMICOLON ';' 
(494, 5)  	IDENTIFIER 'ac' 
(494, 7)  	DOT '.' 
(494, 8)  	IDENTIFIER 'ac_mem' 
(494, 15)  	OP_ASSIGNMENT '=' 
(494, 17)  	IDENTIFIER 'encode_comp_t' 
(494, 30)  	BRACKET_O '(' 
(494, 31)  	IDENTIFIER 'pacct' 
(494, 36)  	MINUS '-' 
(494, 37)  	GREATER '>' 
(494, 38)  	IDENTIFIER 'ac_mem' 
(494, 44)  	BRACKET_C ')' 
(494, 45)  	SEMICOLON ';' 
(495, 5)  	IDENTIFIER 'ac' 
(495, 7)  	DOT '.' 
(495, 8)  	IDENTIFIER 'ac_minflt' 
(495, 18)  	OP_ASSIGNMENT '=' 
(495, 20)  	IDENTIFIER 'encode_comp_t' 
(495, 33)  	BRACKET_O '(' 
(495, 34)  	IDENTIFIER 'pacct' 
(495, 39)  	MINUS '-' 
(495, 40)  	GREATER '>' 
(495, 41)  	IDENTIFIER 'ac_minflt' 
(495, 50)  	BRACKET_C ')' 
(495, 51)  	SEMICOLON ';' 
(496, 5)  	IDENTIFIER 'ac' 
(496, 7)  	DOT '.' 
(496, 8)  	IDENTIFIER 'ac_majflt' 
(496, 18)  	OP_ASSIGNMENT '=' 
(496, 20)  	IDENTIFIER 'encode_comp_t' 
(496, 33)  	BRACKET_O '(' 
(496, 34)  	IDENTIFIER 'pacct' 
(496, 39)  	MINUS '-' 
(496, 40)  	GREATER '>' 
(496, 41)  	IDENTIFIER 'ac_majflt' 
(496, 50)  	BRACKET_C ')' 
(496, 51)  	SEMICOLON ';' 
(497, 5)  	IDENTIFIER 'ac' 
(497, 7)  	DOT '.' 
(497, 8)  	IDENTIFIER 'ac_exitcode' 
(497, 20)  	OP_ASSIGNMENT '=' 
(497, 22)  	IDENTIFIER 'pacct' 
(497, 27)  	MINUS '-' 
(497, 28)  	GREATER '>' 
(497, 29)  	IDENTIFIER 'ac_exitcode' 
(497, 40)  	SEMICOLON ';' 
(498, 5)  	IDENTIFIER 'spin_unlock_irq' 
(498, 20)  	BRACKET_O '(' 
(498, 21)  	AMPERSANT '&' 
(498, 22)  	IDENTIFIER 'current' 
(498, 29)  	MINUS '-' 
(498, 30)  	GREATER '>' 
(498, 31)  	IDENTIFIER 'sighand' 
(498, 38)  	MINUS '-' 
(498, 39)  	GREATER '>' 
(498, 40)  	IDENTIFIER 'siglock' 
(498, 47)  	BRACKET_C ')' 
(498, 48)  	SEMICOLON ';' 
(499, 5)  	IDENTIFIER 'ac' 
(499, 7)  	DOT '.' 
(499, 8)  	IDENTIFIER 'ac_io' 
(499, 14)  	OP_ASSIGNMENT '=' 
(499, 16)  	IDENTIFIER 'encode_comp_t' 
(499, 29)  	BRACKET_O '(' 
(499, 30)  	NUMBER '0' 
(499, 55)  	BRACKET_C ')' 
(499, 56)  	SEMICOLON ';' 
(500, 5)  	IDENTIFIER 'ac' 
(500, 7)  	DOT '.' 
(500, 8)  	IDENTIFIER 'ac_rw' 
(500, 14)  	OP_ASSIGNMENT '=' 
(500, 16)  	IDENTIFIER 'encode_comp_t' 
(500, 29)  	BRACKET_O '(' 
(500, 30)  	IDENTIFIER 'ac' 
(500, 32)  	DOT '.' 
(500, 33)  	IDENTIFIER 'ac_io' 
(500, 39)  	DIV '/' 
(500, 41)  	NUMBER '1024' 
(500, 45)  	BRACKET_C ')' 
(500, 46)  	SEMICOLON ';' 
(501, 5)  	IDENTIFIER 'ac' 
(501, 7)  	DOT '.' 
(501, 8)  	IDENTIFIER 'ac_swaps' 
(501, 17)  	OP_ASSIGNMENT '=' 
(501, 19)  	IDENTIFIER 'encode_comp_t' 
(501, 32)  	BRACKET_O '(' 
(501, 33)  	NUMBER '0' 
(501, 34)  	BRACKET_C ')' 
(501, 35)  	SEMICOLON ';' 
(507, 5)  	IDENTIFIER 'fs' 
(507, 8)  	OP_ASSIGNMENT '=' 
(507, 10)  	IDENTIFIER 'get_fs' 
(507, 16)  	BRACKET_O '(' 
(507, 17)  	BRACKET_C ')' 
(507, 18)  	SEMICOLON ';' 
(508, 5)  	IDENTIFIER 'set_fs' 
(508, 11)  	BRACKET_O '(' 
(508, 12)  	IDENTIFIER 'KERNEL_DS' 
(508, 21)  	BRACKET_C ')' 
(508, 22)  	SEMICOLON ';' 
(512, 5)  	IDENTIFIER 'flim' 
(512, 10)  	OP_ASSIGNMENT '=' 
(512, 12)  	IDENTIFIER 'current' 
(512, 19)  	MINUS '-' 
(512, 20)  	GREATER '>' 
(512, 21)  	IDENTIFIER 'signal' 
(512, 27)  	MINUS '-' 
(512, 28)  	GREATER '>' 
(512, 29)  	IDENTIFIER 'rlim' 
(512, 33)  	CORNER_BRACKET_O '[' 
(512, 34)  	IDENTIFIER 'RLIMIT_FSIZE' 
(512, 46)  	CORNER_BRACKET_C ']' 
(512, 47)  	DOT '.' 
(512, 48)  	IDENTIFIER 'rlim_cur' 
(512, 56)  	SEMICOLON ';' 
(513, 5)  	IDENTIFIER 'current' 
(513, 12)  	MINUS '-' 
(513, 13)  	GREATER '>' 
(513, 14)  	IDENTIFIER 'signal' 
(513, 20)  	MINUS '-' 
(513, 21)  	GREATER '>' 
(513, 22)  	IDENTIFIER 'rlim' 
(513, 26)  	CORNER_BRACKET_O '[' 
(513, 27)  	IDENTIFIER 'RLIMIT_FSIZE' 
(513, 39)  	CORNER_BRACKET_C ']' 
(513, 40)  	DOT '.' 
(513, 41)  	IDENTIFIER 'rlim_cur' 
(513, 50)  	OP_ASSIGNMENT '=' 
(513, 52)  	IDENTIFIER 'RLIM_INFINITY' 
(513, 65)  	SEMICOLON ';' 
(514, 5)  	IDENTIFIER 'file' 
(514, 9)  	MINUS '-' 
(514, 10)  	GREATER '>' 
(514, 11)  	IDENTIFIER 'f_op' 
(514, 15)  	MINUS '-' 
(514, 16)  	GREATER '>' 
(514, 17)  	IDENTIFIER 'write' 
(514, 22)  	BRACKET_O '(' 
(514, 23)  	IDENTIFIER 'file' 
(514, 27)  	COMMA ',' 
(514, 29)  	BRACKET_O '(' 
(514, 30)  	TYPE_CHAR 'char' 
(514, 35)  	MULT '*' 
(514, 36)  	BRACKET_C ')' 
(514, 37)  	AMPERSANT '&' 
(514, 38)  	IDENTIFIER 'ac' 
(514, 40)  	COMMA ',' 
(515, 20)  	IDENTIFIER 'sizeof' 
(515, 26)  	BRACKET_O '(' 
(515, 27)  	IDENTIFIER 'acct_t' 
(515, 33)  	BRACKET_C ')' 
(515, 34)  	COMMA ',' 
(515, 36)  	AMPERSANT '&' 
(515, 37)  	IDENTIFIER 'file' 
(515, 41)  	MINUS '-' 
(515, 42)  	GREATER '>' 
(515, 43)  	IDENTIFIER 'f_pos' 
(515, 48)  	BRACKET_C ')' 
(515, 49)  	SEMICOLON ';' 
(516, 5)  	IDENTIFIER 'current' 
(516, 12)  	MINUS '-' 
(516, 13)  	GREATER '>' 
(516, 14)  	IDENTIFIER 'signal' 
(516, 20)  	MINUS '-' 
(516, 21)  	GREATER '>' 
(516, 22)  	IDENTIFIER 'rlim' 
(516, 26)  	CORNER_BRACKET_O '[' 
(516, 27)  	IDENTIFIER 'RLIMIT_FSIZE' 
(516, 39)  	CORNER_BRACKET_C ']' 
(516, 40)  	DOT '.' 
(516, 41)  	IDENTIFIER 'rlim_cur' 
(516, 50)  	OP_ASSIGNMENT '=' 
(516, 52)  	IDENTIFIER 'flim' 
(516, 56)  	SEMICOLON ';' 
(517, 5)  	IDENTIFIER 'set_fs' 
(517, 11)  	BRACKET_O '(' 
(517, 12)  	IDENTIFIER 'fs' 
(517, 14)  	BRACKET_C ')' 
(517, 15)  	SEMICOLON ';' 
(518, 1)  	CURLY_BRACKET_C '}' 
(524, 1)  	IDENTIFIER 'void' 
(524, 6)  	IDENTIFIER 'acct_init_pacct' 
(524, 21)  	BRACKET_O '(' 
(524, 22)  	STRUCT 'struct' 
(524, 29)  	IDENTIFIER 'pacct_struct' 
(524, 42)  	MULT '*' 
(524, 43)  	IDENTIFIER 'pacct' 
(524, 48)  	BRACKET_C ')' 
(525, 1)  	CURLY_BRACKET_O '{' 
(526, 5)  	IDENTIFIER 'memset' 
(526, 11)  	BRACKET_O '(' 
(526, 12)  	IDENTIFIER 'pacct' 
(526, 17)  	COMMA ',' 
(526, 19)  	NUMBER '0' 
(526, 20)  	COMMA ',' 
(526, 22)  	IDENTIFIER 'sizeof' 
(526, 28)  	BRACKET_O '(' 
(526, 29)  	STRUCT 'struct' 
(526, 36)  	IDENTIFIER 'pacct_struct' 
(526, 48)  	BRACKET_C ')' 
(526, 49)  	BRACKET_C ')' 
(526, 50)  	SEMICOLON ';' 
(527, 5)  	IDENTIFIER 'pacct' 
(527, 10)  	MINUS '-' 
(527, 11)  	GREATER '>' 
(527, 12)  	IDENTIFIER 'ac_utime' 
(527, 21)  	OP_ASSIGNMENT '=' 
(527, 23)  	IDENTIFIER 'pacct' 
(527, 28)  	MINUS '-' 
(527, 29)  	GREATER '>' 
(527, 30)  	IDENTIFIER 'ac_stime' 
(527, 39)  	OP_ASSIGNMENT '=' 
(527, 41)  	IDENTIFIER 'cputime_zero' 
(527, 53)  	SEMICOLON ';' 
(528, 1)  	CURLY_BRACKET_C '}' 
(535, 1)  	IDENTIFIER 'void' 
(535, 6)  	IDENTIFIER 'acct_collect' 
(535, 18)  	BRACKET_O '(' 
(535, 19)  	TYPE_LONG 'long' 
(535, 24)  	IDENTIFIER 'exitcode' 
(535, 32)  	COMMA ',' 
(535, 34)  	TYPE_INT 'int' 
(535, 38)  	IDENTIFIER 'group_dead' 
(535, 48)  	BRACKET_C ')' 
(536, 1)  	CURLY_BRACKET_O '{' 
(537, 5)  	STRUCT 'struct' 
(537, 12)  	IDENTIFIER 'pacct_struct' 
(537, 25)  	MULT '*' 
(537, 26)  	IDENTIFIER 'pacct' 
(537, 32)  	OP_ASSIGNMENT '=' 
(537, 34)  	AMPERSANT '&' 
(537, 35)  	IDENTIFIER 'current' 
(537, 42)  	MINUS '-' 
(537, 43)  	GREATER '>' 
(537, 44)  	IDENTIFIER 'signal' 
(537, 50)  	MINUS '-' 
(537, 51)  	GREATER '>' 
(537, 52)  	IDENTIFIER 'pacct' 
(537, 57)  	SEMICOLON ';' 
(538, 5)  	TYPE_UNSIGNED 'unsigned' 
(538, 14)  	TYPE_LONG 'long' 
(538, 19)  	IDENTIFIER 'vsize' 
(538, 25)  	OP_ASSIGNMENT '=' 
(538, 27)  	NUMBER '0' 
(538, 28)  	SEMICOLON ';' 
(540, 5)  	IF 'if' 
(540, 8)  	BRACKET_O '(' 
(540, 9)  	IDENTIFIER 'group_dead' 
(540, 20)  	AND '&&' 
(540, 23)  	IDENTIFIER 'current' 
(540, 30)  	MINUS '-' 
(540, 31)  	GREATER '>' 
(540, 32)  	IDENTIFIER 'mm' 
(540, 34)  	BRACKET_C ')' 
(540, 36)  	CURLY_BRACKET_O '{' 
(541, 9)  	STRUCT 'struct' 
(541, 16)  	IDENTIFIER 'vm_area_struct' 
(541, 31)  	MULT '*' 
(541, 32)  	IDENTIFIER 'vma' 
(541, 35)  	SEMICOLON ';' 
(542, 9)  	IDENTIFIER 'down_read' 
(542, 18)  	BRACKET_O '(' 
(542, 19)  	AMPERSANT '&' 
(542, 20)  	IDENTIFIER 'current' 
(542, 27)  	MINUS '-' 
(542, 28)  	GREATER '>' 
(542, 29)  	IDENTIFIER 'mm' 
(542, 31)  	MINUS '-' 
(542, 32)  	GREATER '>' 
(542, 33)  	IDENTIFIER 'mmap_sem' 
(542, 41)  	BRACKET_C ')' 
(542, 42)  	SEMICOLON ';' 
(543, 9)  	IDENTIFIER 'vma' 
(543, 13)  	OP_ASSIGNMENT '=' 
(543, 15)  	IDENTIFIER 'current' 
(543, 22)  	MINUS '-' 
(543, 23)  	GREATER '>' 
(543, 24)  	IDENTIFIER 'mm' 
(543, 26)  	MINUS '-' 
(543, 27)  	GREATER '>' 
(543, 28)  	IDENTIFIER 'mmap' 
(543, 32)  	SEMICOLON ';' 
(544, 9)  	WHILE 'while' 
(544, 15)  	BRACKET_O '(' 
(544, 16)  	IDENTIFIER 'vma' 
(544, 19)  	BRACKET_C ')' 
(544, 21)  	CURLY_BRACKET_O '{' 
(545, 13)  	IDENTIFIER 'vsize' 
(545, 19)  	ASSIGN_PLUS '+=' 
(545, 22)  	IDENTIFIER 'vma' 
(545, 25)  	MINUS '-' 
(545, 26)  	GREATER '>' 
(545, 27)  	IDENTIFIER 'vm_end' 
(545, 34)  	MINUS '-' 
(545, 36)  	IDENTIFIER 'vma' 
(545, 39)  	MINUS '-' 
(545, 40)  	GREATER '>' 
(545, 41)  	IDENTIFIER 'vm_start' 
(545, 49)  	SEMICOLON ';' 
(546, 13)  	IDENTIFIER 'vma' 
(546, 17)  	OP_ASSIGNMENT '=' 
(546, 19)  	IDENTIFIER 'vma' 
(546, 22)  	MINUS '-' 
(546, 23)  	GREATER '>' 
(546, 24)  	IDENTIFIER 'vm_next' 
(546, 31)  	SEMICOLON ';' 
(547, 9)  	CURLY_BRACKET_C '}' 
(548, 9)  	IDENTIFIER 'up_read' 
(548, 16)  	BRACKET_O '(' 
(548, 17)  	AMPERSANT '&' 
(548, 18)  	IDENTIFIER 'current' 
(548, 25)  	MINUS '-' 
(548, 26)  	GREATER '>' 
(548, 27)  	IDENTIFIER 'mm' 
(548, 29)  	MINUS '-' 
(548, 30)  	GREATER '>' 
(548, 31)  	IDENTIFIER 'mmap_sem' 
(548, 39)  	BRACKET_C ')' 
(548, 40)  	SEMICOLON ';' 
(549, 5)  	CURLY_BRACKET_C '}' 
(551, 5)  	IDENTIFIER 'spin_lock_irq' 
(551, 18)  	BRACKET_O '(' 
(551, 19)  	AMPERSANT '&' 
(551, 20)  	IDENTIFIER 'current' 
(551, 27)  	MINUS '-' 
(551, 28)  	GREATER '>' 
(551, 29)  	IDENTIFIER 'sighand' 
(551, 36)  	MINUS '-' 
(551, 37)  	GREATER '>' 
(551, 38)  	IDENTIFIER 'siglock' 
(551, 45)  	BRACKET_C ')' 
(551, 46)  	SEMICOLON ';' 
(552, 5)  	IF 'if' 
(552, 8)  	BRACKET_O '(' 
(552, 9)  	IDENTIFIER 'group_dead' 
(552, 19)  	BRACKET_C ')' 
(553, 9)  	IDENTIFIER 'pacct' 
(553, 14)  	MINUS '-' 
(553, 15)  	GREATER '>' 
(553, 16)  	IDENTIFIER 'ac_mem' 
(553, 23)  	OP_ASSIGNMENT '=' 
(553, 25)  	IDENTIFIER 'vsize' 
(553, 31)  	DIV '/' 
(553, 33)  	NUMBER '1024' 
(553, 37)  	SEMICOLON ';' 
(554, 5)  	IF 'if' 
(554, 8)  	BRACKET_O '(' 
(554, 9)  	IDENTIFIER 'thread_group_leader' 
(554, 28)  	BRACKET_O '(' 
(554, 29)  	IDENTIFIER 'current' 
(554, 36)  	BRACKET_C ')' 
(554, 37)  	BRACKET_C ')' 
(554, 39)  	CURLY_BRACKET_O '{' 
(555, 9)  	IDENTIFIER 'pacct' 
(555, 14)  	MINUS '-' 
(555, 15)  	GREATER '>' 
(555, 16)  	IDENTIFIER 'ac_exitcode' 
(555, 28)  	OP_ASSIGNMENT '=' 
(555, 30)  	IDENTIFIER 'exitcode' 
(555, 38)  	SEMICOLON ';' 
(556, 9)  	IF 'if' 
(556, 12)  	BRACKET_O '(' 
(556, 13)  	IDENTIFIER 'current' 
(556, 20)  	MINUS '-' 
(556, 21)  	GREATER '>' 
(556, 22)  	IDENTIFIER 'flags' 
(556, 28)  	AMPERSANT '&' 
(556, 30)  	IDENTIFIER 'PF_FORKNOEXEC' 
(556, 43)  	BRACKET_C ')' 
(557, 13)  	IDENTIFIER 'pacct' 
(557, 18)  	MINUS '-' 
(557, 19)  	GREATER '>' 
(557, 20)  	IDENTIFIER 'ac_flag' 
(557, 28)  	LOGICAL_OR '|' 
(557, 29)  	OP_ASSIGNMENT '=' 
(557, 31)  	IDENTIFIER 'AFORK' 
(557, 36)  	SEMICOLON ';' 
(558, 5)  	CURLY_BRACKET_C '}' 
(559, 5)  	IF 'if' 
(559, 8)  	BRACKET_O '(' 
(559, 9)  	IDENTIFIER 'current' 
(559, 16)  	MINUS '-' 
(559, 17)  	GREATER '>' 
(559, 18)  	IDENTIFIER 'flags' 
(559, 24)  	AMPERSANT '&' 
(559, 26)  	IDENTIFIER 'PF_SUPERPRIV' 
(559, 38)  	BRACKET_C ')' 
(560, 9)  	IDENTIFIER 'pacct' 
(560, 14)  	MINUS '-' 
(560, 15)  	GREATER '>' 
(560, 16)  	IDENTIFIER 'ac_flag' 
(560, 24)  	LOGICAL_OR '|' 
(560, 25)  	OP_ASSIGNMENT '=' 
(560, 27)  	IDENTIFIER 'ASU' 
(560, 30)  	SEMICOLON ';' 
(561, 5)  	IF 'if' 
(561, 8)  	BRACKET_O '(' 
(561, 9)  	IDENTIFIER 'current' 
(561, 16)  	MINUS '-' 
(561, 17)  	GREATER '>' 
(561, 18)  	IDENTIFIER 'flags' 
(561, 24)  	AMPERSANT '&' 
(561, 26)  	IDENTIFIER 'PF_DUMPCORE' 
(561, 37)  	BRACKET_C ')' 
(562, 9)  	IDENTIFIER 'pacct' 
(562, 14)  	MINUS '-' 
(562, 15)  	GREATER '>' 
(562, 16)  	IDENTIFIER 'ac_flag' 
(562, 24)  	LOGICAL_OR '|' 
(562, 25)  	OP_ASSIGNMENT '=' 
(562, 27)  	IDENTIFIER 'ACORE' 
(562, 32)  	SEMICOLON ';' 
(563, 5)  	IF 'if' 
(563, 8)  	BRACKET_O '(' 
(563, 9)  	IDENTIFIER 'current' 
(563, 16)  	MINUS '-' 
(563, 17)  	GREATER '>' 
(563, 18)  	IDENTIFIER 'flags' 
(563, 24)  	AMPERSANT '&' 
(563, 26)  	IDENTIFIER 'PF_SIGNALED' 
(563, 37)  	BRACKET_C ')' 
(564, 9)  	IDENTIFIER 'pacct' 
(564, 14)  	MINUS '-' 
(564, 15)  	GREATER '>' 
(564, 16)  	IDENTIFIER 'ac_flag' 
(564, 24)  	LOGICAL_OR '|' 
(564, 25)  	OP_ASSIGNMENT '=' 
(564, 27)  	IDENTIFIER 'AXSIG' 
(564, 32)  	SEMICOLON ';' 
(565, 5)  	IDENTIFIER 'pacct' 
(565, 10)  	MINUS '-' 
(565, 11)  	GREATER '>' 
(565, 12)  	IDENTIFIER 'ac_utime' 
(565, 21)  	OP_ASSIGNMENT '=' 
(565, 23)  	IDENTIFIER 'cputime_add' 
(565, 34)  	BRACKET_O '(' 
(565, 35)  	IDENTIFIER 'pacct' 
(565, 40)  	MINUS '-' 
(565, 41)  	GREATER '>' 
(565, 42)  	IDENTIFIER 'ac_utime' 
(565, 50)  	COMMA ',' 
(565, 52)  	IDENTIFIER 'current' 
(565, 59)  	MINUS '-' 
(565, 60)  	GREATER '>' 
(565, 61)  	IDENTIFIER 'utime' 
(565, 66)  	BRACKET_C ')' 
(565, 67)  	SEMICOLON ';' 
(566, 5)  	IDENTIFIER 'pacct' 
(566, 10)  	MINUS '-' 
(566, 11)  	GREATER '>' 
(566, 12)  	IDENTIFIER 'ac_stime' 
(566, 21)  	OP_ASSIGNMENT '=' 
(566, 23)  	IDENTIFIER 'cputime_add' 
(566, 34)  	BRACKET_O '(' 
(566, 35)  	IDENTIFIER 'pacct' 
(566, 40)  	MINUS '-' 
(566, 41)  	GREATER '>' 
(566, 42)  	IDENTIFIER 'ac_stime' 
(566, 50)  	COMMA ',' 
(566, 52)  	IDENTIFIER 'current' 
(566, 59)  	MINUS '-' 
(566, 60)  	GREATER '>' 
(566, 61)  	IDENTIFIER 'stime' 
(566, 66)  	BRACKET_C ')' 
(566, 67)  	SEMICOLON ';' 
(567, 5)  	IDENTIFIER 'pacct' 
(567, 10)  	MINUS '-' 
(567, 11)  	GREATER '>' 
(567, 12)  	IDENTIFIER 'ac_minflt' 
(567, 22)  	ASSIGN_PLUS '+=' 
(567, 25)  	IDENTIFIER 'current' 
(567, 32)  	MINUS '-' 
(567, 33)  	GREATER '>' 
(567, 34)  	IDENTIFIER 'min_flt' 
(567, 41)  	SEMICOLON ';' 
(568, 5)  	IDENTIFIER 'pacct' 
(568, 10)  	MINUS '-' 
(568, 11)  	GREATER '>' 
(568, 12)  	IDENTIFIER 'ac_majflt' 
(568, 22)  	ASSIGN_PLUS '+=' 
(568, 25)  	IDENTIFIER 'current' 
(568, 32)  	MINUS '-' 
(568, 33)  	GREATER '>' 
(568, 34)  	IDENTIFIER 'maj_flt' 
(568, 41)  	SEMICOLON ';' 
(569, 5)  	IDENTIFIER 'spin_unlock_irq' 
(569, 20)  	BRACKET_O '(' 
(569, 21)  	AMPERSANT '&' 
(569, 22)  	IDENTIFIER 'current' 
(569, 29)  	MINUS '-' 
(569, 30)  	GREATER '>' 
(569, 31)  	IDENTIFIER 'sighand' 
(569, 38)  	MINUS '-' 
(569, 39)  	GREATER '>' 
(569, 40)  	IDENTIFIER 'siglock' 
(569, 47)  	BRACKET_C ')' 
(569, 48)  	SEMICOLON ';' 
(570, 1)  	CURLY_BRACKET_C '}' 
(578, 1)  	IDENTIFIER 'void' 
(578, 6)  	IDENTIFIER 'acct_process' 
(578, 18)  	BRACKET_O '(' 
(578, 19)  	IDENTIFIER 'void' 
(578, 23)  	BRACKET_C ')' 
(579, 1)  	CURLY_BRACKET_O '{' 
(580, 5)  	STRUCT 'struct' 
(580, 12)  	IDENTIFIER 'file' 
(580, 17)  	MULT '*' 
(580, 18)  	IDENTIFIER 'file' 
(580, 23)  	OP_ASSIGNMENT '=' 
(580, 25)  	IDENTIFIER 'NULL' 
(580, 29)  	SEMICOLON ';' 
(585, 5)  	IF 'if' 
(585, 8)  	BRACKET_O '(' 
(585, 9)  	NOT '!' 
(585, 10)  	IDENTIFIER 'acct_globals' 
(585, 22)  	DOT '.' 
(585, 23)  	IDENTIFIER 'file' 
(585, 27)  	BRACKET_C ')' 
(586, 9)  	IDENTIFIER 'return' 
(586, 15)  	SEMICOLON ';' 
(588, 5)  	IDENTIFIER 'spin_lock' 
(588, 14)  	BRACKET_O '(' 
(588, 15)  	AMPERSANT '&' 
(588, 16)  	IDENTIFIER 'acct_globals' 
(588, 28)  	DOT '.' 
(588, 29)  	IDENTIFIER 'lock' 
(588, 33)  	BRACKET_C ')' 
(588, 34)  	SEMICOLON ';' 
(589, 5)  	IDENTIFIER 'file' 
(589, 10)  	OP_ASSIGNMENT '=' 
(589, 12)  	IDENTIFIER 'acct_globals' 
(589, 24)  	DOT '.' 
(589, 25)  	IDENTIFIER 'file' 
(589, 29)  	SEMICOLON ';' 
(590, 5)  	IF 'if' 
(590, 8)  	BRACKET_O '(' 
(590, 9)  	IDENTIFIER 'unlikely' 
(590, 17)  	BRACKET_O '(' 
(590, 18)  	NOT '!' 
(590, 19)  	IDENTIFIER 'file' 
(590, 23)  	BRACKET_C ')' 
(590, 24)  	BRACKET_C ')' 
(590, 26)  	CURLY_BRACKET_O '{' 
(591, 9)  	IDENTIFIER 'spin_unlock' 
(591, 20)  	BRACKET_O '(' 
(591, 21)  	AMPERSANT '&' 
(591, 22)  	IDENTIFIER 'acct_globals' 
(591, 34)  	DOT '.' 
(591, 35)  	IDENTIFIER 'lock' 
(591, 39)  	BRACKET_C ')' 
(591, 40)  	SEMICOLON ';' 
(592, 9)  	IDENTIFIER 'return' 
(592, 15)  	SEMICOLON ';' 
(593, 5)  	CURLY_BRACKET_C '}' 
(594, 5)  	IDENTIFIER 'get_file' 
(594, 13)  	BRACKET_O '(' 
(594, 14)  	IDENTIFIER 'file' 
(594, 18)  	BRACKET_C ')' 
(594, 19)  	SEMICOLON ';' 
(595, 5)  	IDENTIFIER 'spin_unlock' 
(595, 16)  	BRACKET_O '(' 
(595, 17)  	AMPERSANT '&' 
(595, 18)  	IDENTIFIER 'acct_globals' 
(595, 30)  	DOT '.' 
(595, 31)  	IDENTIFIER 'lock' 
(595, 35)  	BRACKET_C ')' 
(595, 36)  	SEMICOLON ';' 
(597, 5)  	IDENTIFIER 'do_acct_process' 
(597, 20)  	BRACKET_O '(' 
(597, 21)  	IDENTIFIER 'file' 
(597, 25)  	BRACKET_C ')' 
(597, 26)  	SEMICOLON ';' 
(598, 5)  	IDENTIFIER 'fput' 
(598, 9)  	BRACKET_O '(' 
(598, 10)  	IDENTIFIER 'file' 
(598, 14)  	BRACKET_C ')' 
(598, 15)  	SEMICOLON ';' 
(599, 1)  	CURLY_BRACKET_C '}' 
(643, 1)  	PP_INCLUDE '#include <linux/init.h>' 
(644, 1)  	PP_INCLUDE '#include <asm/types.h>' 
(645, 1)  	PP_INCLUDE '#include <asm/atomic.h>' 
(646, 1)  	PP_INCLUDE '#include <linux/mm.h>' 
(647, 1)  	PP_INCLUDE '#include <linux/module.h>' 
(648, 1)  	PP_INCLUDE '#include <linux/err.h>' 
(649, 1)  	PP_INCLUDE '#include <linux/kthread.h>' 
(651, 1)  	PP_INCLUDE '#include <linux/audit.h>' 
(653, 1)  	PP_INCLUDE '#include <net/sock.h>' 
(654, 1)  	PP_INCLUDE '#include <net/netlink.h>' 
(655, 1)  	PP_INCLUDE '#include <linux/skbuff.h>' 
(656, 1)  	PP_INCLUDE '#include <linux/netlink.h>' 
(657, 1)  	PP_INCLUDE '#include <linux/selinux.h>' 
(658, 1)  	PP_INCLUDE '#include <linux/inotify.h>' 
(659, 1)  	PP_INCLUDE '#include <linux/freezer.h>' 
(661, 1)  	PP_INCLUDE '#include "audit.h"' 
(665, 1)  	IDENTIFIER 'static' 
(665, 8)  	TYPE_INT 'int' 
(665, 13)  	IDENTIFIER 'audit_initialized' 
(665, 30)  	SEMICOLON ';' 
(670, 1)  	TYPE_INT 'int' 
(670, 9)  	IDENTIFIER 'audit_enabled' 
(670, 22)  	SEMICOLON ';' 
(673, 1)  	IDENTIFIER 'static' 
(673, 8)  	TYPE_INT 'int' 
(673, 13)  	IDENTIFIER 'audit_default' 
(673, 26)  	SEMICOLON ';' 
(676, 1)  	IDENTIFIER 'static' 
(676, 8)  	TYPE_INT 'int' 
(676, 13)  	IDENTIFIER 'audit_failure' 
(676, 27)  	OP_ASSIGNMENT '=' 
(676, 29)  	IDENTIFIER 'AUDIT_FAIL_PRINTK' 
(676, 46)  	SEMICOLON ';' 
(680, 1)  	TYPE_INT 'int' 
(680, 9)  	IDENTIFIER 'audit_pid' 
(680, 18)  	SEMICOLON ';' 
(685, 1)  	IDENTIFIER 'static' 
(685, 8)  	TYPE_INT 'int' 
(685, 13)  	IDENTIFIER 'audit_rate_limit' 
(685, 29)  	SEMICOLON ';' 
(688, 1)  	IDENTIFIER 'static' 
(688, 8)  	TYPE_INT 'int' 
(688, 13)  	IDENTIFIER 'audit_backlog_limit' 
(688, 33)  	OP_ASSIGNMENT '=' 
(688, 35)  	NUMBER '64' 
(688, 37)  	SEMICOLON ';' 
(689, 1)  	IDENTIFIER 'static' 
(689, 8)  	TYPE_INT 'int' 
(689, 13)  	IDENTIFIER 'audit_backlog_wait_time' 
(689, 37)  	OP_ASSIGNMENT '=' 
(689, 39)  	NUMBER '60' 
(689, 42)  	MULT '*' 
(689, 44)  	IDENTIFIER 'HZ' 
(689, 46)  	SEMICOLON ';' 
(690, 1)  	IDENTIFIER 'static' 
(690, 8)  	TYPE_INT 'int' 
(690, 13)  	IDENTIFIER 'audit_backlog_wait_overflow' 
(690, 41)  	OP_ASSIGNMENT '=' 
(690, 43)  	NUMBER '0' 
(690, 44)  	SEMICOLON ';' 
(693, 1)  	IDENTIFIER 'uid_t' 
(693, 13)  	IDENTIFIER 'audit_sig_uid' 
(693, 27)  	OP_ASSIGNMENT '=' 
(693, 29)  	MINUS '-' 
(693, 30)  	NUMBER '1' 
(693, 31)  	SEMICOLON ';' 
(694, 1)  	IDENTIFIER 'pid_t' 
(694, 13)  	IDENTIFIER 'audit_sig_pid' 
(694, 27)  	OP_ASSIGNMENT '=' 
(694, 29)  	MINUS '-' 
(694, 30)  	NUMBER '1' 
(694, 31)  	SEMICOLON ';' 
(695, 1)  	IDENTIFIER 'u32' 
(695, 9)  	IDENTIFIER 'audit_sig_sid' 
(695, 23)  	OP_ASSIGNMENT '=' 
(695, 25)  	NUMBER '0' 
(695, 26)  	SEMICOLON ';' 
(704, 1)  	IDENTIFIER 'static' 
(704, 8)  	IDENTIFIER 'atomic_t' 
(704, 20)  	IDENTIFIER 'audit_lost' 
(704, 31)  	OP_ASSIGNMENT '=' 
(704, 33)  	IDENTIFIER 'ATOMIC_INIT' 
(704, 44)  	BRACKET_O '(' 
(704, 45)  	NUMBER '0' 
(704, 46)  	BRACKET_C ')' 
(704, 47)  	SEMICOLON ';' 
(707, 1)  	IDENTIFIER 'static' 
(707, 8)  	STRUCT 'struct' 
(707, 15)  	IDENTIFIER 'sock' 
(707, 20)  	MULT '*' 
(707, 21)  	IDENTIFIER 'audit_sock' 
(707, 31)  	SEMICOLON ';' 
(710, 1)  	STRUCT 'struct' 
(710, 8)  	IDENTIFIER 'inotify_handle' 
(710, 23)  	MULT '*' 
(710, 24)  	IDENTIFIER 'audit_ih' 
(710, 32)  	SEMICOLON ';' 
(713, 1)  	STRUCT 'struct' 
(713, 8)  	IDENTIFIER 'list_head' 
(713, 18)  	IDENTIFIER 'audit_inode_hash' 
(713, 34)  	CORNER_BRACKET_O '[' 
(713, 35)  	IDENTIFIER 'AUDIT_INODE_BUCKETS' 
(713, 54)  	CORNER_BRACKET_C ']' 
(713, 55)  	SEMICOLON ';' 
(718, 1)  	IDENTIFIER 'static' 
(718, 8)  	IDENTIFIER 'DEFINE_SPINLOCK' 
(718, 23)  	BRACKET_O '(' 
(718, 24)  	IDENTIFIER 'audit_freelist_lock' 
(718, 43)  	BRACKET_C ')' 
(718, 44)  	SEMICOLON ';' 
(719, 1)  	IDENTIFIER 'static' 
(719, 8)  	TYPE_INT 'int' 
(719, 16)  	IDENTIFIER 'audit_freelist_count' 
(719, 36)  	SEMICOLON ';' 
(720, 1)  	IDENTIFIER 'static' 
(720, 8)  	IDENTIFIER 'LIST_HEAD' 
(720, 17)  	BRACKET_O '(' 
(720, 18)  	IDENTIFIER 'audit_freelist' 
(720, 32)  	BRACKET_C ')' 
(720, 33)  	SEMICOLON ';' 
(722, 1)  	IDENTIFIER 'static' 
(722, 8)  	STRUCT 'struct' 
(722, 15)  	IDENTIFIER 'sk_buff_head' 
(722, 28)  	IDENTIFIER 'audit_skb_queue' 
(722, 43)  	SEMICOLON ';' 
(723, 1)  	IDENTIFIER 'static' 
(723, 8)  	STRUCT 'struct' 
(723, 15)  	IDENTIFIER 'task_struct' 
(723, 27)  	MULT '*' 
(723, 28)  	IDENTIFIER 'kauditd_task' 
(723, 40)  	SEMICOLON ';' 
(724, 1)  	IDENTIFIER 'static' 
(724, 8)  	IDENTIFIER 'DECLARE_WAIT_QUEUE_HEAD' 
(724, 31)  	BRACKET_O '(' 
(724, 32)  	IDENTIFIER 'kauditd_wait' 
(724, 44)  	BRACKET_C ')' 
(724, 45)  	SEMICOLON ';' 
(725, 1)  	IDENTIFIER 'static' 
(725, 8)  	IDENTIFIER 'DECLARE_WAIT_QUEUE_HEAD' 
(725, 31)  	BRACKET_O '(' 
(725, 32)  	IDENTIFIER 'audit_backlog_wait' 
(725, 50)  	BRACKET_C ')' 
(725, 51)  	SEMICOLON ';' 
(728, 1)  	IDENTIFIER 'static' 
(728, 8)  	IDENTIFIER 'DEFINE_MUTEX' 
(728, 20)  	BRACKET_O '(' 
(728, 21)  	IDENTIFIER 'audit_cmd_mutex' 
(728, 36)  	BRACKET_C ')' 
(728, 37)  	SEMICOLON ';' 
(733, 1)  	PP_DEFINE '#define' 
(733, 9)  	IDENTIFIER 'AUDIT_BUFSIZ' 
(733, 22)  	NUMBER '1024' 
(737, 1)  	PP_DEFINE '#define' 
(737, 9)  	IDENTIFIER 'AUDIT_MAXFREE' 
(737, 24)  	BRACKET_O '(' 
(737, 25)  	NUMBER '2' 
(737, 26)  	MULT '*' 
(737, 27)  	IDENTIFIER 'NR_CPUS' 
(737, 34)  	BRACKET_C ')' 
(744, 1)  	STRUCT 'struct' 
(744, 8)  	IDENTIFIER 'audit_buffer' 
(744, 21)  	CURLY_BRACKET_O '{' 
(745, 5)  	STRUCT 'struct' 
(745, 12)  	IDENTIFIER 'list_head' 
(745, 26)  	IDENTIFIER 'list' 
(745, 30)  	SEMICOLON ';' 
(746, 5)  	STRUCT 'struct' 
(746, 12)  	IDENTIFIER 'sk_buff' 
(746, 26)  	MULT '*' 
(746, 27)  	IDENTIFIER 'skb' 
(746, 30)  	SEMICOLON ';' 
(747, 5)  	STRUCT 'struct' 
(747, 12)  	IDENTIFIER 'audit_context' 
(747, 26)  	MULT '*' 
(747, 27)  	IDENTIFIER 'ctx' 
(747, 30)  	SEMICOLON ';' 
(748, 5)  	IDENTIFIER 'gfp_t' 
(748, 22)  	IDENTIFIER 'gfp_mask' 
(748, 30)  	SEMICOLON ';' 
(749, 1)  	CURLY_BRACKET_C '}' 
(749, 2)  	SEMICOLON ';' 
(751, 1)  	IDENTIFIER 'static' 
(751, 8)  	IDENTIFIER 'void' 
(751, 13)  	IDENTIFIER 'audit_set_pid' 
(751, 26)  	BRACKET_O '(' 
(751, 27)  	STRUCT 'struct' 
(751, 34)  	IDENTIFIER 'audit_buffer' 
(751, 47)  	MULT '*' 
(751, 48)  	IDENTIFIER 'ab' 
(751, 50)  	COMMA ',' 
(751, 52)  	IDENTIFIER 'pid_t' 
(751, 58)  	IDENTIFIER 'pid' 
(751, 61)  	BRACKET_C ')' 
(752, 1)  	CURLY_BRACKET_O '{' 
(753, 5)  	STRUCT 'struct' 
(753, 12)  	IDENTIFIER 'nlmsghdr' 
(753, 21)  	MULT '*' 
(753, 22)  	IDENTIFIER 'nlh' 
(753, 26)  	OP_ASSIGNMENT '=' 
(753, 28)  	IDENTIFIER 'nlmsg_hdr' 
(753, 37)  	BRACKET_O '(' 
(753, 38)  	IDENTIFIER 'ab' 
(753, 40)  	MINUS '-' 
(753, 41)  	GREATER '>' 
(753, 42)  	IDENTIFIER 'skb' 
(753, 45)  	BRACKET_C ')' 
(753, 46)  	SEMICOLON ';' 
(754, 5)  	IDENTIFIER 'nlh' 
(754, 8)  	MINUS '-' 
(754, 9)  	GREATER '>' 
(754, 10)  	IDENTIFIER 'nlmsg_pid' 
(754, 20)  	OP_ASSIGNMENT '=' 
(754, 22)  	IDENTIFIER 'pid' 
(754, 25)  	SEMICOLON ';' 
(755, 1)  	CURLY_BRACKET_C '}' 
(757, 1)  	IDENTIFIER 'void' 
(757, 6)  	IDENTIFIER 'audit_panic' 
(757, 17)  	BRACKET_O '(' 
(757, 18)  	CONST 'const' 
(757, 24)  	TYPE_CHAR 'char' 
(757, 29)  	MULT '*' 
(757, 30)  	IDENTIFIER 'message' 
(757, 37)  	BRACKET_C ')' 
(758, 1)  	CURLY_BRACKET_O '{' 
(759, 5)  	SWITCH 'switch' 
(759, 12)  	BRACKET_O '(' 
(759, 13)  	IDENTIFIER 'audit_failure' 
(759, 26)  	BRACKET_C ')' 
(760, 5)  	CURLY_BRACKET_O '{' 
(761, 5)  	IDENTIFIER 'case' 
(761, 10)  	IDENTIFIER 'AUDIT_FAIL_SILENT' 
(761, 27)  	COLON ':' 
(762, 9)  	BREAK 'break' 
(762, 14)  	SEMICOLON ';' 
(763, 5)  	IDENTIFIER 'case' 
(763, 10)  	IDENTIFIER 'AUDIT_FAIL_PRINTK' 
(763, 27)  	COLON ':' 
(764, 9)  	IDENTIFIER 'printk' 
(764, 15)  	BRACKET_O '(' 
(764, 16)  	IDENTIFIER 'KERN_ERR' 
(764, 25)  	STRING '"audit: %s\n"' 
(764, 38)  	COMMA ',' 
(764, 40)  	IDENTIFIER 'message' 
(764, 47)  	BRACKET_C ')' 
(764, 48)  	SEMICOLON ';' 
(765, 9)  	BREAK 'break' 
(765, 14)  	SEMICOLON ';' 
(766, 5)  	IDENTIFIER 'case' 
(766, 10)  	IDENTIFIER 'AUDIT_FAIL_PANIC' 
(766, 26)  	COLON ':' 
(767, 9)  	IDENTIFIER 'panic' 
(767, 14)  	BRACKET_O '(' 
(767, 15)  	STRING '"audit: %s\n"' 
(767, 28)  	COMMA ',' 
(767, 30)  	IDENTIFIER 'message' 
(767, 37)  	BRACKET_C ')' 
(767, 38)  	SEMICOLON ';' 
(768, 9)  	BREAK 'break' 
(768, 14)  	SEMICOLON ';' 
(769, 5)  	CURLY_BRACKET_C '}' 
(770, 1)  	CURLY_BRACKET_C '}' 
(772, 1)  	IDENTIFIER 'static' 
(772, 8)  	IDENTIFIER 'inline' 
(772, 15)  	TYPE_INT 'int' 
(772, 19)  	IDENTIFIER 'audit_rate_check' 
(772, 35)  	BRACKET_O '(' 
(772, 36)  	IDENTIFIER 'void' 
(772, 40)  	BRACKET_C ')' 
(773, 1)  	CURLY_BRACKET_O '{' 
(774, 5)  	IDENTIFIER 'static' 
(774, 12)  	TYPE_UNSIGNED 'unsigned' 
(774, 21)  	TYPE_LONG 'long' 
(774, 29)  	IDENTIFIER 'last_check' 
(774, 40)  	OP_ASSIGNMENT '=' 
(774, 42)  	NUMBER '0' 
(774, 43)  	SEMICOLON ';' 
(775, 5)  	IDENTIFIER 'static' 
(775, 12)  	TYPE_INT 'int' 
(775, 21)  	IDENTIFIER 'messages' 
(775, 32)  	OP_ASSIGNMENT '=' 
(775, 34)  	NUMBER '0' 
(775, 35)  	SEMICOLON ';' 
(776, 5)  	IDENTIFIER 'static' 
(776, 12)  	IDENTIFIER 'DEFINE_SPINLOCK' 
(776, 27)  	BRACKET_O '(' 
(776, 28)  	IDENTIFIER 'lock' 
(776, 32)  	BRACKET_C ')' 
(776, 33)  	SEMICOLON ';' 
(777, 5)  	TYPE_UNSIGNED 'unsigned' 
(777, 14)  	TYPE_LONG 'long' 
(777, 25)  	IDENTIFIER 'flags' 
(777, 30)  	SEMICOLON ';' 
(778, 5)  	TYPE_UNSIGNED 'unsigned' 
(778, 14)  	TYPE_LONG 'long' 
(778, 25)  	IDENTIFIER 'now' 
(778, 28)  	SEMICOLON ';' 
(779, 5)  	TYPE_UNSIGNED 'unsigned' 
(779, 14)  	TYPE_LONG 'long' 
(779, 25)  	IDENTIFIER 'elapsed' 
(779, 32)  	SEMICOLON ';' 
(780, 5)  	TYPE_INT 'int' 
(780, 17)  	IDENTIFIER 'retval' 
(780, 28)  	OP_ASSIGNMENT '=' 
(780, 30)  	NUMBER '0' 
(780, 31)  	SEMICOLON ';' 
(782, 5)  	IF 'if' 
(782, 8)  	BRACKET_O '(' 
(782, 9)  	NOT '!' 
(782, 10)  	IDENTIFIER 'audit_rate_limit' 
(782, 26)  	BRACKET_C ')' 
(782, 28)  	IDENTIFIER 'return' 
(782, 35)  	NUMBER '1' 
(782, 36)  	SEMICOLON ';' 
(784, 5)  	IDENTIFIER 'spin_lock_irqsave' 
(784, 22)  	BRACKET_O '(' 
(784, 23)  	AMPERSANT '&' 
(784, 24)  	IDENTIFIER 'lock' 
(784, 28)  	COMMA ',' 
(784, 30)  	IDENTIFIER 'flags' 
(784, 35)  	BRACKET_C ')' 
(784, 36)  	SEMICOLON ';' 
(785, 5)  	IF 'if' 
(785, 8)  	BRACKET_O '(' 
(785, 9)  	PLUS '+' 
(785, 10)  	PLUS '+' 
(785, 11)  	IDENTIFIER 'messages' 
(785, 20)  	LESS '<' 
(785, 22)  	IDENTIFIER 'audit_rate_limit' 
(785, 38)  	BRACKET_C ')' 
(785, 40)  	CURLY_BRACKET_O '{' 
(786, 9)  	IDENTIFIER 'retval' 
(786, 16)  	OP_ASSIGNMENT '=' 
(786, 18)  	NUMBER '1' 
(786, 19)  	SEMICOLON ';' 
(787, 5)  	CURLY_BRACKET_C '}' 
(787, 7)  	ELSE 'else' 
(787, 12)  	CURLY_BRACKET_O '{' 
(788, 9)  	IDENTIFIER 'now' 
(788, 17)  	OP_ASSIGNMENT '=' 
(788, 19)  	IDENTIFIER 'jiffies' 
(788, 26)  	SEMICOLON ';' 
(789, 9)  	IDENTIFIER 'elapsed' 
(789, 17)  	OP_ASSIGNMENT '=' 
(789, 19)  	IDENTIFIER 'now' 
(789, 23)  	MINUS '-' 
(789, 25)  	IDENTIFIER 'last_check' 
(789, 35)  	SEMICOLON ';' 
(790, 9)  	IF 'if' 
(790, 12)  	BRACKET_O '(' 
(790, 13)  	IDENTIFIER 'elapsed' 
(790, 21)  	GREATER '>' 
(790, 23)  	IDENTIFIER 'HZ' 
(790, 25)  	BRACKET_C ')' 
(790, 27)  	CURLY_BRACKET_O '{' 
(791, 13)  	IDENTIFIER 'last_check' 
(791, 24)  	OP_ASSIGNMENT '=' 
(791, 26)  	IDENTIFIER 'now' 
(791, 29)  	SEMICOLON ';' 
(792, 13)  	IDENTIFIER 'messages' 
(792, 24)  	OP_ASSIGNMENT '=' 
(792, 26)  	NUMBER '0' 
(792, 27)  	SEMICOLON ';' 
(793, 13)  	IDENTIFIER 'retval' 
(793, 24)  	OP_ASSIGNMENT '=' 
(793, 26)  	NUMBER '1' 
(793, 27)  	SEMICOLON ';' 
(794, 9)  	CURLY_BRACKET_C '}' 
(795, 5)  	CURLY_BRACKET_C '}' 
(796, 5)  	IDENTIFIER 'spin_unlock_irqrestore' 
(796, 27)  	BRACKET_O '(' 
(796, 28)  	AMPERSANT '&' 
(796, 29)  	IDENTIFIER 'lock' 
(796, 33)  	COMMA ',' 
(796, 35)  	IDENTIFIER 'flags' 
(796, 40)  	BRACKET_C ')' 
(796, 41)  	SEMICOLON ';' 
(798, 5)  	IDENTIFIER 'return' 
(798, 12)  	IDENTIFIER 'retval' 
(798, 18)  	SEMICOLON ';' 
(799, 1)  	CURLY_BRACKET_C '}' 
(809, 1)  	IDENTIFIER 'void' 
(809, 6)  	IDENTIFIER 'audit_log_lost' 
(809, 20)  	BRACKET_O '(' 
(809, 21)  	CONST 'const' 
(809, 27)  	TYPE_CHAR 'char' 
(809, 32)  	MULT '*' 
(809, 33)  	IDENTIFIER 'message' 
(809, 40)  	BRACKET_C ')' 
(810, 1)  	CURLY_BRACKET_O '{' 
(811, 5)  	IDENTIFIER 'static' 
(811, 12)  	TYPE_UNSIGNED 'unsigned' 
(811, 21)  	TYPE_LONG 'long' 
(811, 29)  	IDENTIFIER 'last_msg' 
(811, 38)  	OP_ASSIGNMENT '=' 
(811, 40)  	NUMBER '0' 
(811, 41)  	SEMICOLON ';' 
(812, 5)  	IDENTIFIER 'static' 
(812, 12)  	IDENTIFIER 'DEFINE_SPINLOCK' 
(812, 27)  	BRACKET_O '(' 
(812, 28)  	IDENTIFIER 'lock' 
(812, 32)  	BRACKET_C ')' 
(812, 33)  	SEMICOLON ';' 
(813, 5)  	TYPE_UNSIGNED 'unsigned' 
(813, 14)  	TYPE_LONG 'long' 
(813, 25)  	IDENTIFIER 'flags' 
(813, 30)  	SEMICOLON ';' 
(814, 5)  	TYPE_UNSIGNED 'unsigned' 
(814, 14)  	TYPE_LONG 'long' 
(814, 25)  	IDENTIFIER 'now' 
(814, 28)  	SEMICOLON ';' 
(815, 5)  	TYPE_INT 'int' 
(815, 17)  	IDENTIFIER 'print' 
(815, 22)  	SEMICOLON ';' 
(817, 5)  	IDENTIFIER 'atomic_inc' 
(817, 15)  	BRACKET_O '(' 
(817, 16)  	AMPERSANT '&' 
(817, 17)  	IDENTIFIER 'audit_lost' 
(817, 27)  	BRACKET_C ')' 
(817, 28)  	SEMICOLON ';' 
(819, 5)  	IDENTIFIER 'print' 
(819, 11)  	OP_ASSIGNMENT '=' 
(819, 13)  	BRACKET_O '(' 
(819, 14)  	IDENTIFIER 'audit_failure' 
(819, 28)  	EQ '==' 
(819, 31)  	IDENTIFIER 'AUDIT_FAIL_PANIC' 
(819, 48)  	OR '||' 
(819, 51)  	NOT '!' 
(819, 52)  	IDENTIFIER 'audit_rate_limit' 
(819, 68)  	BRACKET_C ')' 
(819, 69)  	SEMICOLON ';' 
(821, 5)  	IF 'if' 
(821, 8)  	BRACKET_O '(' 
(821, 9)  	NOT '!' 
(821, 10)  	IDENTIFIER 'print' 
(821, 15)  	BRACKET_C ')' 
(821, 17)  	CURLY_BRACKET_O '{' 
(822, 9)  	IDENTIFIER 'spin_lock_irqsave' 
(822, 26)  	BRACKET_O '(' 
(822, 27)  	AMPERSANT '&' 
(822, 28)  	IDENTIFIER 'lock' 
(822, 32)  	COMMA ',' 
(822, 34)  	IDENTIFIER 'flags' 
(822, 39)  	BRACKET_C ')' 
(822, 40)  	SEMICOLON ';' 
(823, 9)  	IDENTIFIER 'now' 
(823, 13)  	OP_ASSIGNMENT '=' 
(823, 15)  	IDENTIFIER 'jiffies' 
(823, 22)  	SEMICOLON ';' 
(824, 9)  	IF 'if' 
(824, 12)  	BRACKET_O '(' 
(824, 13)  	IDENTIFIER 'now' 
(824, 17)  	MINUS '-' 
(824, 19)  	IDENTIFIER 'last_msg' 
(824, 28)  	GREATER '>' 
(824, 30)  	IDENTIFIER 'HZ' 
(824, 32)  	BRACKET_C ')' 
(824, 34)  	CURLY_BRACKET_O '{' 
(825, 13)  	IDENTIFIER 'print' 
(825, 19)  	OP_ASSIGNMENT '=' 
(825, 21)  	NUMBER '1' 
(825, 22)  	SEMICOLON ';' 
(826, 13)  	IDENTIFIER 'last_msg' 
(826, 22)  	OP_ASSIGNMENT '=' 
(826, 24)  	IDENTIFIER 'now' 
(826, 27)  	SEMICOLON ';' 
(827, 9)  	CURLY_BRACKET_C '}' 
(828, 9)  	IDENTIFIER 'spin_unlock_irqrestore' 
(828, 31)  	BRACKET_O '(' 
(828, 32)  	AMPERSANT '&' 
(828, 33)  	IDENTIFIER 'lock' 
(828, 37)  	COMMA ',' 
(828, 39)  	IDENTIFIER 'flags' 
(828, 44)  	BRACKET_C ')' 
(828, 45)  	SEMICOLON ';' 
(829, 5)  	CURLY_BRACKET_C '}' 
(831, 5)  	IF 'if' 
(831, 8)  	BRACKET_O '(' 
(831, 9)  	IDENTIFIER 'print' 
(831, 14)  	BRACKET_C ')' 
(831, 16)  	CURLY_BRACKET_O '{' 
(832, 9)  	IDENTIFIER 'printk' 
(832, 15)  	BRACKET_O '(' 
(832, 16)  	IDENTIFIER 'KERN_WARNING' 
(833, 16)  	STRING '"audit: audit_lost=%d audit_rate_limit=%d audit_backlog_limit=%d\n"' 
(833, 83)  	COMMA ',' 
(834, 16)  	IDENTIFIER 'atomic_read' 
(834, 27)  	BRACKET_O '(' 
(834, 28)  	AMPERSANT '&' 
(834, 29)  	IDENTIFIER 'audit_lost' 
(834, 39)  	BRACKET_C ')' 
(834, 40)  	COMMA ',' 
(835, 16)  	IDENTIFIER 'audit_rate_limit' 
(835, 32)  	COMMA ',' 
(836, 16)  	IDENTIFIER 'audit_backlog_limit' 
(836, 35)  	BRACKET_C ')' 
(836, 36)  	SEMICOLON ';' 
(837, 9)  	IDENTIFIER 'audit_panic' 
(837, 20)  	BRACKET_O '(' 
(837, 21)  	IDENTIFIER 'message' 
(837, 28)  	BRACKET_C ')' 
(837, 29)  	SEMICOLON ';' 
(838, 5)  	CURLY_BRACKET_C '}' 
(839, 1)  	CURLY_BRACKET_C '}' 
(841, 1)  	IDENTIFIER 'static' 
(841, 8)  	TYPE_INT 'int' 
(841, 12)  	IDENTIFIER 'audit_set_rate_limit' 
(841, 32)  	BRACKET_O '(' 
(841, 33)  	TYPE_INT 'int' 
(841, 37)  	IDENTIFIER 'limit' 
(841, 42)  	COMMA ',' 
(841, 44)  	IDENTIFIER 'uid_t' 
(841, 50)  	IDENTIFIER 'loginuid' 
(841, 58)  	COMMA ',' 
(841, 60)  	IDENTIFIER 'u32' 
(841, 64)  	IDENTIFIER 'sid' 
(841, 67)  	BRACKET_C ')' 
(842, 1)  	CURLY_BRACKET_O '{' 
(843, 5)  	TYPE_INT 'int' 
(843, 9)  	IDENTIFIER 'res' 
(843, 12)  	COMMA ',' 
(843, 14)  	IDENTIFIER 'rc' 
(843, 17)  	OP_ASSIGNMENT '=' 
(843, 19)  	NUMBER '0' 
(843, 20)  	COMMA ',' 
(843, 22)  	IDENTIFIER 'old' 
(843, 26)  	OP_ASSIGNMENT '=' 
(843, 28)  	IDENTIFIER 'audit_rate_limit' 
(843, 44)  	SEMICOLON ';' 
(846, 5)  	IF 'if' 
(846, 8)  	BRACKET_O '(' 
(846, 9)  	IDENTIFIER 'audit_enabled' 
(846, 23)  	EQ '==' 
(846, 26)  	NUMBER '2' 
(846, 27)  	BRACKET_C ')' 
(847, 9)  	IDENTIFIER 'res' 
(847, 13)  	OP_ASSIGNMENT '=' 
(847, 15)  	NUMBER '0' 
(847, 16)  	SEMICOLON ';' 
(848, 5)  	ELSE 'else' 
(849, 9)  	IDENTIFIER 'res' 
(849, 13)  	OP_ASSIGNMENT '=' 
(849, 15)  	NUMBER '1' 
(849, 16)  	SEMICOLON ';' 
(851, 5)  	IF 'if' 
(851, 8)  	BRACKET_O '(' 
(851, 9)  	IDENTIFIER 'sid' 
(851, 12)  	BRACKET_C ')' 
(851, 14)  	CURLY_BRACKET_O '{' 
(852, 9)  	TYPE_CHAR 'char' 
(852, 14)  	MULT '*' 
(852, 15)  	IDENTIFIER 'ctx' 
(852, 19)  	OP_ASSIGNMENT '=' 
(852, 21)  	IDENTIFIER 'NULL' 
(852, 25)  	SEMICOLON ';' 
(853, 9)  	IDENTIFIER 'u32' 
(853, 13)  	IDENTIFIER 'len' 
(853, 16)  	SEMICOLON ';' 
(854, 9)  	IF 'if' 
(854, 12)  	BRACKET_O '(' 
(854, 13)  	BRACKET_O '(' 
(854, 14)  	IDENTIFIER 'rc' 
(854, 17)  	OP_ASSIGNMENT '=' 
(854, 19)  	IDENTIFIER 'selinux_sid_to_string' 
(854, 40)  	BRACKET_O '(' 
(854, 41)  	IDENTIFIER 'sid' 
(854, 44)  	COMMA ',' 
(854, 46)  	AMPERSANT '&' 
(854, 47)  	IDENTIFIER 'ctx' 
(854, 50)  	COMMA ',' 
(854, 52)  	AMPERSANT '&' 
(854, 53)  	IDENTIFIER 'len' 
(854, 56)  	BRACKET_C ')' 
(854, 57)  	BRACKET_C ')' 
(854, 59)  	EQ '==' 
(854, 62)  	NUMBER '0' 
(854, 63)  	BRACKET_C ')' 
(854, 65)  	CURLY_BRACKET_O '{' 
(855, 13)  	IDENTIFIER 'audit_log' 
(855, 22)  	BRACKET_O '(' 
(855, 23)  	IDENTIFIER 'NULL' 
(855, 27)  	COMMA ',' 
(855, 29)  	IDENTIFIER 'GFP_KERNEL' 
(855, 39)  	COMMA ',' 
(855, 41)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(855, 60)  	COMMA ',' 
(856, 17)  	STRING '"audit_rate_limit=%d old=%d by auid=%u"' 
(857, 17)  	STRING '" subj=%s res=%d"' 
(857, 34)  	COMMA ',' 
(858, 17)  	IDENTIFIER 'limit' 
(858, 22)  	COMMA ',' 
(858, 24)  	IDENTIFIER 'old' 
(858, 27)  	COMMA ',' 
(858, 29)  	IDENTIFIER 'loginuid' 
(858, 37)  	COMMA ',' 
(858, 39)  	IDENTIFIER 'ctx' 
(858, 42)  	COMMA ',' 
(858, 44)  	IDENTIFIER 'res' 
(858, 47)  	BRACKET_C ')' 
(858, 48)  	SEMICOLON ';' 
(859, 13)  	IDENTIFIER 'kfree' 
(859, 18)  	BRACKET_O '(' 
(859, 19)  	IDENTIFIER 'ctx' 
(859, 22)  	BRACKET_C ')' 
(859, 23)  	SEMICOLON ';' 
(860, 9)  	CURLY_BRACKET_C '}' 
(860, 11)  	ELSE 'else' 
(861, 13)  	IDENTIFIER 'res' 
(861, 17)  	OP_ASSIGNMENT '=' 
(861, 19)  	NUMBER '0' 
(861, 20)  	SEMICOLON ';' 
(862, 5)  	CURLY_BRACKET_C '}' 
(863, 5)  	IDENTIFIER 'audit_log' 
(863, 14)  	BRACKET_O '(' 
(863, 15)  	IDENTIFIER 'NULL' 
(863, 19)  	COMMA ',' 
(863, 21)  	IDENTIFIER 'GFP_KERNEL' 
(863, 31)  	COMMA ',' 
(863, 33)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(863, 52)  	COMMA ',' 
(864, 9)  	STRING '"audit_rate_limit=%d old=%d by auid=%u res=%d"' 
(864, 55)  	COMMA ',' 
(865, 9)  	IDENTIFIER 'limit' 
(865, 14)  	COMMA ',' 
(865, 16)  	IDENTIFIER 'old' 
(865, 19)  	COMMA ',' 
(865, 21)  	IDENTIFIER 'loginuid' 
(865, 29)  	COMMA ',' 
(865, 31)  	IDENTIFIER 'res' 
(865, 34)  	BRACKET_C ')' 
(865, 35)  	SEMICOLON ';' 
(868, 5)  	IF 'if' 
(868, 8)  	BRACKET_O '(' 
(868, 9)  	IDENTIFIER 'res' 
(868, 13)  	EQ '==' 
(868, 16)  	NUMBER '1' 
(868, 17)  	BRACKET_C ')' 
(869, 9)  	IDENTIFIER 'audit_rate_limit' 
(869, 26)  	OP_ASSIGNMENT '=' 
(869, 28)  	IDENTIFIER 'limit' 
(869, 33)  	SEMICOLON ';' 
(871, 5)  	ELSE 'else' 
(871, 10)  	IF 'if' 
(871, 13)  	BRACKET_O '(' 
(871, 14)  	IDENTIFIER 'rc' 
(871, 17)  	EQ '==' 
(871, 20)  	NUMBER '0' 
(871, 21)  	BRACKET_C ')' 
(872, 9)  	IDENTIFIER 'rc' 
(872, 12)  	OP_ASSIGNMENT '=' 
(872, 14)  	MINUS '-' 
(872, 15)  	IDENTIFIER 'EPERM' 
(872, 20)  	SEMICOLON ';' 
(873, 5)  	IDENTIFIER 'return' 
(873, 12)  	IDENTIFIER 'rc' 
(873, 14)  	SEMICOLON ';' 
(874, 1)  	CURLY_BRACKET_C '}' 
(876, 1)  	IDENTIFIER 'static' 
(876, 8)  	TYPE_INT 'int' 
(876, 12)  	IDENTIFIER 'audit_set_backlog_limit' 
(876, 35)  	BRACKET_O '(' 
(876, 36)  	TYPE_INT 'int' 
(876, 40)  	IDENTIFIER 'limit' 
(876, 45)  	COMMA ',' 
(876, 47)  	IDENTIFIER 'uid_t' 
(876, 53)  	IDENTIFIER 'loginuid' 
(876, 61)  	COMMA ',' 
(876, 63)  	IDENTIFIER 'u32' 
(876, 67)  	IDENTIFIER 'sid' 
(876, 70)  	BRACKET_C ')' 
(877, 1)  	CURLY_BRACKET_O '{' 
(878, 5)  	TYPE_INT 'int' 
(878, 9)  	IDENTIFIER 'res' 
(878, 12)  	COMMA ',' 
(878, 14)  	IDENTIFIER 'rc' 
(878, 17)  	OP_ASSIGNMENT '=' 
(878, 19)  	NUMBER '0' 
(878, 20)  	COMMA ',' 
(878, 22)  	IDENTIFIER 'old' 
(878, 26)  	OP_ASSIGNMENT '=' 
(878, 28)  	IDENTIFIER 'audit_backlog_limit' 
(878, 47)  	SEMICOLON ';' 
(881, 5)  	IF 'if' 
(881, 8)  	BRACKET_O '(' 
(881, 9)  	IDENTIFIER 'audit_enabled' 
(881, 23)  	EQ '==' 
(881, 26)  	NUMBER '2' 
(881, 27)  	BRACKET_C ')' 
(882, 9)  	IDENTIFIER 'res' 
(882, 13)  	OP_ASSIGNMENT '=' 
(882, 15)  	NUMBER '0' 
(882, 16)  	SEMICOLON ';' 
(883, 5)  	ELSE 'else' 
(884, 9)  	IDENTIFIER 'res' 
(884, 13)  	OP_ASSIGNMENT '=' 
(884, 15)  	NUMBER '1' 
(884, 16)  	SEMICOLON ';' 
(886, 5)  	IF 'if' 
(886, 8)  	BRACKET_O '(' 
(886, 9)  	IDENTIFIER 'sid' 
(886, 12)  	BRACKET_C ')' 
(886, 14)  	CURLY_BRACKET_O '{' 
(887, 9)  	TYPE_CHAR 'char' 
(887, 14)  	MULT '*' 
(887, 15)  	IDENTIFIER 'ctx' 
(887, 19)  	OP_ASSIGNMENT '=' 
(887, 21)  	IDENTIFIER 'NULL' 
(887, 25)  	SEMICOLON ';' 
(888, 9)  	IDENTIFIER 'u32' 
(888, 13)  	IDENTIFIER 'len' 
(888, 16)  	SEMICOLON ';' 
(889, 9)  	IF 'if' 
(889, 12)  	BRACKET_O '(' 
(889, 13)  	BRACKET_O '(' 
(889, 14)  	IDENTIFIER 'rc' 
(889, 17)  	OP_ASSIGNMENT '=' 
(889, 19)  	IDENTIFIER 'selinux_sid_to_string' 
(889, 40)  	BRACKET_O '(' 
(889, 41)  	IDENTIFIER 'sid' 
(889, 44)  	COMMA ',' 
(889, 46)  	AMPERSANT '&' 
(889, 47)  	IDENTIFIER 'ctx' 
(889, 50)  	COMMA ',' 
(889, 52)  	AMPERSANT '&' 
(889, 53)  	IDENTIFIER 'len' 
(889, 56)  	BRACKET_C ')' 
(889, 57)  	BRACKET_C ')' 
(889, 59)  	EQ '==' 
(889, 62)  	NUMBER '0' 
(889, 63)  	BRACKET_C ')' 
(889, 65)  	CURLY_BRACKET_O '{' 
(890, 13)  	IDENTIFIER 'audit_log' 
(890, 22)  	BRACKET_O '(' 
(890, 23)  	IDENTIFIER 'NULL' 
(890, 27)  	COMMA ',' 
(890, 29)  	IDENTIFIER 'GFP_KERNEL' 
(890, 39)  	COMMA ',' 
(890, 41)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(890, 60)  	COMMA ',' 
(891, 17)  	STRING '"audit_backlog_limit=%d old=%d by auid=%u"' 
(892, 17)  	STRING '" subj=%s res=%d"' 
(892, 34)  	COMMA ',' 
(893, 17)  	IDENTIFIER 'limit' 
(893, 22)  	COMMA ',' 
(893, 24)  	IDENTIFIER 'old' 
(893, 27)  	COMMA ',' 
(893, 29)  	IDENTIFIER 'loginuid' 
(893, 37)  	COMMA ',' 
(893, 39)  	IDENTIFIER 'ctx' 
(893, 42)  	COMMA ',' 
(893, 44)  	IDENTIFIER 'res' 
(893, 47)  	BRACKET_C ')' 
(893, 48)  	SEMICOLON ';' 
(894, 13)  	IDENTIFIER 'kfree' 
(894, 18)  	BRACKET_O '(' 
(894, 19)  	IDENTIFIER 'ctx' 
(894, 22)  	BRACKET_C ')' 
(894, 23)  	SEMICOLON ';' 
(895, 9)  	CURLY_BRACKET_C '}' 
(895, 11)  	ELSE 'else' 
(896, 13)  	IDENTIFIER 'res' 
(896, 17)  	OP_ASSIGNMENT '=' 
(896, 19)  	NUMBER '0' 
(896, 20)  	SEMICOLON ';' 
(897, 5)  	CURLY_BRACKET_C '}' 
(898, 5)  	IDENTIFIER 'audit_log' 
(898, 14)  	BRACKET_O '(' 
(898, 15)  	IDENTIFIER 'NULL' 
(898, 19)  	COMMA ',' 
(898, 21)  	IDENTIFIER 'GFP_KERNEL' 
(898, 31)  	COMMA ',' 
(898, 33)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(898, 52)  	COMMA ',' 
(899, 9)  	STRING '"audit_backlog_limit=%d old=%d by auid=%u res=%d"' 
(899, 58)  	COMMA ',' 
(900, 9)  	IDENTIFIER 'limit' 
(900, 14)  	COMMA ',' 
(900, 16)  	IDENTIFIER 'old' 
(900, 19)  	COMMA ',' 
(900, 21)  	IDENTIFIER 'loginuid' 
(900, 29)  	COMMA ',' 
(900, 31)  	IDENTIFIER 'res' 
(900, 34)  	BRACKET_C ')' 
(900, 35)  	SEMICOLON ';' 
(903, 5)  	IF 'if' 
(903, 8)  	BRACKET_O '(' 
(903, 9)  	IDENTIFIER 'res' 
(903, 13)  	EQ '==' 
(903, 16)  	NUMBER '1' 
(903, 17)  	BRACKET_C ')' 
(904, 9)  	IDENTIFIER 'audit_backlog_limit' 
(904, 29)  	OP_ASSIGNMENT '=' 
(904, 31)  	IDENTIFIER 'limit' 
(904, 36)  	SEMICOLON ';' 
(906, 5)  	ELSE 'else' 
(906, 10)  	IF 'if' 
(906, 13)  	BRACKET_O '(' 
(906, 14)  	IDENTIFIER 'rc' 
(906, 17)  	EQ '==' 
(906, 20)  	NUMBER '0' 
(906, 21)  	BRACKET_C ')' 
(907, 9)  	IDENTIFIER 'rc' 
(907, 12)  	OP_ASSIGNMENT '=' 
(907, 14)  	MINUS '-' 
(907, 15)  	IDENTIFIER 'EPERM' 
(907, 20)  	SEMICOLON ';' 
(908, 5)  	IDENTIFIER 'return' 
(908, 12)  	IDENTIFIER 'rc' 
(908, 14)  	SEMICOLON ';' 
(909, 1)  	CURLY_BRACKET_C '}' 
(911, 1)  	IDENTIFIER 'static' 
(911, 8)  	TYPE_INT 'int' 
(911, 12)  	IDENTIFIER 'audit_set_enabled' 
(911, 29)  	BRACKET_O '(' 
(911, 30)  	TYPE_INT 'int' 
(911, 34)  	IDENTIFIER 'state' 
(911, 39)  	COMMA ',' 
(911, 41)  	IDENTIFIER 'uid_t' 
(911, 47)  	IDENTIFIER 'loginuid' 
(911, 55)  	COMMA ',' 
(911, 57)  	IDENTIFIER 'u32' 
(911, 61)  	IDENTIFIER 'sid' 
(911, 64)  	BRACKET_C ')' 
(912, 1)  	CURLY_BRACKET_O '{' 
(913, 5)  	TYPE_INT 'int' 
(913, 9)  	IDENTIFIER 'res' 
(913, 12)  	COMMA ',' 
(913, 14)  	IDENTIFIER 'rc' 
(913, 17)  	OP_ASSIGNMENT '=' 
(913, 19)  	NUMBER '0' 
(913, 20)  	COMMA ',' 
(913, 22)  	IDENTIFIER 'old' 
(913, 26)  	OP_ASSIGNMENT '=' 
(913, 28)  	IDENTIFIER 'audit_enabled' 
(913, 41)  	SEMICOLON ';' 
(915, 5)  	IF 'if' 
(915, 8)  	BRACKET_O '(' 
(915, 9)  	IDENTIFIER 'state' 
(915, 15)  	LESS '<' 
(915, 17)  	NUMBER '0' 
(915, 19)  	OR '||' 
(915, 22)  	IDENTIFIER 'state' 
(915, 28)  	GREATER '>' 
(915, 30)  	NUMBER '2' 
(915, 31)  	BRACKET_C ')' 
(916, 9)  	IDENTIFIER 'return' 
(916, 16)  	MINUS '-' 
(916, 17)  	IDENTIFIER 'EINVAL' 
(916, 23)  	SEMICOLON ';' 
(919, 5)  	IF 'if' 
(919, 8)  	BRACKET_O '(' 
(919, 9)  	IDENTIFIER 'audit_enabled' 
(919, 23)  	EQ '==' 
(919, 26)  	NUMBER '2' 
(919, 27)  	BRACKET_C ')' 
(920, 9)  	IDENTIFIER 'res' 
(920, 13)  	OP_ASSIGNMENT '=' 
(920, 15)  	NUMBER '0' 
(920, 16)  	SEMICOLON ';' 
(921, 5)  	ELSE 'else' 
(922, 9)  	IDENTIFIER 'res' 
(922, 13)  	OP_ASSIGNMENT '=' 
(922, 15)  	NUMBER '1' 
(922, 16)  	SEMICOLON ';' 
(924, 5)  	IF 'if' 
(924, 8)  	BRACKET_O '(' 
(924, 9)  	IDENTIFIER 'sid' 
(924, 12)  	BRACKET_C ')' 
(924, 14)  	CURLY_BRACKET_O '{' 
(925, 9)  	TYPE_CHAR 'char' 
(925, 14)  	MULT '*' 
(925, 15)  	IDENTIFIER 'ctx' 
(925, 19)  	OP_ASSIGNMENT '=' 
(925, 21)  	IDENTIFIER 'NULL' 
(925, 25)  	SEMICOLON ';' 
(926, 9)  	IDENTIFIER 'u32' 
(926, 13)  	IDENTIFIER 'len' 
(926, 16)  	SEMICOLON ';' 
(927, 9)  	IF 'if' 
(927, 12)  	BRACKET_O '(' 
(927, 13)  	BRACKET_O '(' 
(927, 14)  	IDENTIFIER 'rc' 
(927, 17)  	OP_ASSIGNMENT '=' 
(927, 19)  	IDENTIFIER 'selinux_sid_to_string' 
(927, 40)  	BRACKET_O '(' 
(927, 41)  	IDENTIFIER 'sid' 
(927, 44)  	COMMA ',' 
(927, 46)  	AMPERSANT '&' 
(927, 47)  	IDENTIFIER 'ctx' 
(927, 50)  	COMMA ',' 
(927, 52)  	AMPERSANT '&' 
(927, 53)  	IDENTIFIER 'len' 
(927, 56)  	BRACKET_C ')' 
(927, 57)  	BRACKET_C ')' 
(927, 59)  	EQ '==' 
(927, 62)  	NUMBER '0' 
(927, 63)  	BRACKET_C ')' 
(927, 65)  	CURLY_BRACKET_O '{' 
(928, 13)  	IDENTIFIER 'audit_log' 
(928, 22)  	BRACKET_O '(' 
(928, 23)  	IDENTIFIER 'NULL' 
(928, 27)  	COMMA ',' 
(928, 29)  	IDENTIFIER 'GFP_KERNEL' 
(928, 39)  	COMMA ',' 
(928, 41)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(928, 60)  	COMMA ',' 
(929, 17)  	STRING '"audit_enabled=%d old=%d by auid=%u"' 
(930, 17)  	STRING '" subj=%s res=%d"' 
(930, 34)  	COMMA ',' 
(931, 17)  	IDENTIFIER 'state' 
(931, 22)  	COMMA ',' 
(931, 24)  	IDENTIFIER 'old' 
(931, 27)  	COMMA ',' 
(931, 29)  	IDENTIFIER 'loginuid' 
(931, 37)  	COMMA ',' 
(931, 39)  	IDENTIFIER 'ctx' 
(931, 42)  	COMMA ',' 
(931, 44)  	IDENTIFIER 'res' 
(931, 47)  	BRACKET_C ')' 
(931, 48)  	SEMICOLON ';' 
(932, 13)  	IDENTIFIER 'kfree' 
(932, 18)  	BRACKET_O '(' 
(932, 19)  	IDENTIFIER 'ctx' 
(932, 22)  	BRACKET_C ')' 
(932, 23)  	SEMICOLON ';' 
(933, 9)  	CURLY_BRACKET_C '}' 
(933, 11)  	ELSE 'else' 
(934, 13)  	IDENTIFIER 'res' 
(934, 17)  	OP_ASSIGNMENT '=' 
(934, 19)  	NUMBER '0' 
(934, 20)  	SEMICOLON ';' 
(935, 5)  	CURLY_BRACKET_C '}' 
(936, 5)  	IDENTIFIER 'audit_log' 
(936, 14)  	BRACKET_O '(' 
(936, 15)  	IDENTIFIER 'NULL' 
(936, 19)  	COMMA ',' 
(936, 21)  	IDENTIFIER 'GFP_KERNEL' 
(936, 31)  	COMMA ',' 
(936, 33)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(936, 52)  	COMMA ',' 
(937, 9)  	STRING '"audit_enabled=%d old=%d by auid=%u res=%d"' 
(937, 52)  	COMMA ',' 
(938, 9)  	IDENTIFIER 'state' 
(938, 14)  	COMMA ',' 
(938, 16)  	IDENTIFIER 'old' 
(938, 19)  	COMMA ',' 
(938, 21)  	IDENTIFIER 'loginuid' 
(938, 29)  	COMMA ',' 
(938, 31)  	IDENTIFIER 'res' 
(938, 34)  	BRACKET_C ')' 
(938, 35)  	SEMICOLON ';' 
(941, 5)  	IF 'if' 
(941, 8)  	BRACKET_O '(' 
(941, 9)  	IDENTIFIER 'res' 
(941, 13)  	EQ '==' 
(941, 16)  	NUMBER '1' 
(941, 17)  	BRACKET_C ')' 
(942, 9)  	IDENTIFIER 'audit_enabled' 
(942, 23)  	OP_ASSIGNMENT '=' 
(942, 25)  	IDENTIFIER 'state' 
(942, 30)  	SEMICOLON ';' 
(944, 5)  	ELSE 'else' 
(944, 10)  	IF 'if' 
(944, 13)  	BRACKET_O '(' 
(944, 14)  	IDENTIFIER 'rc' 
(944, 17)  	EQ '==' 
(944, 20)  	NUMBER '0' 
(944, 21)  	BRACKET_C ')' 
(945, 9)  	IDENTIFIER 'rc' 
(945, 12)  	OP_ASSIGNMENT '=' 
(945, 14)  	MINUS '-' 
(945, 15)  	IDENTIFIER 'EPERM' 
(945, 20)  	SEMICOLON ';' 
(946, 5)  	IDENTIFIER 'return' 
(946, 12)  	IDENTIFIER 'rc' 
(946, 14)  	SEMICOLON ';' 
(947, 1)  	CURLY_BRACKET_C '}' 
(949, 1)  	IDENTIFIER 'static' 
(949, 8)  	TYPE_INT 'int' 
(949, 12)  	IDENTIFIER 'audit_set_failure' 
(949, 29)  	BRACKET_O '(' 
(949, 30)  	TYPE_INT 'int' 
(949, 34)  	IDENTIFIER 'state' 
(949, 39)  	COMMA ',' 
(949, 41)  	IDENTIFIER 'uid_t' 
(949, 47)  	IDENTIFIER 'loginuid' 
(949, 55)  	COMMA ',' 
(949, 57)  	IDENTIFIER 'u32' 
(949, 61)  	IDENTIFIER 'sid' 
(949, 64)  	BRACKET_C ')' 
(950, 1)  	CURLY_BRACKET_O '{' 
(951, 5)  	TYPE_INT 'int' 
(951, 9)  	IDENTIFIER 'res' 
(951, 12)  	COMMA ',' 
(951, 14)  	IDENTIFIER 'rc' 
(951, 17)  	OP_ASSIGNMENT '=' 
(951, 19)  	NUMBER '0' 
(951, 20)  	COMMA ',' 
(951, 22)  	IDENTIFIER 'old' 
(951, 26)  	OP_ASSIGNMENT '=' 
(951, 28)  	IDENTIFIER 'audit_failure' 
(951, 41)  	SEMICOLON ';' 
(953, 5)  	IF 'if' 
(953, 8)  	BRACKET_O '(' 
(953, 9)  	IDENTIFIER 'state' 
(953, 15)  	NOT_EQ '!=' 
(953, 18)  	IDENTIFIER 'AUDIT_FAIL_SILENT' 
(954, 9)  	AND '&&' 
(954, 12)  	IDENTIFIER 'state' 
(954, 18)  	NOT_EQ '!=' 
(954, 21)  	IDENTIFIER 'AUDIT_FAIL_PRINTK' 
(955, 9)  	AND '&&' 
(955, 12)  	IDENTIFIER 'state' 
(955, 18)  	NOT_EQ '!=' 
(955, 21)  	IDENTIFIER 'AUDIT_FAIL_PANIC' 
(955, 37)  	BRACKET_C ')' 
(956, 9)  	IDENTIFIER 'return' 
(956, 16)  	MINUS '-' 
(956, 17)  	IDENTIFIER 'EINVAL' 
(956, 23)  	SEMICOLON ';' 
(959, 5)  	IF 'if' 
(959, 8)  	BRACKET_O '(' 
(959, 9)  	IDENTIFIER 'audit_enabled' 
(959, 23)  	EQ '==' 
(959, 26)  	NUMBER '2' 
(959, 27)  	BRACKET_C ')' 
(960, 9)  	IDENTIFIER 'res' 
(960, 13)  	OP_ASSIGNMENT '=' 
(960, 15)  	NUMBER '0' 
(960, 16)  	SEMICOLON ';' 
(961, 5)  	ELSE 'else' 
(962, 9)  	IDENTIFIER 'res' 
(962, 13)  	OP_ASSIGNMENT '=' 
(962, 15)  	NUMBER '1' 
(962, 16)  	SEMICOLON ';' 
(964, 5)  	IF 'if' 
(964, 8)  	BRACKET_O '(' 
(964, 9)  	IDENTIFIER 'sid' 
(964, 12)  	BRACKET_C ')' 
(964, 14)  	CURLY_BRACKET_O '{' 
(965, 9)  	TYPE_CHAR 'char' 
(965, 14)  	MULT '*' 
(965, 15)  	IDENTIFIER 'ctx' 
(965, 19)  	OP_ASSIGNMENT '=' 
(965, 21)  	IDENTIFIER 'NULL' 
(965, 25)  	SEMICOLON ';' 
(966, 9)  	IDENTIFIER 'u32' 
(966, 13)  	IDENTIFIER 'len' 
(966, 16)  	SEMICOLON ';' 
(967, 9)  	IF 'if' 
(967, 12)  	BRACKET_O '(' 
(967, 13)  	BRACKET_O '(' 
(967, 14)  	IDENTIFIER 'rc' 
(967, 17)  	OP_ASSIGNMENT '=' 
(967, 19)  	IDENTIFIER 'selinux_sid_to_string' 
(967, 40)  	BRACKET_O '(' 
(967, 41)  	IDENTIFIER 'sid' 
(967, 44)  	COMMA ',' 
(967, 46)  	AMPERSANT '&' 
(967, 47)  	IDENTIFIER 'ctx' 
(967, 50)  	COMMA ',' 
(967, 52)  	AMPERSANT '&' 
(967, 53)  	IDENTIFIER 'len' 
(967, 56)  	BRACKET_C ')' 
(967, 57)  	BRACKET_C ')' 
(967, 59)  	EQ '==' 
(967, 62)  	NUMBER '0' 
(967, 63)  	BRACKET_C ')' 
(967, 65)  	CURLY_BRACKET_O '{' 
(968, 13)  	IDENTIFIER 'audit_log' 
(968, 22)  	BRACKET_O '(' 
(968, 23)  	IDENTIFIER 'NULL' 
(968, 27)  	COMMA ',' 
(968, 29)  	IDENTIFIER 'GFP_KERNEL' 
(968, 39)  	COMMA ',' 
(968, 41)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(968, 60)  	COMMA ',' 
(969, 17)  	STRING '"audit_failure=%d old=%d by auid=%u"' 
(970, 17)  	STRING '" subj=%s res=%d"' 
(970, 34)  	COMMA ',' 
(971, 17)  	IDENTIFIER 'state' 
(971, 22)  	COMMA ',' 
(971, 24)  	IDENTIFIER 'old' 
(971, 27)  	COMMA ',' 
(971, 29)  	IDENTIFIER 'loginuid' 
(971, 37)  	COMMA ',' 
(971, 39)  	IDENTIFIER 'ctx' 
(971, 42)  	COMMA ',' 
(971, 44)  	IDENTIFIER 'res' 
(971, 47)  	BRACKET_C ')' 
(971, 48)  	SEMICOLON ';' 
(972, 13)  	IDENTIFIER 'kfree' 
(972, 18)  	BRACKET_O '(' 
(972, 19)  	IDENTIFIER 'ctx' 
(972, 22)  	BRACKET_C ')' 
(972, 23)  	SEMICOLON ';' 
(973, 9)  	CURLY_BRACKET_C '}' 
(973, 11)  	ELSE 'else' 
(974, 13)  	IDENTIFIER 'res' 
(974, 17)  	OP_ASSIGNMENT '=' 
(974, 19)  	NUMBER '0' 
(974, 20)  	SEMICOLON ';' 
(975, 5)  	CURLY_BRACKET_C '}' 
(976, 5)  	IDENTIFIER 'audit_log' 
(976, 14)  	BRACKET_O '(' 
(976, 15)  	IDENTIFIER 'NULL' 
(976, 19)  	COMMA ',' 
(976, 21)  	IDENTIFIER 'GFP_KERNEL' 
(976, 31)  	COMMA ',' 
(976, 33)  	IDENTIFIER 'AUDIT_CONFIG_CHANGE' 
(976, 52)  	COMMA ',' 
(977, 9)  	STRING '"audit_failure=%d old=%d by auid=%u res=%d"' 
(977, 52)  	COMMA ',' 
(978, 9)  	IDENTIFIER 'state' 
(978, 14)  	COMMA ',' 
(978, 16)  	IDENTIFIER 'old' 
(978, 19)  	COMMA ',' 
(978, 21)  	IDENTIFIER 'loginuid' 
(978, 29)  	COMMA ',' 
(978, 31)  	IDENTIFIER 'res' 
(978, 34)  	BRACKET_C ')' 
(978, 35)  	SEMICOLON ';' 
(981, 5)  	IF 'if' 
(981, 8)  	BRACKET_O '(' 
(981, 9)  	IDENTIFIER 'res' 
(981, 13)  	EQ '==' 
(981, 16)  	NUMBER '1' 
(981, 17)  	BRACKET_C ')' 
(982, 9)  	IDENTIFIER 'audit_failure' 
(982, 23)  	OP_ASSIGNMENT '=' 
(982, 25)  	IDENTIFIER 'state' 
(982, 30)  	SEMICOLON ';' 
(984, 5)  	ELSE 'else' 
(984, 10)  	IF 'if' 
(984, 13)  	BRACKET_O '(' 
(984, 14)  	IDENTIFIER 'rc' 
(984, 17)  	EQ '==' 
(984, 20)  	NUMBER '0' 
(984, 21)  	BRACKET_C ')' 
(985, 9)  	IDENTIFIER 'rc' 
(985, 12)  	OP_ASSIGNMENT '=' 
(985, 14)  	MINUS '-' 
(985, 15)  	IDENTIFIER 'EPERM' 
(985, 20)  	SEMICOLON ';' 
(986, 5)  	IDENTIFIER 'return' 
(986, 12)  	IDENTIFIER 'rc' 
(986, 14)  	SEMICOLON ';' 
(987, 1)  	CURLY_BRACKET_C '}' 
(989, 1)  	CONTINUE 'continue' 
(990, 1)  	CONTINUE 'continue' 
(991, 1)  	CONTINUE 'continue' 
(992, 1)  	STRING '"End of Example"' 
(993, 1)  	<TERMINATION> 
[END] number of tokens = 3437
VALGRIND:   All heap blocks were freed -- no leaks are possible
