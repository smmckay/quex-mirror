## An Assert-Abortion might be an intended element of the experiment.
(1, 1)  	IDENTIFIER 'eins'
(1, 5)  	WHITESPACE ''
(1, 6)  	COMMENT ''
(1, 17)  	WHITESPACE ''
(1, 18)  	IDENTIFIER 'zwei'
(1, 22)  	WHITESPACE ''
(1, 23)  	COMMENT ''
(1, 34)  	WHITESPACE ''
(1, 35)  	IDENTIFIER 'drei'
(1, 39)  	WHITESPACE ''
(1, 40)  	COMMENT ''
(1, 90)  	WHITESPACE ''
(1, 91)  	IDENTIFIER 'sechs'
(1, 96)  	WHITESPACE ''
(1, 97)  	<TERMINATION>
  mode:       ALL;
  error_code: NoHandler_OnFailure;
              (* 'on_failure' has not been specified for mode*)
  counter: {
    _line_number_at_begin:   1;
    _line_number_at_end:     1;
    _column_number_at_begin: 97;
    _column_number_at_end:   98;
  }
  _mode_stack: {
    size:    8;
    content: []
  }
  buffer: {
    memory: {
      ownership: LEXICAL_ANALYZER;
      begin:     ((0x562d2f0f6f60)) (== _front);
      end:       begin + 131072 (== _back + 1);
    }
    _read_p:                      begin + 98, end - 130974;
    _lexeme_start_p:              begin + 97, end - 130975;
    _lexatom_at_lexeme_start:     0x0;
    filler: {
      lexatom_index_next_to_fill:     115;
      byte_n_per_lexatom:             1;
      _byte_order_reversion_active_f: false;
      type:                           plain;
      byte_loader: {
        handle_ownership: LEXICAL_ANALYZER;
        binary_mode_f:    true;
        element_size:     1;
        initial_position: 0;
        current_position: 115;
        type:             FILE;
        file_handle:      ((0x562d2f0f6c20));
        end_of_stream:    true;
      }
    }
    input: {
      lexatom_index_begin: 0;
      end_character_index: 115;
      end_p:               begin + 116, end - 130956;
    }


  }
_________________________________________________________________
   buffer front--------------------------->[0000] 0x0000
                                           [0001] 0x0065
                                           [0002] 0x0069
                                           [0003] 0x006E
                                           [0004] 0x0073
                                           ...
                                           [005F] 0x0073
                                           [0060] 0x0020
   lexeme start--------------------------->[0061] 0x002F
   input---------------------------------->[0062] 0x002A
                                           [0063] 0x0020
                                           [0064] 0x0066
                                           ...
                                           [0070] 0x002A
                                           [0071] 0x002A
                                           [0072] 0x002F
                                           [0073] 0x000A
   end of file---------------------------->[0074] 0x0000
                                           ...
                                           [1FFFB] 0x00FF
                                           [1FFFC] 0x00FF
                                           [1FFFD] 0x00FF
                                           [1FFFE] 0x00FF
   buffer back---------------------------->[1FFFF] 0x0000
_________________________________________________________________
clean
