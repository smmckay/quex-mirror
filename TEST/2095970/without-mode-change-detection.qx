// This lexer does not rely on implicit mode change.
// It does not rely on implicit RETURN and re-entry of the analyzer.
token {
   STRING_LITERAL;
   EVENT_MODE_CHANGE;
}

start = MODULE;

mode MODULE {
    <<EOF>> => QUEX_TKN_TERMINATION(LexemeNull);
    "\"" { 
        self << STRING; 
        self_send1(QUEX_TKN_EVENT_MODE_CHANGE, LexemeNull); 
        RETURN; 
    }
    [ \t\n] {}
}

mode STRING {
    on_entry { 
        self_accumulator_clear(); 
    }
    on_exit {
       self_accumulator_flush(QUEX_TKN_STRING_LITERAL);
       // the \" pattern will catch the token id and return it to the user.
    }
    <<EOF>> => QUEX_TKN_TERMINATION(LexemeNull);
    "\"" { 
        self << MODULE; 
        self_send1(QUEX_TKN_EVENT_MODE_CHANGE, LexemeNull); 
        RETURN;                          
    }
    .    { self_accumulator_add(Lexeme, LexemeEnd); CONTINUE; }
}
