// This lexer relies on the implicit mode change.
// It relies on implicit RETURN and re-entry of the analyzer.
token {
   STRING_LITERAL;
}

start = MODULE;

mode MODULE {
    <<EOF>> => QUEX_TKN_TERMINATION(LexemeNull);
    "\"" { 
        self << STRING; 
        /* CONTRARY: 'without detection':
         *    -- send a token 'MODE_CHANGE'
         *    -- explicitly RETURN.          */
    }
    [ \t\n] {}
}

mode STRING {
    on_entry { 
        self_accumulator_clear(); 
    }
    on_exit {
       self_accumulator_flush(QUEX_TKN_STRING_LITERAL);
       // the \" pattern will catch the token id and return it to the user.
    }
    <<EOF>> => QUEX_TKN_TERMINATION(LexemeNull);
    "\"" { 
        self << MODULE; 
        /* CONTRARY: 'without detection':
         *       -- send a token 'MODE_CHANGE'
         *       -- explicitly RETURN. */
    }
    .    { self_accumulator_add(Lexeme, LexemeEnd); CONTINUE; }
}
